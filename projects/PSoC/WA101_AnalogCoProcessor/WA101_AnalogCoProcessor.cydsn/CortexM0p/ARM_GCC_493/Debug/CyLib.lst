ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 121 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 30000340 		.word	1073938480
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoDisableWcoLock
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoDisableWcoLock, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 4


  51              	CySysClkImoDisableWcoLock:
  52              	.LFB4:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 147:.\Generated_Source\PSoC4/CyLib.c **** }
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 5


 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:.\Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:.\Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:.\Generated_Source\PSoC4/CyLib.c ****                 #else
 214:.\Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:.\Generated_Source\PSoC4/CyLib.c **** 
 218:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:.\Generated_Source\PSoC4/CyLib.c **** 
 220:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****                 {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****                 }
 227:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 229:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 6


 234:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:.\Generated_Source\PSoC4/CyLib.c **** 
 237:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:.\Generated_Source\PSoC4/CyLib.c **** 
 240:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:.\Generated_Source\PSoC4/CyLib.c ****             {
 243:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:.\Generated_Source\PSoC4/CyLib.c ****             }
 245:.\Generated_Source\PSoC4/CyLib.c ****             else
 246:.\Generated_Source\PSoC4/CyLib.c ****             {
 247:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 250:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:.\Generated_Source\PSoC4/CyLib.c **** 
 253:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:.\Generated_Source\PSoC4/CyLib.c ****             }
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 256:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:.\Generated_Source\PSoC4/CyLib.c **** 
 258:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:.\Generated_Source\PSoC4/CyLib.c **** 
 264:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:.\Generated_Source\PSoC4/CyLib.c ****         }
 266:.\Generated_Source\PSoC4/CyLib.c ****     }
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c **** 
 269:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:.\Generated_Source\PSoC4/CyLib.c ****     *
 273:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:.\Generated_Source\PSoC4/CyLib.c ****     *
 278:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:.\Generated_Source\PSoC4/CyLib.c ****     *
 281:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:.\Generated_Source\PSoC4/CyLib.c ****     {
  53              		.loc 1 283 0
  54              		.cfi_startproc
 284:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  55              		.loc 1 284 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1168     		ldr	r1, [r2]
  58 0004 024B     		ldr	r3, .L5+4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 7


  59 0006 0B40     		and	r3, r1
  60 0008 1360     		str	r3, [r2]
 285:.\Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 285 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 00000640 		.word	1074135040
  68 0010 FFFFFFBF 		.word	-1073741825
  69              		.cfi_endproc
  70              	.LFE4:
  71              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  72              		.section	.text.CySysClkImoStop,"ax",%progbits
  73              		.align	2
  74              		.global	CySysClkImoStop
  75              		.code	16
  76              		.thumb_func
  77              		.type	CySysClkImoStop, %function
  78              	CySysClkImoStop:
  79              	.LFB2:
 137:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  80              		.loc 1 137 0
  81              		.cfi_startproc
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 139:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  86              		.loc 1 139 0
  87 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  88              	.LVL0:
 146:.\Generated_Source\PSoC4/CyLib.c **** }
  89              		.loc 1 146 0
  90 0006 034A     		ldr	r2, .L8
  91 0008 1368     		ldr	r3, [r2]
  92 000a 5B00     		lsl	r3, r3, #1
  93 000c 5B08     		lsr	r3, r3, #1
  94 000e 1360     		str	r3, [r2]
 147:.\Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 147 0
  96              		@ sp needed
  97 0010 08BD     		pop	{r3, pc}
  98              	.L9:
  99 0012 C046     		.align	2
 100              	.L8:
 101 0014 30000340 		.word	1073938480
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	CySysClkImoStop, .-CySysClkImoStop
 105              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoGetWcoLock
 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoGetWcoLock, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 8


 111              	CySysClkImoGetWcoLock:
 112              	.LFB5:
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c **** 
 288:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:.\Generated_Source\PSoC4/CyLib.c ****     *
 292:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:.\Generated_Source\PSoC4/CyLib.c ****     *
 300:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:.\Generated_Source\PSoC4/CyLib.c ****     {
 113              		.loc 1 302 0
 114              		.cfi_startproc
 303:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 115              		.loc 1 303 0
 116 0000 034B     		ldr	r3, .L12
 117 0002 1868     		ldr	r0, [r3]
 118 0004 8023     		mov	r3, #128
 119 0006 DB05     		lsl	r3, r3, #23
 120 0008 1840     		and	r0, r3
 304:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 121              		.loc 1 304 0
 122 000a 00D0     		beq	.L11
 123 000c 0120     		mov	r0, #1
 124              	.L11:
 305:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:.\Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 306 0
 126              		@ sp needed
 127 000e 7047     		bx	lr
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 0010 00000640 		.word	1074135040
 132              		.cfi_endproc
 133              	.LFE5:
 134              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
 142              	.LFB6:
 307:.\Generated_Source\PSoC4/CyLib.c **** 
 308:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:.\Generated_Source\PSoC4/CyLib.c **** 
 310:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 9


 311:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:.\Generated_Source\PSoC4/CyLib.c ****     *
 319:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:.\Generated_Source\PSoC4/CyLib.c ****     *
 321:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:.\Generated_Source\PSoC4/CyLib.c ****     *
 324:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:.\Generated_Source\PSoC4/CyLib.c ****     {
 330:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:.\Generated_Source\PSoC4/CyLib.c **** 
 343:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:.\Generated_Source\PSoC4/CyLib.c ****     }
 345:.\Generated_Source\PSoC4/CyLib.c **** 
 346:.\Generated_Source\PSoC4/CyLib.c **** 
 347:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:.\Generated_Source\PSoC4/CyLib.c ****     *
 351:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:.\Generated_Source\PSoC4/CyLib.c ****     *
 353:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:.\Generated_Source\PSoC4/CyLib.c ****     *
 356:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:.\Generated_Source\PSoC4/CyLib.c ****     *
 359:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:.\Generated_Source\PSoC4/CyLib.c ****     {
 362:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 10


 368:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:.\Generated_Source\PSoC4/CyLib.c ****     }
 370:.\Generated_Source\PSoC4/CyLib.c **** 
 371:.\Generated_Source\PSoC4/CyLib.c **** 
 372:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:.\Generated_Source\PSoC4/CyLib.c ****     *
 376:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:.\Generated_Source\PSoC4/CyLib.c ****     *
 378:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:.\Generated_Source\PSoC4/CyLib.c ****     *
 381:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:.\Generated_Source\PSoC4/CyLib.c ****     *
 384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:.\Generated_Source\PSoC4/CyLib.c ****     {
 387:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:.\Generated_Source\PSoC4/CyLib.c ****     }
 391:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:.\Generated_Source\PSoC4/CyLib.c **** 
 393:.\Generated_Source\PSoC4/CyLib.c **** 
 394:.\Generated_Source\PSoC4/CyLib.c **** 
 395:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:.\Generated_Source\PSoC4/CyLib.c **** *
 399:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:.\Generated_Source\PSoC4/CyLib.c **** *
 401:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:.\Generated_Source\PSoC4/CyLib.c **** *
 403:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:.\Generated_Source\PSoC4/CyLib.c **** *
 414:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:.\Generated_Source\PSoC4/CyLib.c **** *
 417:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 11


 425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:.\Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 427 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 428:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:.\Generated_Source\PSoC4/CyLib.c **** 
 431:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 431 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 432:.\Generated_Source\PSoC4/CyLib.c **** 
 433:.\Generated_Source\PSoC4/CyLib.c **** 
 434:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 154              		.loc 1 434 0
 155 0008 0449     		ldr	r1, .L15
 156 000a 0A68     		ldr	r2, [r1]
 157 000c 0323     		mov	r3, #3
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 435:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:.\Generated_Source\PSoC4/CyLib.c **** 
 437:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:.\Generated_Source\PSoC4/CyLib.c ****     {
 440:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:.\Generated_Source\PSoC4/CyLib.c ****     }
 442:.\Generated_Source\PSoC4/CyLib.c ****     else
 443:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:.\Generated_Source\PSoC4/CyLib.c ****     {
 445:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 160              		.loc 1 445 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 446:.\Generated_Source\PSoC4/CyLib.c ****     }
 447:.\Generated_Source\PSoC4/CyLib.c **** 
 448:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 164              		.loc 1 448 0
 165 0014 0B60     		str	r3, [r1]
 449:.\Generated_Source\PSoC4/CyLib.c **** 
 450:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 450 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 451:.\Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 451 0
 170              		@ sp needed
 171              	.LVL6:
 172 001a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 12


 173              	.L16:
 174              		.align	2
 175              	.L15:
 176 001c 28000340 		.word	1073938472
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB7:
 452:.\Generated_Source\PSoC4/CyLib.c **** 
 453:.\Generated_Source\PSoC4/CyLib.c **** 
 454:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:.\Generated_Source\PSoC4/CyLib.c **** *
 458:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:.\Generated_Source\PSoC4/CyLib.c **** *
 460:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:.\Generated_Source\PSoC4/CyLib.c **** *
 462:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:.\Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 464 0
 189              		.cfi_startproc
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 465:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:.\Generated_Source\PSoC4/CyLib.c **** 
 468:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 194              		.loc 1 468 0
 195 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL7:
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:.\Generated_Source\PSoC4/CyLib.c ****     {
 473:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:.\Generated_Source\PSoC4/CyLib.c ****     }
 475:.\Generated_Source\PSoC4/CyLib.c ****     else
 476:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:.\Generated_Source\PSoC4/CyLib.c ****     {
 478:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 197              		.loc 1 478 0
 198 0006 044B     		ldr	r3, .L18
 199 0008 1B68     		ldr	r3, [r3]
 200 000a 0324     		mov	r4, #3
 201 000c 1C40     		and	r4, r3
 202              	.LVL8:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 13


 479:.\Generated_Source\PSoC4/CyLib.c ****     }
 480:.\Generated_Source\PSoC4/CyLib.c **** 
 481:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 203              		.loc 1 481 0
 204 000e FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL9:
 482:.\Generated_Source\PSoC4/CyLib.c **** 
 483:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:.\Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 484 0
 207 0012 201C     		mov	r0, r4
 208              		@ sp needed
 209              	.LVL10:
 210 0014 10BD     		pop	{r4, pc}
 211              	.L19:
 212 0016 C046     		.align	2
 213              	.L18:
 214 0018 28000340 		.word	1073938472
 215              		.cfi_endproc
 216              	.LFE7:
 217              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 218              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 219              		.align	2
 220              		.global	CySysClkWriteSysclkDiv
 221              		.code	16
 222              		.thumb_func
 223              		.type	CySysClkWriteSysclkDiv, %function
 224              	CySysClkWriteSysclkDiv:
 225              	.LFB8:
 485:.\Generated_Source\PSoC4/CyLib.c **** 
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:.\Generated_Source\PSoC4/CyLib.c **** *
 491:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:.\Generated_Source\PSoC4/CyLib.c **** *
 496:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:.\Generated_Source\PSoC4/CyLib.c **** *
 507:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 14


 513:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:.\Generated_Source\PSoC4/CyLib.c **** *
 517:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:.\Generated_Source\PSoC4/CyLib.c **** {
 226              		.loc 1 519 0
 227              		.cfi_startproc
 228              	.LVL11:
 229 0000 10B5     		push	{r4, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233 0002 041C     		mov	r4, r0
 520:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 234              		.loc 1 522 0
 235 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 236              	.LVL12:
 523:.\Generated_Source\PSoC4/CyLib.c **** 
 524:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 237              		.loc 1 524 0
 238 0008 A401     		lsl	r4, r4, #6
 239              	.LVL13:
 240 000a FF23     		mov	r3, #255
 241 000c 2340     		and	r3, r4
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 242              		.loc 1 526 0
 243 000e 0449     		ldr	r1, .L21
 244 0010 0A68     		ldr	r2, [r1]
 245 0012 C024     		mov	r4, #192
 246 0014 A243     		bic	r2, r4
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 247              		.loc 1 525 0
 248 0016 1343     		orr	r3, r2
 524:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 249              		.loc 1 524 0
 250 0018 0B60     		str	r3, [r1]
 527:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 251              		.loc 1 529 0
 252 001a FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL14:
 530:.\Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 530 0
 255              		@ sp needed
 256 001e 10BD     		pop	{r4, pc}
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0020 28000340 		.word	1073938472
 261              		.cfi_endproc
 262              	.LFE8:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 15


 263              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 264              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 265              		.align	2
 266              		.global	CySysClkWriteHfclkDiv
 267              		.code	16
 268              		.thumb_func
 269              		.type	CySysClkWriteHfclkDiv, %function
 270              	CySysClkWriteHfclkDiv:
 271              	.LFB10:
 531:.\Generated_Source\PSoC4/CyLib.c **** 
 532:.\Generated_Source\PSoC4/CyLib.c **** 
 533:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:.\Generated_Source\PSoC4/CyLib.c **** *
 537:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:.\Generated_Source\PSoC4/CyLib.c **** *
 542:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:.\Generated_Source\PSoC4/CyLib.c **** *
 550:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:.\Generated_Source\PSoC4/CyLib.c **** *
 555:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:.\Generated_Source\PSoC4/CyLib.c **** *
 565:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:.\Generated_Source\PSoC4/CyLib.c **** *
 569:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 573:.\Generated_Source\PSoC4/CyLib.c **** *
 574:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:.\Generated_Source\PSoC4/CyLib.c ****     {
 578:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 16


 579:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:.\Generated_Source\PSoC4/CyLib.c ****         #else
 582:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:.\Generated_Source\PSoC4/CyLib.c **** 
 589:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:.\Generated_Source\PSoC4/CyLib.c **** 
 597:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:.\Generated_Source\PSoC4/CyLib.c **** 
 599:.\Generated_Source\PSoC4/CyLib.c **** 
 600:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:.\Generated_Source\PSoC4/CyLib.c **** 
 602:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:.\Generated_Source\PSoC4/CyLib.c ****             {
 605:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:.\Generated_Source\PSoC4/CyLib.c ****             }
 608:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:.\Generated_Source\PSoC4/CyLib.c **** 
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:.\Generated_Source\PSoC4/CyLib.c **** 
 613:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:.\Generated_Source\PSoC4/CyLib.c ****                 {
 616:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:.\Generated_Source\PSoC4/CyLib.c **** 
 618:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:.\Generated_Source\PSoC4/CyLib.c ****                 {
 620:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:.\Generated_Source\PSoC4/CyLib.c ****                 }
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:.\Generated_Source\PSoC4/CyLib.c ****                 }
 626:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:.\Generated_Source\PSoC4/CyLib.c **** 
 628:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:.\Generated_Source\PSoC4/CyLib.c **** 
 630:.\Generated_Source\PSoC4/CyLib.c **** 
 631:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 17


 636:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:.\Generated_Source\PSoC4/CyLib.c **** 
 650:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:.\Generated_Source\PSoC4/CyLib.c ****         {
 652:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:.\Generated_Source\PSoC4/CyLib.c ****             {
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:.\Generated_Source\PSoC4/CyLib.c ****             }
 657:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:.\Generated_Source\PSoC4/CyLib.c ****             {
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:.\Generated_Source\PSoC4/CyLib.c ****             }
 662:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:.\Generated_Source\PSoC4/CyLib.c ****             {
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:.\Generated_Source\PSoC4/CyLib.c ****             }
 667:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:.\Generated_Source\PSoC4/CyLib.c ****             {
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:.\Generated_Source\PSoC4/CyLib.c ****             }
 672:.\Generated_Source\PSoC4/CyLib.c ****             else
 673:.\Generated_Source\PSoC4/CyLib.c ****             {
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:.\Generated_Source\PSoC4/CyLib.c ****             }
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c **** 
 682:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:.\Generated_Source\PSoC4/CyLib.c ****             *
 687:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 18


 693:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:.\Generated_Source\PSoC4/CyLib.c **** 
 697:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c ****             else
 702:.\Generated_Source\PSoC4/CyLib.c ****             {
 703:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:.\Generated_Source\PSoC4/CyLib.c ****             }
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:.\Generated_Source\PSoC4/CyLib.c ****             *
 711:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:.\Generated_Source\PSoC4/CyLib.c ****             {
 717:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:.\Generated_Source\PSoC4/CyLib.c ****             }
 721:.\Generated_Source\PSoC4/CyLib.c **** 
 722:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:.\Generated_Source\PSoC4/CyLib.c ****                 {
 727:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:.\Generated_Source\PSoC4/CyLib.c ****                 }
 729:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:.\Generated_Source\PSoC4/CyLib.c ****                 {
 731:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:.\Generated_Source\PSoC4/CyLib.c ****                 }
 733:.\Generated_Source\PSoC4/CyLib.c ****                 else
 734:.\Generated_Source\PSoC4/CyLib.c ****                 {
 735:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:.\Generated_Source\PSoC4/CyLib.c ****                 }
 737:.\Generated_Source\PSoC4/CyLib.c ****             #else
 738:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:.\Generated_Source\PSoC4/CyLib.c **** 
 741:.\Generated_Source\PSoC4/CyLib.c **** 
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:.\Generated_Source\PSoC4/CyLib.c **** 
 747:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 19


 750:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:.\Generated_Source\PSoC4/CyLib.c ****             }
 753:.\Generated_Source\PSoC4/CyLib.c ****         }
 754:.\Generated_Source\PSoC4/CyLib.c ****         else
 755:.\Generated_Source\PSoC4/CyLib.c ****         {
 756:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:.\Generated_Source\PSoC4/CyLib.c ****         }
 759:.\Generated_Source\PSoC4/CyLib.c **** 
 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:.\Generated_Source\PSoC4/CyLib.c ****             {
 772:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:.\Generated_Source\PSoC4/CyLib.c ****             }
 774:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:.\Generated_Source\PSoC4/CyLib.c **** 
 776:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:.\Generated_Source\PSoC4/CyLib.c ****     }
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c **** #else
 780:.\Generated_Source\PSoC4/CyLib.c **** 
 781:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:.\Generated_Source\PSoC4/CyLib.c ****     {
 783:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:.\Generated_Source\PSoC4/CyLib.c **** 
 786:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:.\Generated_Source\PSoC4/CyLib.c ****         
 790:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:.\Generated_Source\PSoC4/CyLib.c ****         #else
 797:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:.\Generated_Source\PSoC4/CyLib.c **** 
 804:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 20


 807:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:.\Generated_Source\PSoC4/CyLib.c ****                 }
 810:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:.\Generated_Source\PSoC4/CyLib.c ****                     {
 817:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:.\Generated_Source\PSoC4/CyLib.c **** 
 819:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:.\Generated_Source\PSoC4/CyLib.c ****                     {
 821:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:.\Generated_Source\PSoC4/CyLib.c ****                     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:.\Generated_Source\PSoC4/CyLib.c ****                     }
 827:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c **** 
 832:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c **** 
 836:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:.\Generated_Source\PSoC4/CyLib.c ****                 {
 840:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:.\Generated_Source\PSoC4/CyLib.c ****                 }
 842:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:.\Generated_Source\PSoC4/CyLib.c ****                 {
 844:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:.\Generated_Source\PSoC4/CyLib.c ****                 }
 846:.\Generated_Source\PSoC4/CyLib.c ****                 else
 847:.\Generated_Source\PSoC4/CyLib.c ****                 {
 848:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:.\Generated_Source\PSoC4/CyLib.c ****                 }
 850:.\Generated_Source\PSoC4/CyLib.c ****             #else
 851:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:.\Generated_Source\PSoC4/CyLib.c **** 
 858:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 862:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 21


 864:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:.\Generated_Source\PSoC4/CyLib.c ****             {
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:.\Generated_Source\PSoC4/CyLib.c **** 
 872:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:.\Generated_Source\PSoC4/CyLib.c ****             }
 877:.\Generated_Source\PSoC4/CyLib.c **** 
 878:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 {
 881:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:.\Generated_Source\PSoC4/CyLib.c ****                 }
 883:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:.\Generated_Source\PSoC4/CyLib.c ****         
 885:.\Generated_Source\PSoC4/CyLib.c ****         
 886:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:.\Generated_Source\PSoC4/CyLib.c ****                 {
 889:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:.\Generated_Source\PSoC4/CyLib.c ****                 }
 891:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:.\Generated_Source\PSoC4/CyLib.c **** 
 893:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:.\Generated_Source\PSoC4/CyLib.c ****         }
 895:.\Generated_Source\PSoC4/CyLib.c ****         else
 896:.\Generated_Source\PSoC4/CyLib.c ****         {
 897:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:.\Generated_Source\PSoC4/CyLib.c ****         }
 900:.\Generated_Source\PSoC4/CyLib.c ****     }
 901:.\Generated_Source\PSoC4/CyLib.c **** 
 902:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:.\Generated_Source\PSoC4/CyLib.c **** 
 904:.\Generated_Source\PSoC4/CyLib.c **** 
 905:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:.\Generated_Source\PSoC4/CyLib.c ****     *
 910:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:.\Generated_Source\PSoC4/CyLib.c ****     *
 916:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 22


 921:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:.\Generated_Source\PSoC4/CyLib.c ****     *
 931:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:.\Generated_Source\PSoC4/CyLib.c ****     {
 272              		.loc 1 933 0
 273              		.cfi_startproc
 274              	.LVL15:
 275 0000 10B5     		push	{r4, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279 0002 041C     		mov	r4, r0
 934:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:.\Generated_Source\PSoC4/CyLib.c **** 
 936:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 280              		.loc 1 936 0
 281 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 282              	.LVL16:
 937:.\Generated_Source\PSoC4/CyLib.c **** 
 938:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 283              		.loc 1 938 0
 284 0008 054A     		ldr	r2, .L24
 285 000a 1368     		ldr	r3, [r2]
 286 000c 0C21     		mov	r1, #12
 287 000e 8B43     		bic	r3, r1
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 288              		.loc 1 940 0
 289 0010 0939     		sub	r1, r1, #9
 290 0012 0C40     		and	r4, r1
 291              	.LVL17:
 292 0014 A400     		lsl	r4, r4, #2
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 293              		.loc 1 939 0
 294 0016 1C43     		orr	r4, r3
 938:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 295              		.loc 1 938 0
 296 0018 1460     		str	r4, [r2]
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 297              		.loc 1 942 0
 298 001a FFF7FEFF 		bl	CyExitCriticalSection
 299              	.LVL18:
 943:.\Generated_Source\PSoC4/CyLib.c ****     }
 300              		.loc 1 943 0
 301              		@ sp needed
 302 001e 10BD     		pop	{r4, pc}
 303              	.L25:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 23


 304              		.align	2
 305              	.L24:
 306 0020 28000340 		.word	1073938472
 307              		.cfi_endproc
 308              	.LFE10:
 309              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 310              		.section	.text.CySysGetResetReason,"ax",%progbits
 311              		.align	2
 312              		.global	CySysGetResetReason
 313              		.code	16
 314              		.thumb_func
 315              		.type	CySysGetResetReason, %function
 316              	CySysGetResetReason:
 317              	.LFB11:
 944:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:.\Generated_Source\PSoC4/CyLib.c **** 
 946:.\Generated_Source\PSoC4/CyLib.c **** 
 947:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:.\Generated_Source\PSoC4/CyLib.c **** 
 949:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:.\Generated_Source\PSoC4/CyLib.c ****     *
 953:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:.\Generated_Source\PSoC4/CyLib.c ****     *
 963:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:.\Generated_Source\PSoC4/CyLib.c ****     *
 965:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:.\Generated_Source\PSoC4/CyLib.c ****     *
 971:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:.\Generated_Source\PSoC4/CyLib.c ****     *
 975:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:.\Generated_Source\PSoC4/CyLib.c ****     *
 977:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:.\Generated_Source\PSoC4/CyLib.c ****     {
 980:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 24


 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:.\Generated_Source\PSoC4/CyLib.c ****         {
 999:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:.\Generated_Source\PSoC4/CyLib.c **** 
1001:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:.\Generated_Source\PSoC4/CyLib.c ****             {
1003:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:.\Generated_Source\PSoC4/CyLib.c ****                 {
1007:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:.\Generated_Source\PSoC4/CyLib.c ****                     break;
1009:.\Generated_Source\PSoC4/CyLib.c ****                 }
1010:.\Generated_Source\PSoC4/CyLib.c ****             }
1011:.\Generated_Source\PSoC4/CyLib.c **** 
1012:.\Generated_Source\PSoC4/CyLib.c ****         }
1013:.\Generated_Source\PSoC4/CyLib.c **** 
1014:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:.\Generated_Source\PSoC4/CyLib.c ****     }
1016:.\Generated_Source\PSoC4/CyLib.c **** 
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:.\Generated_Source\PSoC4/CyLib.c ****     *
1022:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:.\Generated_Source\PSoC4/CyLib.c ****     *
1024:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:.\Generated_Source\PSoC4/CyLib.c ****     *
1028:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:.\Generated_Source\PSoC4/CyLib.c ****     {
1031:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:.\Generated_Source\PSoC4/CyLib.c ****         #else
1038:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:.\Generated_Source\PSoC4/CyLib.c ****     }
1041:.\Generated_Source\PSoC4/CyLib.c **** 
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 25


1044:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:.\Generated_Source\PSoC4/CyLib.c ****     *
1049:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:.\Generated_Source\PSoC4/CyLib.c ****     *
1052:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:.\Generated_Source\PSoC4/CyLib.c ****     *
1055:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:.\Generated_Source\PSoC4/CyLib.c ****     *
1058:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:.\Generated_Source\PSoC4/CyLib.c ****     *
1060:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:.\Generated_Source\PSoC4/CyLib.c ****     {
1063:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:.\Generated_Source\PSoC4/CyLib.c **** 
1065:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:.\Generated_Source\PSoC4/CyLib.c ****         #else
1068:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:.\Generated_Source\PSoC4/CyLib.c **** 
1071:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:.\Generated_Source\PSoC4/CyLib.c ****     }
1073:.\Generated_Source\PSoC4/CyLib.c **** 
1074:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:.\Generated_Source\PSoC4/CyLib.c ****         *
1079:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:.\Generated_Source\PSoC4/CyLib.c ****         *
1094:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:.\Generated_Source\PSoC4/CyLib.c ****         *
1100:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 26


1101:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:.\Generated_Source\PSoC4/CyLib.c ****         {
1103:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:.\Generated_Source\PSoC4/CyLib.c ****             {
1107:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:.\Generated_Source\PSoC4/CyLib.c **** 
1109:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:.\Generated_Source\PSoC4/CyLib.c **** 
1112:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:.\Generated_Source\PSoC4/CyLib.c ****             }
1114:.\Generated_Source\PSoC4/CyLib.c ****             else
1115:.\Generated_Source\PSoC4/CyLib.c ****             {
1116:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:.\Generated_Source\PSoC4/CyLib.c ****             }
1119:.\Generated_Source\PSoC4/CyLib.c ****         }
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****     #else
1122:.\Generated_Source\PSoC4/CyLib.c **** 
1123:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:.\Generated_Source\PSoC4/CyLib.c ****         *
1127:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:.\Generated_Source\PSoC4/CyLib.c ****         *
1130:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:.\Generated_Source\PSoC4/CyLib.c ****         *
1140:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:.\Generated_Source\PSoC4/CyLib.c ****         *
1143:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:.\Generated_Source\PSoC4/CyLib.c ****         *
1146:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:.\Generated_Source\PSoC4/CyLib.c ****         *
1149:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:.\Generated_Source\PSoC4/CyLib.c ****         *
1152:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:.\Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 27


1158:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:.\Generated_Source\PSoC4/CyLib.c ****         *
1168:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *
1180:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:.\Generated_Source\PSoC4/CyLib.c ****         *
1189:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:.\Generated_Source\PSoC4/CyLib.c ****         {
1192:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:.\Generated_Source\PSoC4/CyLib.c **** 
1209:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:.\Generated_Source\PSoC4/CyLib.c **** 
1211:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:.\Generated_Source\PSoC4/CyLib.c ****         }
1213:.\Generated_Source\PSoC4/CyLib.c **** 
1214:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 28


1215:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:.\Generated_Source\PSoC4/CyLib.c ****         *
1219:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:.\Generated_Source\PSoC4/CyLib.c ****         *
1223:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:.\Generated_Source\PSoC4/CyLib.c ****         *
1225:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:.\Generated_Source\PSoC4/CyLib.c ****         *
1231:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *
1237:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:.\Generated_Source\PSoC4/CyLib.c ****         *
1240:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:.\Generated_Source\PSoC4/CyLib.c ****         {
1243:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:.\Generated_Source\PSoC4/CyLib.c **** 
1245:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:.\Generated_Source\PSoC4/CyLib.c **** 
1251:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:.\Generated_Source\PSoC4/CyLib.c **** 
1253:.\Generated_Source\PSoC4/CyLib.c **** 
1254:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:.\Generated_Source\PSoC4/CyLib.c ****             {
1257:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:.\Generated_Source\PSoC4/CyLib.c ****             }
1259:.\Generated_Source\PSoC4/CyLib.c ****             else
1260:.\Generated_Source\PSoC4/CyLib.c ****             {
1261:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:.\Generated_Source\PSoC4/CyLib.c **** 
1264:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:.\Generated_Source\PSoC4/CyLib.c ****                 {
1266:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:.\Generated_Source\PSoC4/CyLib.c ****                 }
1268:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:.\Generated_Source\PSoC4/CyLib.c ****                 {
1270:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:.\Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 29


1272:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:.\Generated_Source\PSoC4/CyLib.c ****                 {
1274:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:.\Generated_Source\PSoC4/CyLib.c ****                 }
1276:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c **** 
1297:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:.\Generated_Source\PSoC4/CyLib.c **** 
1300:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:.\Generated_Source\PSoC4/CyLib.c ****                 {
1304:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:.\Generated_Source\PSoC4/CyLib.c ****                 }
1307:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:.\Generated_Source\PSoC4/CyLib.c ****                 {
1309:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:.\Generated_Source\PSoC4/CyLib.c ****                 }
1311:.\Generated_Source\PSoC4/CyLib.c ****                 else
1312:.\Generated_Source\PSoC4/CyLib.c ****                 {
1313:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:.\Generated_Source\PSoC4/CyLib.c ****                 }
1315:.\Generated_Source\PSoC4/CyLib.c **** 
1316:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:.\Generated_Source\PSoC4/CyLib.c ****                 {
1319:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:.\Generated_Source\PSoC4/CyLib.c ****                 }
1321:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:.\Generated_Source\PSoC4/CyLib.c ****                 {
1323:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:.\Generated_Source\PSoC4/CyLib.c ****                 }
1325:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:.\Generated_Source\PSoC4/CyLib.c ****                 {
1327:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:.\Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 30


1329:.\Generated_Source\PSoC4/CyLib.c ****                 else
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:.\Generated_Source\PSoC4/CyLib.c **** 
1337:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:.\Generated_Source\PSoC4/CyLib.c **** 
1339:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:.\Generated_Source\PSoC4/CyLib.c ****                 {
1342:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****                 else
1346:.\Generated_Source\PSoC4/CyLib.c ****                 {
1347:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:.\Generated_Source\PSoC4/CyLib.c ****                     */
1350:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:.\Generated_Source\PSoC4/CyLib.c ****                 }
1352:.\Generated_Source\PSoC4/CyLib.c ****             }
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:.\Generated_Source\PSoC4/CyLib.c ****         }
1356:.\Generated_Source\PSoC4/CyLib.c **** 
1357:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:.\Generated_Source\PSoC4/CyLib.c **** 
1361:.\Generated_Source\PSoC4/CyLib.c **** 
1362:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:.\Generated_Source\PSoC4/CyLib.c ****     *
1367:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:.\Generated_Source\PSoC4/CyLib.c ****     *
1370:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:.\Generated_Source\PSoC4/CyLib.c ****     *
1373:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:.\Generated_Source\PSoC4/CyLib.c ****     *
1375:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
1384:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 31


1386:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:.\Generated_Source\PSoC4/CyLib.c ****     *
1391:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:.\Generated_Source\PSoC4/CyLib.c ****     {
1394:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:.\Generated_Source\PSoC4/CyLib.c ****         {
1400:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:.\Generated_Source\PSoC4/CyLib.c **** 
1402:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:.\Generated_Source\PSoC4/CyLib.c **** 
1405:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:.\Generated_Source\PSoC4/CyLib.c **** 
1408:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:.\Generated_Source\PSoC4/CyLib.c **** 
1410:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:.\Generated_Source\PSoC4/CyLib.c ****             {
1418:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:.\Generated_Source\PSoC4/CyLib.c **** 
1420:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:.\Generated_Source\PSoC4/CyLib.c ****                 {
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:.\Generated_Source\PSoC4/CyLib.c ****                     {
1425:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1428:.\Generated_Source\PSoC4/CyLib.c ****                     }
1429:.\Generated_Source\PSoC4/CyLib.c **** 
1430:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:.\Generated_Source\PSoC4/CyLib.c ****                 }
1433:.\Generated_Source\PSoC4/CyLib.c ****             }
1434:.\Generated_Source\PSoC4/CyLib.c ****         }
1435:.\Generated_Source\PSoC4/CyLib.c ****         else
1436:.\Generated_Source\PSoC4/CyLib.c ****         {
1437:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:.\Generated_Source\PSoC4/CyLib.c ****         }
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:.\Generated_Source\PSoC4/CyLib.c ****     }
1442:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 32


1443:.\Generated_Source\PSoC4/CyLib.c **** 
1444:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:.\Generated_Source\PSoC4/CyLib.c ****     *
1448:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:.\Generated_Source\PSoC4/CyLib.c ****     *
1450:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:.\Generated_Source\PSoC4/CyLib.c ****     *
1452:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:.\Generated_Source\PSoC4/CyLib.c ****     *
1456:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:.\Generated_Source\PSoC4/CyLib.c ****     *
1458:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:.\Generated_Source\PSoC4/CyLib.c ****     {
1461:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:.\Generated_Source\PSoC4/CyLib.c **** 
1464:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:.\Generated_Source\PSoC4/CyLib.c ****         {
1472:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:.\Generated_Source\PSoC4/CyLib.c ****         }
1474:.\Generated_Source\PSoC4/CyLib.c **** 
1475:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:.\Generated_Source\PSoC4/CyLib.c **** 
1477:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:.\Generated_Source\PSoC4/CyLib.c ****     }
1479:.\Generated_Source\PSoC4/CyLib.c **** 
1480:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:.\Generated_Source\PSoC4/CyLib.c ****     *
1486:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:.\Generated_Source\PSoC4/CyLib.c ****     *
1489:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:.\Generated_Source\PSoC4/CyLib.c ****     *
1491:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:.\Generated_Source\PSoC4/CyLib.c ****     *
1495:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:.\Generated_Source\PSoC4/CyLib.c ****     {
1498:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 33


1500:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:.\Generated_Source\PSoC4/CyLib.c ****         {
1502:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:.\Generated_Source\PSoC4/CyLib.c ****         }
1506:.\Generated_Source\PSoC4/CyLib.c ****     }
1507:.\Generated_Source\PSoC4/CyLib.c **** 
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:.\Generated_Source\PSoC4/CyLib.c ****     *
1513:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:.\Generated_Source\PSoC4/CyLib.c ****     *
1521:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:.\Generated_Source\PSoC4/CyLib.c ****     *
1527:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:.\Generated_Source\PSoC4/CyLib.c ****     *
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:.\Generated_Source\PSoC4/CyLib.c ****     *
1532:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:.\Generated_Source\PSoC4/CyLib.c ****     *
1540:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:.\Generated_Source\PSoC4/CyLib.c ****     {
1543:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:.\Generated_Source\PSoC4/CyLib.c **** 
1548:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:.\Generated_Source\PSoC4/CyLib.c **** 
1550:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:.\Generated_Source\PSoC4/CyLib.c **** 
1552:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 34


1557:.\Generated_Source\PSoC4/CyLib.c ****         {
1558:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:.\Generated_Source\PSoC4/CyLib.c **** 
1563:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:.\Generated_Source\PSoC4/CyLib.c **** 
1569:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:.\Generated_Source\PSoC4/CyLib.c ****         }
1571:.\Generated_Source\PSoC4/CyLib.c **** 
1572:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:.\Generated_Source\PSoC4/CyLib.c **** 
1574:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:.\Generated_Source\PSoC4/CyLib.c ****     }
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c **** 
1578:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLib.c ****     *
1582:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:.\Generated_Source\PSoC4/CyLib.c ****     *
1584:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:.\Generated_Source\PSoC4/CyLib.c ****     *
1592:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:.\Generated_Source\PSoC4/CyLib.c ****     *
1594:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:.\Generated_Source\PSoC4/CyLib.c ****     *
1598:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:.\Generated_Source\PSoC4/CyLib.c ****     *
1603:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:.\Generated_Source\PSoC4/CyLib.c ****     *
1606:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:.\Generated_Source\PSoC4/CyLib.c ****     *
1608:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:.\Generated_Source\PSoC4/CyLib.c ****     {
1611:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 35


1614:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:.\Generated_Source\PSoC4/CyLib.c ****         {
1618:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:.\Generated_Source\PSoC4/CyLib.c ****         }
1622:.\Generated_Source\PSoC4/CyLib.c **** 
1623:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:.\Generated_Source\PSoC4/CyLib.c ****     }
1625:.\Generated_Source\PSoC4/CyLib.c **** 
1626:.\Generated_Source\PSoC4/CyLib.c **** 
1627:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:.\Generated_Source\PSoC4/CyLib.c ****     *
1638:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:.\Generated_Source\PSoC4/CyLib.c ****     *
1641:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:.\Generated_Source\PSoC4/CyLib.c ****     {
1644:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:.\Generated_Source\PSoC4/CyLib.c **** 
1651:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:.\Generated_Source\PSoC4/CyLib.c **** 
1656:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:.\Generated_Source\PSoC4/CyLib.c ****     }
1658:.\Generated_Source\PSoC4/CyLib.c **** 
1659:.\Generated_Source\PSoC4/CyLib.c **** 
1660:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:.\Generated_Source\PSoC4/CyLib.c ****     *
1664:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
1669:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 36


1671:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:.\Generated_Source\PSoC4/CyLib.c ****     *
1676:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:.\Generated_Source\PSoC4/CyLib.c ****     {
1679:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:.\Generated_Source\PSoC4/CyLib.c **** 
1683:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:.\Generated_Source\PSoC4/CyLib.c ****         {
1690:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:.\Generated_Source\PSoC4/CyLib.c ****         }
1692:.\Generated_Source\PSoC4/CyLib.c **** 
1693:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:.\Generated_Source\PSoC4/CyLib.c ****     }
1695:.\Generated_Source\PSoC4/CyLib.c **** 
1696:.\Generated_Source\PSoC4/CyLib.c **** 
1697:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:.\Generated_Source\PSoC4/CyLib.c ****     *
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:.\Generated_Source\PSoC4/CyLib.c ****     *
1708:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:.\Generated_Source\PSoC4/CyLib.c ****     *
1712:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:.\Generated_Source\PSoC4/CyLib.c ****     *
1714:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:.\Generated_Source\PSoC4/CyLib.c ****     {
1717:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:.\Generated_Source\PSoC4/CyLib.c **** 
1722:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:.\Generated_Source\PSoC4/CyLib.c **** 
1725:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:.\Generated_Source\PSoC4/CyLib.c **** 
1727:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 37


1728:.\Generated_Source\PSoC4/CyLib.c ****     }
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** 
1731:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:.\Generated_Source\PSoC4/CyLib.c ****     *
1739:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:.\Generated_Source\PSoC4/CyLib.c ****     *
1744:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:.\Generated_Source\PSoC4/CyLib.c ****     *
1748:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:.\Generated_Source\PSoC4/CyLib.c ****     *
1752:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:.\Generated_Source\PSoC4/CyLib.c ****     *
1758:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:.\Generated_Source\PSoC4/CyLib.c ****     *
1760:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:.\Generated_Source\PSoC4/CyLib.c ****     *
1763:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:.\Generated_Source\PSoC4/CyLib.c ****     *
1766:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:.\Generated_Source\PSoC4/CyLib.c ****     {
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:.\Generated_Source\PSoC4/CyLib.c **** 
1772:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:.\Generated_Source\PSoC4/CyLib.c **** 
1775:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:.\Generated_Source\PSoC4/CyLib.c **** 
1781:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:.\Generated_Source\PSoC4/CyLib.c **** 
1784:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 38


1785:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:.\Generated_Source\PSoC4/CyLib.c ****         {
1793:.\Generated_Source\PSoC4/CyLib.c **** 
1794:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:.\Generated_Source\PSoC4/CyLib.c **** 
1798:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:.\Generated_Source\PSoC4/CyLib.c **** 
1802:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:.\Generated_Source\PSoC4/CyLib.c ****             {
1804:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:.\Generated_Source\PSoC4/CyLib.c ****                 {
1806:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:.\Generated_Source\PSoC4/CyLib.c **** 
1808:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:.\Generated_Source\PSoC4/CyLib.c **** 
1811:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:.\Generated_Source\PSoC4/CyLib.c **** 
1814:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:.\Generated_Source\PSoC4/CyLib.c **** 
1817:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:.\Generated_Source\PSoC4/CyLib.c ****                     {
1820:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1823:.\Generated_Source\PSoC4/CyLib.c ****                     }
1824:.\Generated_Source\PSoC4/CyLib.c ****                 }
1825:.\Generated_Source\PSoC4/CyLib.c **** 
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:.\Generated_Source\PSoC4/CyLib.c ****                 {
1829:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:.\Generated_Source\PSoC4/CyLib.c ****                     {
1831:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:.\Generated_Source\PSoC4/CyLib.c ****                     }
1833:.\Generated_Source\PSoC4/CyLib.c ****                 }
1834:.\Generated_Source\PSoC4/CyLib.c ****             }
1835:.\Generated_Source\PSoC4/CyLib.c **** 
1836:.\Generated_Source\PSoC4/CyLib.c ****         }
1837:.\Generated_Source\PSoC4/CyLib.c **** 
1838:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:.\Generated_Source\PSoC4/CyLib.c ****     }
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 39


1842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:.\Generated_Source\PSoC4/CyLib.c ****     *
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:.\Generated_Source\PSoC4/CyLib.c ****     *
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:.\Generated_Source\PSoC4/CyLib.c ****     *
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:.\Generated_Source\PSoC4/CyLib.c ****     *
1855:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:.\Generated_Source\PSoC4/CyLib.c ****     *
1864:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:.\Generated_Source\PSoC4/CyLib.c ****     {
1867:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:.\Generated_Source\PSoC4/CyLib.c ****         {
1874:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:.\Generated_Source\PSoC4/CyLib.c ****         }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:.\Generated_Source\PSoC4/CyLib.c ****     }
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c **** 
1883:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:.\Generated_Source\PSoC4/CyLib.c ****     *
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:.\Generated_Source\PSoC4/CyLib.c ****     *
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 40


1899:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:.\Generated_Source\PSoC4/CyLib.c ****     *
1904:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:.\Generated_Source\PSoC4/CyLib.c ****     *
1908:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:.\Generated_Source\PSoC4/CyLib.c ****     {
1911:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:.\Generated_Source\PSoC4/CyLib.c **** 
1916:.\Generated_Source\PSoC4/CyLib.c **** 
1917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:.\Generated_Source\PSoC4/CyLib.c ****         }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:.\Generated_Source\PSoC4/CyLib.c ****     }
1935:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:.\Generated_Source\PSoC4/CyLib.c **** 
1937:.\Generated_Source\PSoC4/CyLib.c **** 
1938:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:.\Generated_Source\PSoC4/CyLib.c **** 
1940:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:.\Generated_Source\PSoC4/CyLib.c ****     *
1948:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 41


1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:.\Generated_Source\PSoC4/CyLib.c ****     *
1968:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:.\Generated_Source\PSoC4/CyLib.c ****     {
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:.\Generated_Source\PSoC4/CyLib.c **** 
1981:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:.\Generated_Source\PSoC4/CyLib.c **** 
1987:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:.\Generated_Source\PSoC4/CyLib.c ****     }
1990:.\Generated_Source\PSoC4/CyLib.c **** 
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:.\Generated_Source\PSoC4/CyLib.c ****     *
1998:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:.\Generated_Source\PSoC4/CyLib.c ****     {
2001:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:.\Generated_Source\PSoC4/CyLib.c ****     }
2004:.\Generated_Source\PSoC4/CyLib.c **** 
2005:.\Generated_Source\PSoC4/CyLib.c **** 
2006:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLib.c ****     *
2010:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:.\Generated_Source\PSoC4/CyLib.c ****     *
2012:.\Generated_Source\PSoC4/CyLib.c ****     * \return
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 42


2013:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:.\Generated_Source\PSoC4/CyLib.c ****     *
2016:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:.\Generated_Source\PSoC4/CyLib.c ****     {
2019:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:.\Generated_Source\PSoC4/CyLib.c ****     }
2021:.\Generated_Source\PSoC4/CyLib.c **** 
2022:.\Generated_Source\PSoC4/CyLib.c **** 
2023:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:.\Generated_Source\PSoC4/CyLib.c ****     *
2027:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:.\Generated_Source\PSoC4/CyLib.c ****     *
2029:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2030:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2031:.\Generated_Source\PSoC4/CyLib.c ****     *
2032:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:.\Generated_Source\PSoC4/CyLib.c ****     {
2035:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:.\Generated_Source\PSoC4/CyLib.c ****     }
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:.\Generated_Source\PSoC4/CyLib.c **** 
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:.\Generated_Source\PSoC4/CyLib.c **** *
2045:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:.\Generated_Source\PSoC4/CyLib.c **** *
2050:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:.\Generated_Source\PSoC4/CyLib.c **** *
2055:.\Generated_Source\PSoC4/CyLib.c **** * \return
2056:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:.\Generated_Source\PSoC4/CyLib.c **** *
2058:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:.\Generated_Source\PSoC4/CyLib.c **** {
 318              		.loc 1 2060 0
 319              		.cfi_startproc
 320              	.LVL19:
 321 0000 021C     		mov	r2, r0
2061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:.\Generated_Source\PSoC4/CyLib.c **** 
2063:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 322              		.loc 1 2063 0
 323 0002 1920     		mov	r0, #25
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 43


 324              	.LVL20:
 325 0004 0240     		and	r2, r0
 326              	.LVL21:
2064:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 327              		.loc 1 2064 0
 328 0006 0249     		ldr	r1, .L27
 329 0008 0B68     		ldr	r3, [r1]
 330 000a 1840     		and	r0, r3
 331              	.LVL22:
2065:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 332              		.loc 1 2066 0
 333 000c 0A60     		str	r2, [r1]
2067:.\Generated_Source\PSoC4/CyLib.c **** 
2068:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:.\Generated_Source\PSoC4/CyLib.c **** }
 334              		.loc 1 2069 0
 335              		@ sp needed
 336 000e 7047     		bx	lr
 337              	.L28:
 338              		.align	2
 339              	.L27:
 340 0010 54000340 		.word	1073938516
 341              		.cfi_endproc
 342              	.LFE11:
 343              		.size	CySysGetResetReason, .-CySysGetResetReason
 344              		.section	.text.CyDisableInts,"ax",%progbits
 345              		.align	2
 346              		.global	CyDisableInts
 347              		.code	16
 348              		.thumb_func
 349              		.type	CyDisableInts, %function
 350              	CyDisableInts:
 351              	.LFB12:
2070:.\Generated_Source\PSoC4/CyLib.c **** 
2071:.\Generated_Source\PSoC4/CyLib.c **** 
2072:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:.\Generated_Source\PSoC4/CyLib.c **** *
2076:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:.\Generated_Source\PSoC4/CyLib.c **** *
2078:.\Generated_Source\PSoC4/CyLib.c **** * \return
2079:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:.\Generated_Source\PSoC4/CyLib.c **** *
2081:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:.\Generated_Source\PSoC4/CyLib.c **** {
 352              		.loc 1 2083 0
 353              		.cfi_startproc
2084:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:.\Generated_Source\PSoC4/CyLib.c **** 
2086:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 354              		.loc 1 2087 0
 355 0000 024B     		ldr	r3, .L30
 356 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 44


 357              	.LVL23:
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 358              		.loc 1 2090 0
 359 0004 0122     		mov	r2, #1
 360 0006 5242     		neg	r2, r2
 361 0008 1A60     		str	r2, [r3]
2091:.\Generated_Source\PSoC4/CyLib.c **** 
2092:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:.\Generated_Source\PSoC4/CyLib.c **** }
 362              		.loc 1 2093 0
 363              		@ sp needed
 364 000a 7047     		bx	lr
 365              	.L31:
 366              		.align	2
 367              	.L30:
 368 000c 80E100E0 		.word	-536813184
 369              		.cfi_endproc
 370              	.LFE12:
 371              		.size	CyDisableInts, .-CyDisableInts
 372              		.section	.text.CyEnableInts,"ax",%progbits
 373              		.align	2
 374              		.global	CyEnableInts
 375              		.code	16
 376              		.thumb_func
 377              		.type	CyEnableInts, %function
 378              	CyEnableInts:
 379              	.LFB13:
2094:.\Generated_Source\PSoC4/CyLib.c **** 
2095:.\Generated_Source\PSoC4/CyLib.c **** 
2096:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:.\Generated_Source\PSoC4/CyLib.c **** *
2100:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:.\Generated_Source\PSoC4/CyLib.c **** *
2102:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:.\Generated_Source\PSoC4/CyLib.c **** *
2104:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:.\Generated_Source\PSoC4/CyLib.c **** {
 380              		.loc 1 2106 0
 381              		.cfi_startproc
 382              	.LVL24:
2107:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 383              		.loc 1 2107 0
 384 0000 014B     		ldr	r3, .L33
 385 0002 1860     		str	r0, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c **** }
 386              		.loc 1 2108 0
 387              		@ sp needed
 388 0004 7047     		bx	lr
 389              	.L34:
 390 0006 C046     		.align	2
 391              	.L33:
 392 0008 00E100E0 		.word	-536813312
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 45


 393              		.cfi_endproc
 394              	.LFE13:
 395              		.size	CyEnableInts, .-CyEnableInts
 396              		.section	.text.CyIntEnable,"ax",%progbits
 397              		.align	2
 398              		.global	CyIntEnable
 399              		.code	16
 400              		.thumb_func
 401              		.type	CyIntEnable, %function
 402              	CyIntEnable:
 403              	.LFB20:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** 
2111:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:.\Generated_Source\PSoC4/CyLib.c **** *
2115:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:.\Generated_Source\PSoC4/CyLib.c **** *
2125:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:.\Generated_Source\PSoC4/CyLib.c **** *
2127:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:.\Generated_Source\PSoC4/CyLib.c **** {
2132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:.\Generated_Source\PSoC4/CyLib.c **** 
2135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:.\Generated_Source\PSoC4/CyLib.c **** 
2143:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:.\Generated_Source\PSoC4/CyLib.c **** }
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** 
2147:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:.\Generated_Source\PSoC4/CyLib.c **** *
2151:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 46


2155:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:.\Generated_Source\PSoC4/CyLib.c **** *
2161:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:.\Generated_Source\PSoC4/CyLib.c **** *
2163:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:.\Generated_Source\PSoC4/CyLib.c **** {
2166:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:.\Generated_Source\PSoC4/CyLib.c **** 
2168:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:.\Generated_Source\PSoC4/CyLib.c **** *
2180:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:.\Generated_Source\PSoC4/CyLib.c **** *
2183:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:.\Generated_Source\PSoC4/CyLib.c **** *
2185:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:.\Generated_Source\PSoC4/CyLib.c **** {
2188:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:.\Generated_Source\PSoC4/CyLib.c **** 
2191:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:.\Generated_Source\PSoC4/CyLib.c **** 
2199:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:.\Generated_Source\PSoC4/CyLib.c **** }
2201:.\Generated_Source\PSoC4/CyLib.c **** 
2202:.\Generated_Source\PSoC4/CyLib.c **** 
2203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:.\Generated_Source\PSoC4/CyLib.c **** *
2207:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:.\Generated_Source\PSoC4/CyLib.c **** *
2209:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:.\Generated_Source\PSoC4/CyLib.c **** *
2211:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 47


2212:.\Generated_Source\PSoC4/CyLib.c **** *
2213:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:.\Generated_Source\PSoC4/CyLib.c **** {
2216:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:.\Generated_Source\PSoC4/CyLib.c **** 
2218:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:.\Generated_Source\PSoC4/CyLib.c **** 
2220:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:.\Generated_Source\PSoC4/CyLib.c **** }
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:.\Generated_Source\PSoC4/CyLib.c **** *
2227:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:.\Generated_Source\PSoC4/CyLib.c **** *
2229:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:.\Generated_Source\PSoC4/CyLib.c **** *
2232:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:.\Generated_Source\PSoC4/CyLib.c **** {
2235:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:.\Generated_Source\PSoC4/CyLib.c **** 
2242:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:.\Generated_Source\PSoC4/CyLib.c **** 
2246:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:.\Generated_Source\PSoC4/CyLib.c **** 
2251:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:.\Generated_Source\PSoC4/CyLib.c **** }
2253:.\Generated_Source\PSoC4/CyLib.c **** 
2254:.\Generated_Source\PSoC4/CyLib.c **** 
2255:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:.\Generated_Source\PSoC4/CyLib.c **** *
2261:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:.\Generated_Source\PSoC4/CyLib.c **** *
2263:.\Generated_Source\PSoC4/CyLib.c **** * \return
2264:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:.\Generated_Source\PSoC4/CyLib.c **** *
2266:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 48


2269:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:.\Generated_Source\PSoC4/CyLib.c **** 
2273:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:.\Generated_Source\PSoC4/CyLib.c **** 
2275:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:.\Generated_Source\PSoC4/CyLib.c **** }
2277:.\Generated_Source\PSoC4/CyLib.c **** 
2278:.\Generated_Source\PSoC4/CyLib.c **** 
2279:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:.\Generated_Source\PSoC4/CyLib.c **** *
2283:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:.\Generated_Source\PSoC4/CyLib.c **** *
2285:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:.\Generated_Source\PSoC4/CyLib.c **** *
2287:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:.\Generated_Source\PSoC4/CyLib.c **** {
 404              		.loc 1 2289 0
 405              		.cfi_startproc
 406              	.LVL25:
2290:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 407              		.loc 1 2290 0
 408 0000 1F23     		mov	r3, #31
 409 0002 1840     		and	r0, r3
 410              	.LVL26:
 411 0004 1E3B     		sub	r3, r3, #30
 412 0006 8340     		lsl	r3, r3, r0
 413 0008 181C     		mov	r0, r3
 414 000a 014B     		ldr	r3, .L36
 415 000c 1860     		str	r0, [r3]
2291:.\Generated_Source\PSoC4/CyLib.c **** }
 416              		.loc 1 2291 0
 417              		@ sp needed
 418 000e 7047     		bx	lr
 419              	.L37:
 420              		.align	2
 421              	.L36:
 422 0010 00E100E0 		.word	-536813312
 423              		.cfi_endproc
 424              	.LFE20:
 425              		.size	CyIntEnable, .-CyIntEnable
 426              		.section	.text.CyIntGetState,"ax",%progbits
 427              		.align	2
 428              		.global	CyIntGetState
 429              		.code	16
 430              		.thumb_func
 431              		.type	CyIntGetState, %function
 432              	CyIntGetState:
 433              	.LFB21:
2292:.\Generated_Source\PSoC4/CyLib.c **** 
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 49


2296:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:.\Generated_Source\PSoC4/CyLib.c **** *
2300:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * \return
2303:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:.\Generated_Source\PSoC4/CyLib.c **** {
 434              		.loc 1 2307 0
 435              		.cfi_startproc
 436              	.LVL27:
2308:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 437              		.loc 1 2309 0
 438 0000 044B     		ldr	r3, .L39
 439 0002 1B68     		ldr	r3, [r3]
 440 0004 1F22     		mov	r2, #31
 441 0006 1040     		and	r0, r2
 442              	.LVL28:
 443 0008 C340     		lsr	r3, r3, r0
 444 000a 181C     		mov	r0, r3
 445 000c 0123     		mov	r3, #1
 446 000e 1840     		and	r0, r3
2310:.\Generated_Source\PSoC4/CyLib.c **** }
 447              		.loc 1 2310 0
 448              		@ sp needed
 449 0010 7047     		bx	lr
 450              	.L40:
 451 0012 C046     		.align	2
 452              	.L39:
 453 0014 00E100E0 		.word	-536813312
 454              		.cfi_endproc
 455              	.LFE21:
 456              		.size	CyIntGetState, .-CyIntGetState
 457              		.section	.text.CyIntDisable,"ax",%progbits
 458              		.align	2
 459              		.global	CyIntDisable
 460              		.code	16
 461              		.thumb_func
 462              		.type	CyIntDisable, %function
 463              	CyIntDisable:
 464              	.LFB22:
2311:.\Generated_Source\PSoC4/CyLib.c **** 
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:.\Generated_Source\PSoC4/CyLib.c **** *
2317:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:.\Generated_Source\PSoC4/CyLib.c **** *
2319:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:.\Generated_Source\PSoC4/CyLib.c **** *
2321:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 50


2322:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:.\Generated_Source\PSoC4/CyLib.c **** {
 465              		.loc 1 2323 0
 466              		.cfi_startproc
 467              	.LVL29:
2324:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 468              		.loc 1 2324 0
 469 0000 1F23     		mov	r3, #31
 470 0002 1840     		and	r0, r3
 471              	.LVL30:
 472 0004 1E3B     		sub	r3, r3, #30
 473 0006 8340     		lsl	r3, r3, r0
 474 0008 181C     		mov	r0, r3
 475 000a 014B     		ldr	r3, .L42
 476 000c 1860     		str	r0, [r3]
2325:.\Generated_Source\PSoC4/CyLib.c **** }
 477              		.loc 1 2325 0
 478              		@ sp needed
 479 000e 7047     		bx	lr
 480              	.L43:
 481              		.align	2
 482              	.L42:
 483 0010 80E100E0 		.word	-536813184
 484              		.cfi_endproc
 485              	.LFE22:
 486              		.size	CyIntDisable, .-CyIntDisable
 487              		.section	.text.CyIntSetPending,"ax",%progbits
 488              		.align	2
 489              		.global	CyIntSetPending
 490              		.code	16
 491              		.thumb_func
 492              		.type	CyIntSetPending, %function
 493              	CyIntSetPending:
 494              	.LFB23:
2326:.\Generated_Source\PSoC4/CyLib.c **** 
2327:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:.\Generated_Source\PSoC4/CyLib.c **** *
2331:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:.\Generated_Source\PSoC4/CyLib.c **** *
2333:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:.\Generated_Source\PSoC4/CyLib.c **** *
2335:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:.\Generated_Source\PSoC4/CyLib.c **** {
 495              		.loc 1 2337 0
 496              		.cfi_startproc
 497              	.LVL31:
2338:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 498              		.loc 1 2338 0
 499 0000 1F23     		mov	r3, #31
 500 0002 1840     		and	r0, r3
 501              	.LVL32:
 502 0004 1E3B     		sub	r3, r3, #30
 503 0006 8340     		lsl	r3, r3, r0
 504 0008 181C     		mov	r0, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 51


 505 000a 014B     		ldr	r3, .L45
 506 000c 1860     		str	r0, [r3]
2339:.\Generated_Source\PSoC4/CyLib.c **** }
 507              		.loc 1 2339 0
 508              		@ sp needed
 509 000e 7047     		bx	lr
 510              	.L46:
 511              		.align	2
 512              	.L45:
 513 0010 00E200E0 		.word	-536813056
 514              		.cfi_endproc
 515              	.LFE23:
 516              		.size	CyIntSetPending, .-CyIntSetPending
 517              		.section	.text.CyIntClearPending,"ax",%progbits
 518              		.align	2
 519              		.global	CyIntClearPending
 520              		.code	16
 521              		.thumb_func
 522              		.type	CyIntClearPending, %function
 523              	CyIntClearPending:
 524              	.LFB24:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:.\Generated_Source\PSoC4/CyLib.c **** *
2346:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:.\Generated_Source\PSoC4/CyLib.c **** *
2348:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:.\Generated_Source\PSoC4/CyLib.c **** *
2350:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:.\Generated_Source\PSoC4/CyLib.c **** {
 525              		.loc 1 2352 0
 526              		.cfi_startproc
 527              	.LVL33:
2353:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 528              		.loc 1 2353 0
 529 0000 1F23     		mov	r3, #31
 530 0002 1840     		and	r0, r3
 531              	.LVL34:
 532 0004 1E3B     		sub	r3, r3, #30
 533 0006 8340     		lsl	r3, r3, r0
 534 0008 181C     		mov	r0, r3
 535 000a 014B     		ldr	r3, .L48
 536 000c 1860     		str	r0, [r3]
2354:.\Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2354 0
 538              		@ sp needed
 539 000e 7047     		bx	lr
 540              	.L49:
 541              		.align	2
 542              	.L48:
 543 0010 80E200E0 		.word	-536812928
 544              		.cfi_endproc
 545              	.LFE24:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 52


 546              		.size	CyIntClearPending, .-CyIntClearPending
 547              		.section	.text.CyHalt,"ax",%progbits
 548              		.align	2
 549              		.global	CyHalt
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyHalt, %function
 553              	CyHalt:
 554              	.LFB25:
2355:.\Generated_Source\PSoC4/CyLib.c **** 
2356:.\Generated_Source\PSoC4/CyLib.c **** 
2357:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:.\Generated_Source\PSoC4/CyLib.c **** *
2361:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:.\Generated_Source\PSoC4/CyLib.c **** *
2363:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:.\Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 2367 0
 556              		.cfi_startproc
 557              	.LVL35:
2368:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:.\Generated_Source\PSoC4/CyLib.c ****     {
2370:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:.\Generated_Source\PSoC4/CyLib.c ****     }
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 558              		.loc 1 2376 0
 559              	@ 2376 ".\Generated_Source\PSoC4\CyLib.c" 1
 560 0000 01BE     		    bkpt    1
 561              	@ 0 "" 2
2377:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:.\Generated_Source\PSoC4/CyLib.c **** }
 562              		.loc 1 2380 0
 563              		.code	16
 564              		@ sp needed
 565 0002 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE25:
 568              		.size	CyHalt, .-CyHalt
 569              		.section	.text.CyIntSetSysVector,"ax",%progbits
 570              		.align	2
 571              		.global	CyIntSetSysVector
 572              		.code	16
 573              		.thumb_func
 574              		.type	CyIntSetSysVector, %function
 575              	CyIntSetSysVector:
 576              	.LFB14:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 53


2131:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 577              		.loc 1 2131 0
 578              		.cfi_startproc
 579              	.LVL36:
 580 0000 38B5     		push	{r3, r4, r5, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586 0002 041C     		mov	r4, r0
 587 0004 0D1C     		mov	r5, r1
 588              	.LVL37:
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 589              		.loc 1 2135 0
 590 0006 0F28     		cmp	r0, #15
 591 0008 02D9     		bls	.L52
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 592              		.loc 1 2135 0 is_stmt 0 discriminator 1
 593 000a 0020     		mov	r0, #0
 594              	.LVL38:
 595 000c FFF7FEFF 		bl	CyHalt
 596              	.LVL39:
 597              	.L52:
2138:.\Generated_Source\PSoC4/CyLib.c **** 
 598              		.loc 1 2138 0 is_stmt 1
 599 0010 A400     		lsl	r4, r4, #2
 600 0012 8023     		mov	r3, #128
 601 0014 9B05     		lsl	r3, r3, #22
 602 0016 9C46     		mov	ip, r3
 603 0018 6444     		add	r4, r4, ip
 604 001a 2068     		ldr	r0, [r4]
 605              	.LVL40:
2141:.\Generated_Source\PSoC4/CyLib.c **** 
 606              		.loc 1 2141 0
 607 001c 2560     		str	r5, [r4]
2144:.\Generated_Source\PSoC4/CyLib.c **** 
 608              		.loc 1 2144 0
 609              		@ sp needed
 610              	.LVL41:
 611 001e 38BD     		pop	{r3, r4, r5, pc}
 612              		.cfi_endproc
 613              	.LFE14:
 614              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 615              		.section	.text.CyIntGetSysVector,"ax",%progbits
 616              		.align	2
 617              		.global	CyIntGetSysVector
 618              		.code	16
 619              		.thumb_func
 620              		.type	CyIntGetSysVector, %function
 621              	CyIntGetSysVector:
 622              	.LFB15:
2165:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 623              		.loc 1 2165 0
 624              		.cfi_startproc
 625              	.LVL42:
 626 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 54


 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 630 0002 041E     		sub	r4, r0, #0
 631              	.LVL43:
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 632              		.loc 1 2168 0
 633 0004 0F2C     		cmp	r4, #15
 634 0006 02D9     		bls	.L54
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 635              		.loc 1 2168 0 is_stmt 0 discriminator 1
 636 0008 0020     		mov	r0, #0
 637              	.LVL44:
 638 000a FFF7FEFF 		bl	CyHalt
 639              	.LVL45:
 640              	.L54:
2170:.\Generated_Source\PSoC4/CyLib.c **** }
 641              		.loc 1 2170 0 is_stmt 1
 642 000e A400     		lsl	r4, r4, #2
 643 0010 8023     		mov	r3, #128
 644 0012 9B05     		lsl	r3, r3, #22
 645 0014 9C46     		mov	ip, r3
 646 0016 6444     		add	r4, r4, ip
 647 0018 2068     		ldr	r0, [r4]
2171:.\Generated_Source\PSoC4/CyLib.c **** 
 648              		.loc 1 2171 0
 649              		@ sp needed
 650 001a 10BD     		pop	{r4, pc}
 651              		.cfi_endproc
 652              	.LFE15:
 653              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 654              		.section	.text.CyIntSetVector,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntSetVector
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntSetVector, %function
 660              	CyIntSetVector:
 661              	.LFB16:
2187:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 662              		.loc 1 2187 0
 663              		.cfi_startproc
 664              	.LVL46:
 665 0000 38B5     		push	{r3, r4, r5, lr}
 666              		.cfi_def_cfa_offset 16
 667              		.cfi_offset 3, -16
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 5, -8
 670              		.cfi_offset 14, -4
 671 0002 041C     		mov	r4, r0
 672 0004 0D1C     		mov	r5, r1
 673              	.LVL47:
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 674              		.loc 1 2191 0
 675 0006 1828     		cmp	r0, #24
 676 0008 02D9     		bls	.L56
2191:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 55


 677              		.loc 1 2191 0 is_stmt 0 discriminator 1
 678 000a 0020     		mov	r0, #0
 679              	.LVL48:
 680 000c FFF7FEFF 		bl	CyHalt
 681              	.LVL49:
 682              	.L56:
2194:.\Generated_Source\PSoC4/CyLib.c **** 
 683              		.loc 1 2194 0 is_stmt 1
 684 0010 A400     		lsl	r4, r4, #2
 685 0012 034B     		ldr	r3, .L57
 686 0014 9C46     		mov	ip, r3
 687 0016 6444     		add	r4, r4, ip
 688 0018 2068     		ldr	r0, [r4]
 689              	.LVL50:
2197:.\Generated_Source\PSoC4/CyLib.c **** 
 690              		.loc 1 2197 0
 691 001a 2560     		str	r5, [r4]
2200:.\Generated_Source\PSoC4/CyLib.c **** 
 692              		.loc 1 2200 0
 693              		@ sp needed
 694              	.LVL51:
 695 001c 38BD     		pop	{r3, r4, r5, pc}
 696              	.L58:
 697 001e C046     		.align	2
 698              	.L57:
 699 0020 40000020 		.word	536870976
 700              		.cfi_endproc
 701              	.LFE16:
 702              		.size	CyIntSetVector, .-CyIntSetVector
 703              		.section	.text.CyIntGetVector,"ax",%progbits
 704              		.align	2
 705              		.global	CyIntGetVector
 706              		.code	16
 707              		.thumb_func
 708              		.type	CyIntGetVector, %function
 709              	CyIntGetVector:
 710              	.LFB17:
2215:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 711              		.loc 1 2215 0
 712              		.cfi_startproc
 713              	.LVL52:
 714 0000 10B5     		push	{r4, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
 718 0002 041E     		sub	r4, r0, #0
 719              	.LVL53:
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 720              		.loc 1 2218 0
 721 0004 182C     		cmp	r4, #24
 722 0006 02D9     		bls	.L60
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2218 0 is_stmt 0 discriminator 1
 724 0008 0020     		mov	r0, #0
 725              	.LVL54:
 726 000a FFF7FEFF 		bl	CyHalt
 727              	.LVL55:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 56


 728              	.L60:
2220:.\Generated_Source\PSoC4/CyLib.c **** }
 729              		.loc 1 2220 0 is_stmt 1
 730 000e A400     		lsl	r4, r4, #2
 731 0010 024B     		ldr	r3, .L61
 732 0012 9C46     		mov	ip, r3
 733 0014 6444     		add	r4, r4, ip
 734 0016 2068     		ldr	r0, [r4]
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 735              		.loc 1 2221 0
 736              		@ sp needed
 737 0018 10BD     		pop	{r4, pc}
 738              	.L62:
 739 001a C046     		.align	2
 740              	.L61:
 741 001c 40000020 		.word	536870976
 742              		.cfi_endproc
 743              	.LFE17:
 744              		.size	CyIntGetVector, .-CyIntGetVector
 745              		.section	.text.CyIntSetPriority,"ax",%progbits
 746              		.align	2
 747              		.global	CyIntSetPriority
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntSetPriority, %function
 751              	CyIntSetPriority:
 752              	.LFB18:
2234:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 753              		.loc 1 2234 0
 754              		.cfi_startproc
 755              	.LVL56:
 756 0000 70B5     		push	{r4, r5, r6, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 6, -8
 761              		.cfi_offset 14, -4
 762 0002 041C     		mov	r4, r0
 763 0004 0E1E     		sub	r6, r1, #0
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 764              		.loc 1 2239 0
 765 0006 032E     		cmp	r6, #3
 766 0008 02D9     		bls	.L64
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 767              		.loc 1 2239 0 is_stmt 0 discriminator 1
 768 000a 0020     		mov	r0, #0
 769              	.LVL57:
 770 000c FFF7FEFF 		bl	CyHalt
 771              	.LVL58:
 772              	.L64:
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 773              		.loc 1 2240 0 is_stmt 1
 774 0010 182C     		cmp	r4, #24
 775 0012 02D9     		bls	.L65
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2240 0 is_stmt 0 discriminator 1
 777 0014 0020     		mov	r0, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 57


 778 0016 FFF7FEFF 		bl	CyHalt
 779              	.LVL59:
 780              	.L65:
2242:.\Generated_Source\PSoC4/CyLib.c **** 
 781              		.loc 1 2242 0 is_stmt 1
 782 001a 0325     		mov	r5, #3
 783 001c 2540     		and	r5, r4
 784 001e ED00     		lsl	r5, r5, #3
 785 0020 0635     		add	r5, r5, #6
 786              	.LVL60:
2244:.\Generated_Source\PSoC4/CyLib.c **** 
 787              		.loc 1 2244 0
 788 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 789              	.LVL61:
2246:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 790              		.loc 1 2246 0
 791 0026 A408     		lsr	r4, r4, #2
 792 0028 A400     		lsl	r4, r4, #2
 793 002a 074B     		ldr	r3, .L66
 794 002c 9C46     		mov	ip, r3
 795 002e 6444     		add	r4, r4, ip
 796 0030 2368     		ldr	r3, [r4]
 797              	.LVL62:
2247:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 798              		.loc 1 2247 0
 799 0032 0322     		mov	r2, #3
 800 0034 AA40     		lsl	r2, r2, r5
 801 0036 9343     		bic	r3, r2
 802              	.LVL63:
2248:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 803              		.loc 1 2248 0
 804 0038 AE40     		lsl	r6, r6, r5
 805 003a 351C     		mov	r5, r6
 806              	.LVL64:
 807 003c 1D43     		orr	r5, r3
 808              	.LVL65:
2249:.\Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2249 0
 810 003e 2560     		str	r5, [r4]
2251:.\Generated_Source\PSoC4/CyLib.c **** }
 811              		.loc 1 2251 0
 812 0040 FFF7FEFF 		bl	CyExitCriticalSection
 813              	.LVL66:
2252:.\Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2252 0
 815              		@ sp needed
 816              	.LVL67:
 817 0044 70BD     		pop	{r4, r5, r6, pc}
 818              	.L67:
 819 0046 C046     		.align	2
 820              	.L66:
 821 0048 00E400E0 		.word	-536812544
 822              		.cfi_endproc
 823              	.LFE18:
 824              		.size	CyIntSetPriority, .-CyIntSetPriority
 825              		.section	.text.CyIntGetPriority,"ax",%progbits
 826              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 58


 827              		.global	CyIntGetPriority
 828              		.code	16
 829              		.thumb_func
 830              		.type	CyIntGetPriority, %function
 831              	CyIntGetPriority:
 832              	.LFB19:
2268:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 833              		.loc 1 2268 0
 834              		.cfi_startproc
 835              	.LVL68:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 041E     		sub	r4, r0, #0
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 841              		.loc 1 2271 0
 842 0004 182C     		cmp	r4, #24
 843 0006 02D9     		bls	.L69
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 844              		.loc 1 2271 0 is_stmt 0 discriminator 1
 845 0008 0020     		mov	r0, #0
 846              	.LVL69:
 847 000a FFF7FEFF 		bl	CyHalt
 848              	.LVL70:
 849              	.L69:
2273:.\Generated_Source\PSoC4/CyLib.c **** 
 850              		.loc 1 2273 0 is_stmt 1
 851 000e A308     		lsr	r3, r4, #2
 852 0010 9B00     		lsl	r3, r3, #2
 853 0012 054A     		ldr	r2, .L70
 854 0014 9446     		mov	ip, r2
 855 0016 6344     		add	r3, r3, ip
 856 0018 1868     		ldr	r0, [r3]
 857 001a 0323     		mov	r3, #3
 858 001c 1C40     		and	r4, r3
 859 001e E400     		lsl	r4, r4, #3
 860 0020 0634     		add	r4, r4, #6
 861 0022 E040     		lsr	r0, r0, r4
 862              	.LVL71:
2275:.\Generated_Source\PSoC4/CyLib.c **** }
 863              		.loc 1 2275 0
 864 0024 1840     		and	r0, r3
 865              	.LVL72:
2276:.\Generated_Source\PSoC4/CyLib.c **** 
 866              		.loc 1 2276 0
 867              		@ sp needed
 868 0026 10BD     		pop	{r4, pc}
 869              	.L71:
 870              		.align	2
 871              	.L70:
 872 0028 00E400E0 		.word	-536812544
 873              		.cfi_endproc
 874              	.LFE19:
 875              		.size	CyIntGetPriority, .-CyIntGetPriority
 876              		.section	.text.CySoftwareReset,"ax",%progbits
 877              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 59


 878              		.global	CySoftwareReset
 879              		.code	16
 880              		.thumb_func
 881              		.type	CySoftwareReset, %function
 882              	CySoftwareReset:
 883              	.LFB26:
2381:.\Generated_Source\PSoC4/CyLib.c **** 
2382:.\Generated_Source\PSoC4/CyLib.c **** 
2383:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLib.c **** *
2387:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:.\Generated_Source\PSoC4/CyLib.c **** *
2389:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:.\Generated_Source\PSoC4/CyLib.c **** {
 884              		.loc 1 2391 0
 885              		.cfi_startproc
2392:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 886              		.loc 1 2396 0
 887 0000 034A     		ldr	r2, .L73
 888 0002 1368     		ldr	r3, [r2]
 889 0004 1B04     		lsl	r3, r3, #16
 890 0006 1B0C     		lsr	r3, r3, #16
2397:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 891              		.loc 1 2397 0
 892 0008 0249     		ldr	r1, .L73+4
 893 000a 0B43     		orr	r3, r1
2396:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 894              		.loc 1 2396 0
 895 000c 1360     		str	r3, [r2]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 896              		.loc 1 2398 0
 897              		@ sp needed
 898 000e 7047     		bx	lr
 899              	.L74:
 900              		.align	2
 901              	.L73:
 902 0010 0CED00E0 		.word	-536810228
 903 0014 0400FA05 		.word	100270084
 904              		.cfi_endproc
 905              	.LFE26:
 906              		.size	CySoftwareReset, .-CySoftwareReset
 907              		.section	.text.CyDelay,"ax",%progbits
 908              		.align	2
 909              		.global	CyDelay
 910              		.code	16
 911              		.thumb_func
 912              		.type	CyDelay, %function
 913              	CyDelay:
 914              	.LFB27:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 60


2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:.\Generated_Source\PSoC4/CyLib.c **** *
2407:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:.\Generated_Source\PSoC4/CyLib.c **** *
2409:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:.\Generated_Source\PSoC4/CyLib.c **** {
 915              		.loc 1 2411 0
 916              		.cfi_startproc
 917              	.LVL73:
 918 0000 10B5     		push	{r4, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 4, -8
 921              		.cfi_offset 14, -4
 922 0002 041C     		mov	r4, r0
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 923              		.loc 1 2412 0
 924 0004 06E0     		b	.L76
 925              	.LVL74:
 926              	.L77:
2413:.\Generated_Source\PSoC4/CyLib.c ****     {
2414:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:.\Generated_Source\PSoC4/CyLib.c ****          */
2417:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 927              		.loc 1 2417 0
 928 0006 084B     		ldr	r3, .L78
 929 0008 1868     		ldr	r0, [r3]
 930 000a FFF7FEFF 		bl	CyDelayCycles
 931              	.LVL75:
2418:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 932              		.loc 1 2418 0
 933 000e 074B     		ldr	r3, .L78+4
 934 0010 9C46     		mov	ip, r3
 935 0012 6444     		add	r4, r4, ip
 936              	.LVL76:
 937              	.L76:
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 938              		.loc 1 2412 0
 939 0014 8023     		mov	r3, #128
 940 0016 1B02     		lsl	r3, r3, #8
 941 0018 9C42     		cmp	r4, r3
 942 001a F4D8     		bhi	.L77
2419:.\Generated_Source\PSoC4/CyLib.c ****     }
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 943              		.loc 1 2421 0
 944 001c 024B     		ldr	r3, .L78
 945 001e 5868     		ldr	r0, [r3, #4]
 946 0020 6043     		mul	r0, r4
 947 0022 FFF7FEFF 		bl	CyDelayCycles
 948              	.LVL77:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 61


2422:.\Generated_Source\PSoC4/CyLib.c **** }
 949              		.loc 1 2422 0
 950              		@ sp needed
 951              	.LVL78:
 952 0026 10BD     		pop	{r4, pc}
 953              	.L79:
 954              		.align	2
 955              	.L78:
 956 0028 00000000 		.word	.LANCHOR0
 957 002c 0080FFFF 		.word	-32768
 958              		.cfi_endproc
 959              	.LFE27:
 960              		.size	CyDelay, .-CyDelay
 961              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 962              		.align	2
 963              		.global	CySysClkImoEnableWcoLock
 964              		.code	16
 965              		.thumb_func
 966              		.type	CySysClkImoEnableWcoLock, %function
 967              	CySysClkImoEnableWcoLock:
 968              	.LFB3:
 173:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 969              		.loc 1 173 0
 970              		.cfi_startproc
 971 0000 30B5     		push	{r4, r5, lr}
 972              		.cfi_def_cfa_offset 12
 973              		.cfi_offset 4, -12
 974              		.cfi_offset 5, -8
 975              		.cfi_offset 14, -4
 976 0002 83B0     		sub	sp, sp, #12
 977              		.cfi_def_cfa_offset 24
 978              	.LVL79:
 184:.\Generated_Source\PSoC4/CyLib.c ****         {
 979              		.loc 1 184 0
 980 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 981              	.LVL80:
 982 0008 0028     		cmp	r0, #0
 983 000a 48D0     		beq	.L80
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 984              		.loc 1 186 0
 985 000c FFF7FEFF 		bl	CyEnterCriticalSection
 986              	.LVL81:
 987 0010 041C     		mov	r4, r0
 988              	.LVL82:
 209:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 989              		.loc 1 209 0
 990 0012 244B     		ldr	r3, .L85
 991 0014 1B68     		ldr	r3, [r3]
 992 0016 0722     		mov	r2, #7
 993 0018 1A40     		and	r2, r3
 994 001a 9200     		lsl	r2, r2, #2
 210:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 995              		.loc 1 210 0
 996 001c 131C     		mov	r3, r2
 997 001e 1833     		add	r3, r3, #24
 211:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 998              		.loc 1 211 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 62


 999 0020 214A     		ldr	r2, .L85+4
 1000 0022 1268     		ldr	r2, [r2]
 210:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1001              		.loc 1 210 0
 1002 0024 1207     		lsl	r2, r2, #28
 1003 0026 920F     		lsr	r2, r2, #30
 209:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1004              		.loc 1 209 0
 1005 0028 D340     		lsr	r3, r3, r2
 1006 002a 1A1C     		mov	r2, r3
 1007              	.LVL83:
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1008              		.loc 1 229 0
 1009 002c 1F4B     		ldr	r3, .L85+8
 1010 002e 1968     		ldr	r1, [r3]
 1011 0030 1F4B     		ldr	r3, .L85+12
 1012 0032 1940     		and	r1, r3
 1013              	.LVL84:
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 1014              		.loc 1 235 0
 1015 0034 1F4B     		ldr	r3, .L85+16
 1016 0036 5343     		mul	r3, r2
 1017 0038 8020     		mov	r0, #128
 1018 003a C001     		lsl	r0, r0, #7
 1019 003c 8446     		mov	ip, r0
 1020 003e 6344     		add	r3, r3, ip
 1021 0040 DB0B     		lsr	r3, r3, #15
 1022 0042 013B     		sub	r3, r3, #1
 1023 0044 5B05     		lsl	r3, r3, #21
 1024 0046 5B0D     		lsr	r3, r3, #21
 1025 0048 0B43     		orr	r3, r1
 1026              	.LVL85:
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 1027              		.loc 1 238 0
 1028 004a A021     		mov	r1, #160
 1029 004c 4903     		lsl	r1, r1, #13
 1030 004e 1943     		orr	r1, r3
 1031              	.LVL86:
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 1032              		.loc 1 241 0
 1033 0050 192A     		cmp	r2, #25
 1034 0052 02D8     		bhi	.L82
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 1035              		.loc 1 243 0
 1036 0054 184A     		ldr	r2, .L85+20
 1037              	.LVL87:
 1038 0056 1343     		orr	r3, r2
 1039              	.LVL88:
 1040 0058 0BE0     		b	.L83
 1041              	.LVL89:
 1042              	.L82:
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1043              		.loc 1 247 0
 1044 005a 184B     		ldr	r3, .L85+24
 1045 005c D318     		add	r3, r2, r3
 1046 005e 1878     		ldrb	r0, [r3]
 248:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 63


 1047              		.loc 1 248 0
 1048 0060 1A3A     		sub	r2, r2, #26
 1049              	.LVL90:
 1050 0062 174B     		ldr	r3, .L85+28
 1051 0064 9B5C     		ldrb	r3, [r3, r2]
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1052              		.loc 1 247 0
 1053 0066 C318     		add	r3, r0, r3
 1054              	.LVL91:
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1055              		.loc 1 250 0
 1056 0068 FF2B     		cmp	r3, #255
 1057 006a 00D9     		bls	.L84
 1058 006c FF23     		mov	r3, #255
 1059              	.L84:
 1060              	.LVL92:
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 1061              		.loc 1 253 0
 1062 006e 9B05     		lsl	r3, r3, #22
 1063              	.LVL93:
 1064 0070 0B43     		orr	r3, r1
 1065              	.LVL94:
 1066              	.L83:
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 1067              		.loc 1 256 0
 1068 0072 0E4A     		ldr	r2, .L85+8
 1069 0074 1360     		str	r3, [r2]
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1070              		.loc 1 258 0
 1071 0076 134D     		ldr	r5, .L85+32
 1072 0078 2B68     		ldr	r3, [r5]
 1073              	.LVL95:
 1074 007a 0193     		str	r3, [sp, #4]
 1075              	.LVL96:
 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1076              		.loc 1 259 0
 1077 007c 3020     		mov	r0, #48
 1078 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1079              	.LVL97:
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1080              		.loc 1 260 0
 1081 0082 114A     		ldr	r2, .L85+36
 1082 0084 1368     		ldr	r3, [r2]
 1083 0086 8021     		mov	r1, #128
 1084 0088 C905     		lsl	r1, r1, #23
 1085 008a 0B43     		orr	r3, r1
 1086 008c 1360     		str	r3, [r2]
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1087              		.loc 1 261 0
 1088 008e 1420     		mov	r0, #20
 1089 0090 FFF7FEFF 		bl	CyDelay
 1090              	.LVL98:
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 1091              		.loc 1 262 0
 1092 0094 019B     		ldr	r3, [sp, #4]
 1093 0096 2B60     		str	r3, [r5]
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 64


 1094              		.loc 1 264 0
 1095 0098 201C     		mov	r0, r4
 1096 009a FFF7FEFF 		bl	CyExitCriticalSection
 1097              	.LVL99:
 1098              	.L80:
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 1099              		.loc 1 266 0
 1100 009e 03B0     		add	sp, sp, #12
 1101              		@ sp needed
 1102 00a0 30BD     		pop	{r4, r5, pc}
 1103              	.L86:
 1104 00a2 C046     		.align	2
 1105              	.L85:
 1106 00a4 080F0340 		.word	1073942280
 1107 00a8 28000340 		.word	1073938472
 1108 00ac 08000640 		.word	1074135048
 1109 00b0 00F800C0 		.word	-1073678336
 1110 00b4 40420F00 		.word	1000000
 1111 00b8 0000D43F 		.word	1070858240
 1112 00bc CDF1FF0F 		.word	268431821
 1113 00c0 00000000 		.word	.LANCHOR1
 1114 00c4 30001040 		.word	1074790448
 1115 00c8 00000640 		.word	1074135040
 1116              		.cfi_endproc
 1117              	.LFE3:
 1118              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1119              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1120              		.align	2
 1121              		.global	CySysClkWriteImoFreq
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	CySysClkWriteImoFreq, %function
 1125              	CySysClkWriteImoFreq:
 1126              	.LFB9:
 782:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1127              		.loc 1 782 0
 1128              		.cfi_startproc
 1129              	.LVL100:
 1130 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1131              		.cfi_def_cfa_offset 20
 1132              		.cfi_offset 4, -20
 1133              		.cfi_offset 5, -16
 1134              		.cfi_offset 6, -12
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 83B0     		sub	sp, sp, #12
 1138              		.cfi_def_cfa_offset 32
 1139 0004 041E     		sub	r4, r0, #0
 1140              	.LVL101:
 797:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1141              		.loc 1 797 0
 1142 0006 182C     		cmp	r4, #24
 1143 0008 0BD0     		beq	.L88
 797:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1144              		.loc 1 797 0 is_stmt 0 discriminator 1
 1145 000a 1C28     		cmp	r0, #28
 1146 000c 09D0     		beq	.L88
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 65


 797:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1147              		.loc 1 797 0 discriminator 2
 1148 000e 2028     		cmp	r0, #32
 1149 0010 07D0     		beq	.L88
 797:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1150              		.loc 1 797 0 discriminator 3
 1151 0012 2428     		cmp	r0, #36
 1152 0014 05D0     		beq	.L88
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1153              		.loc 1 798 0 is_stmt 1
 1154 0016 2828     		cmp	r0, #40
 1155 0018 03D0     		beq	.L88
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1156              		.loc 1 798 0 is_stmt 0 discriminator 1
 1157 001a 2C28     		cmp	r0, #44
 1158 001c 01D0     		beq	.L88
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1159              		.loc 1 798 0 discriminator 2
 1160 001e 3028     		cmp	r0, #48
 1161 0020 49D1     		bne	.L89
 1162              	.L88:
 802:.\Generated_Source\PSoC4/CyLib.c **** 
 1163              		.loc 1 802 0 is_stmt 1
 1164 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1165              	.LVL102:
 1166 0026 0190     		str	r0, [sp, #4]
 1167              	.LVL103:
 805:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1168              		.loc 1 805 0
 1169 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1170              	.LVL104:
 1171 002c 0028     		cmp	r0, #0
 1172 002e 03D0     		beq	.L94
 1173              	.LVL105:
 808:.\Generated_Source\PSoC4/CyLib.c ****                 }
 1174              		.loc 1 808 0
 1175 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1176              	.LVL106:
 807:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1177              		.loc 1 807 0
 1178 0034 0126     		mov	r6, #1
 1179 0036 00E0     		b	.L90
 1180              	.LVL107:
 1181              	.L94:
 787:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1182              		.loc 1 787 0
 1183 0038 0026     		mov	r6, #0
 1184              	.LVL108:
 1185              	.L90:
 833:.\Generated_Source\PSoC4/CyLib.c **** 
 1186              		.loc 1 833 0
 1187 003a 214A     		ldr	r2, .L95
 1188 003c 1368     		ldr	r3, [r2]
 1189 003e 0721     		mov	r1, #7
 1190 0040 8B43     		bic	r3, r1
 1191 0042 1360     		str	r3, [r2]
 1192              	.LVL109:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 66


 851:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1193              		.loc 1 851 0
 1194 0044 1F4B     		ldr	r3, .L95+4
 1195 0046 E318     		add	r3, r4, r3
 1196 0048 1B78     		ldrb	r3, [r3]
 1197 004a DBB2     		uxtb	r3, r3
 1198              	.LVL110:
 853:.\Generated_Source\PSoC4/CyLib.c **** 
 1199              		.loc 1 853 0
 1200 004c 1E4A     		ldr	r2, .L95+8
 1201 004e 1360     		str	r3, [r2]
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 1202              		.loc 1 856 0
 1203 0050 1E4A     		ldr	r2, .L95+12
 1204 0052 1368     		ldr	r3, [r2]
 1205              	.LVL111:
 1206 0054 8B43     		bic	r3, r1
 1207 0056 1360     		str	r3, [r2]
 1208              	.LVL112:
 859:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1209              		.loc 1 859 0
 1210 0058 1D48     		ldr	r0, .L95+16
 1211 005a 0368     		ldr	r3, [r0]
 1212 005c 7F22     		mov	r2, #127
 1213 005e 9343     		bic	r3, r2
 1214 0060 191C     		mov	r1, r3
 860:.\Generated_Source\PSoC4/CyLib.c **** 
 1215              		.loc 1 860 0
 1216 0062 1C4B     		ldr	r3, .L95+20
 1217 0064 E318     		add	r3, r4, r3
 1218 0066 1B78     		ldrb	r3, [r3]
 1219 0068 1340     		and	r3, r2
 859:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1220              		.loc 1 859 0
 1221 006a 0B43     		orr	r3, r1
 1222 006c 0360     		str	r3, [r0]
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 862 0
 1224 006e 3220     		mov	r0, #50
 1225 0070 FFF7FEFF 		bl	CyDelayCycles
 1226              	.LVL113:
 864:.\Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 864 0
 1228 0074 182C     		cmp	r4, #24
 1229 0076 16D9     		bls	.L91
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1230              		.loc 1 867 0
 1231 0078 114F     		ldr	r7, .L95
 1232 007a 3B68     		ldr	r3, [r7]
 1233 007c 0725     		mov	r5, #7
 1234 007e AB43     		bic	r3, r5
 1235 0080 1A1C     		mov	r2, r3
 868:.\Generated_Source\PSoC4/CyLib.c **** 
 1236              		.loc 1 868 0
 1237 0082 231C     		mov	r3, r4
 1238 0084 1C3B     		sub	r3, r3, #28
 1239 0086 9B08     		lsr	r3, r3, #2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 67


 1240 0088 2B40     		and	r3, r5
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1241              		.loc 1 867 0
 1242 008a 1343     		orr	r3, r2
 1243 008c 3B60     		str	r3, [r7]
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 1244              		.loc 1 870 0
 1245 008e 3220     		mov	r0, #50
 1246 0090 FFF7FEFF 		bl	CyDelayCycles
 1247              	.LVL114:
 874:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1248              		.loc 1 874 0
 1249 0094 3A68     		ldr	r2, [r7]
 1250 0096 AA43     		bic	r2, r5
 875:.\Generated_Source\PSoC4/CyLib.c ****             }
 1251              		.loc 1 875 0
 1252 0098 231C     		mov	r3, r4
 1253 009a 183B     		sub	r3, r3, #24
 1254 009c 9B08     		lsr	r3, r3, #2
 1255 009e 2C1C     		mov	r4, r5
 1256              	.LVL115:
 1257 00a0 1C40     		and	r4, r3
 874:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1258              		.loc 1 874 0
 1259 00a2 1443     		orr	r4, r2
 1260 00a4 3C60     		str	r4, [r7]
 1261              	.L91:
 879:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1262              		.loc 1 879 0
 1263 00a6 012E     		cmp	r6, #1
 1264 00a8 01D1     		bne	.L92
 881:.\Generated_Source\PSoC4/CyLib.c ****                 }
 1265              		.loc 1 881 0
 1266 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1267              	.LVL116:
 1268              	.L92:
 893:.\Generated_Source\PSoC4/CyLib.c ****         }
 1269              		.loc 1 893 0
 1270 00ae 0198     		ldr	r0, [sp, #4]
 1271 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1272              	.LVL117:
 1273 00b4 02E0     		b	.L87
 1274              	.LVL118:
 1275              	.L89:
 898:.\Generated_Source\PSoC4/CyLib.c ****         }
 1276              		.loc 1 898 0 discriminator 1
 1277 00b6 0020     		mov	r0, #0
 1278              	.LVL119:
 1279 00b8 FFF7FEFF 		bl	CyHalt
 1280              	.LVL120:
 1281              	.L87:
 900:.\Generated_Source\PSoC4/CyLib.c **** 
 1282              		.loc 1 900 0
 1283 00bc 03B0     		add	sp, sp, #12
 1284              		@ sp needed
 1285 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1286              	.L96:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 68


 1287              		.align	2
 1288              	.L95:
 1289 00c0 080F0340 		.word	1073942280
 1290 00c4 CDF1FF0F 		.word	268431821
 1291 00c8 0C0F0340 		.word	1073942284
 1292 00cc 100F0340 		.word	1073942288
 1293 00d0 180F0340 		.word	1073942296
 1294 00d4 B4F1FF0F 		.word	268431796
 1295              		.cfi_endproc
 1296              	.LFE9:
 1297              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1298              		.section	.text.CyDelayUs,"ax",%progbits
 1299              		.align	2
 1300              		.global	CyDelayUs
 1301              		.code	16
 1302              		.thumb_func
 1303              		.type	CyDelayUs, %function
 1304              	CyDelayUs:
 1305              	.LFB28:
2423:.\Generated_Source\PSoC4/CyLib.c **** 
2424:.\Generated_Source\PSoC4/CyLib.c **** 
2425:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:.\Generated_Source\PSoC4/CyLib.c **** *
2430:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:.\Generated_Source\PSoC4/CyLib.c **** {
 1306              		.loc 1 2434 0
 1307              		.cfi_startproc
 1308              	.LVL121:
 1309 0000 08B5     		push	{r3, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 3, -8
 1312              		.cfi_offset 14, -4
2435:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1313              		.loc 1 2435 0
 1314 0002 034B     		ldr	r3, .L98
 1315 0004 1B7A     		ldrb	r3, [r3, #8]
 1316 0006 5843     		mul	r0, r3
 1317              	.LVL122:
 1318 0008 FFF7FEFF 		bl	CyDelayCycles
 1319              	.LVL123:
2436:.\Generated_Source\PSoC4/CyLib.c **** }
 1320              		.loc 1 2436 0
 1321              		@ sp needed
 1322 000c 08BD     		pop	{r3, pc}
 1323              	.L99:
 1324 000e C046     		.align	2
 1325              	.L98:
 1326 0010 00000000 		.word	.LANCHOR0
 1327              		.cfi_endproc
 1328              	.LFE28:
 1329              		.size	CyDelayUs, .-CyDelayUs
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 69


 1330              		.global	__aeabi_uidiv
 1331              		.section	.text.CyDelayFreq,"ax",%progbits
 1332              		.align	2
 1333              		.global	CyDelayFreq
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	CyDelayFreq, %function
 1337              	CyDelayFreq:
 1338              	.LFB29:
2437:.\Generated_Source\PSoC4/CyLib.c **** 
2438:.\Generated_Source\PSoC4/CyLib.c **** 
2439:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:.\Generated_Source\PSoC4/CyLib.c **** *
2444:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:.\Generated_Source\PSoC4/CyLib.c **** *
2446:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:.\Generated_Source\PSoC4/CyLib.c **** {
 1339              		.loc 1 2448 0
 1340              		.cfi_startproc
 1341              	.LVL124:
 1342 0000 38B5     		push	{r3, r4, r5, lr}
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 3, -16
 1345              		.cfi_offset 4, -12
 1346              		.cfi_offset 5, -8
 1347              		.cfi_offset 14, -4
2449:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1348              		.loc 1 2449 0
 1349 0002 0028     		cmp	r0, #0
 1350 0004 02D0     		beq	.L101
2450:.\Generated_Source\PSoC4/CyLib.c ****     {
2451:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1351              		.loc 1 2451 0
 1352 0006 0C4B     		ldr	r3, .L103
 1353 0008 D860     		str	r0, [r3, #12]
 1354 000a 02E0     		b	.L102
 1355              	.L101:
2452:.\Generated_Source\PSoC4/CyLib.c ****     }
2453:.\Generated_Source\PSoC4/CyLib.c ****     else
2454:.\Generated_Source\PSoC4/CyLib.c ****     {
2455:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1356              		.loc 1 2455 0
 1357 000c 0B4A     		ldr	r2, .L103+4
 1358 000e 0A4B     		ldr	r3, .L103
 1359 0010 DA60     		str	r2, [r3, #12]
 1360              	.L102:
2456:.\Generated_Source\PSoC4/CyLib.c ****     }
2457:.\Generated_Source\PSoC4/CyLib.c **** 
2458:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1361              		.loc 1 2458 0
 1362 0012 094C     		ldr	r4, .L103
 1363 0014 E568     		ldr	r5, [r4, #12]
 1364 0016 0A4B     		ldr	r3, .L103+8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 70


 1365 0018 E818     		add	r0, r5, r3
 1366              	.LVL125:
 1367 001a 0A49     		ldr	r1, .L103+12
 1368 001c FFF7FEFF 		bl	__aeabi_uidiv
 1369              	.LVL126:
 1370 0020 2072     		strb	r0, [r4, #8]
2459:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1371              		.loc 1 2459 0
 1372 0022 094B     		ldr	r3, .L103+16
 1373 0024 E818     		add	r0, r5, r3
 1374 0026 FA21     		mov	r1, #250
 1375 0028 8900     		lsl	r1, r1, #2
 1376 002a FFF7FEFF 		bl	__aeabi_uidiv
 1377              	.LVL127:
 1378 002e 6060     		str	r0, [r4, #4]
2460:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1379              		.loc 1 2460 0
 1380 0030 C003     		lsl	r0, r0, #15
 1381 0032 2060     		str	r0, [r4]
2461:.\Generated_Source\PSoC4/CyLib.c **** }
 1382              		.loc 1 2461 0
 1383              		@ sp needed
 1384 0034 38BD     		pop	{r3, r4, r5, pc}
 1385              	.L104:
 1386 0036 C046     		.align	2
 1387              	.L103:
 1388 0038 00000000 		.word	.LANCHOR0
 1389 003c 00366E01 		.word	24000000
 1390 0040 3F420F00 		.word	999999
 1391 0044 40420F00 		.word	1000000
 1392 0048 E7030000 		.word	999
 1393              		.cfi_endproc
 1394              	.LFE29:
 1395              		.size	CyDelayFreq, .-CyDelayFreq
 1396              		.section	.text.CySysTickStop,"ax",%progbits
 1397              		.align	2
 1398              		.global	CySysTickStop
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	CySysTickStop, %function
 1402              	CySysTickStop:
 1403              	.LFB33:
2462:.\Generated_Source\PSoC4/CyLib.c **** 
2463:.\Generated_Source\PSoC4/CyLib.c **** 
2464:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:.\Generated_Source\PSoC4/CyLib.c **** *
2475:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 71


2477:.\Generated_Source\PSoC4/CyLib.c **** *
2478:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:.\Generated_Source\PSoC4/CyLib.c **** {
2481:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:.\Generated_Source\PSoC4/CyLib.c ****     {
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:.\Generated_Source\PSoC4/CyLib.c ****     }
2486:.\Generated_Source\PSoC4/CyLib.c **** 
2487:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:.\Generated_Source\PSoC4/CyLib.c **** }
2489:.\Generated_Source\PSoC4/CyLib.c **** 
2490:.\Generated_Source\PSoC4/CyLib.c **** 
2491:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:.\Generated_Source\PSoC4/CyLib.c **** *
2495:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:.\Generated_Source\PSoC4/CyLib.c **** *
2504:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:.\Generated_Source\PSoC4/CyLib.c **** *
2507:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:.\Generated_Source\PSoC4/CyLib.c **** {
2510:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:.\Generated_Source\PSoC4/CyLib.c ****     {
2514:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:.\Generated_Source\PSoC4/CyLib.c ****     }
2516:.\Generated_Source\PSoC4/CyLib.c **** 
2517:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:.\Generated_Source\PSoC4/CyLib.c **** 
2519:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:.\Generated_Source\PSoC4/CyLib.c **** 
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:.\Generated_Source\PSoC4/CyLib.c **** }
2527:.\Generated_Source\PSoC4/CyLib.c **** 
2528:.\Generated_Source\PSoC4/CyLib.c **** 
2529:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:.\Generated_Source\PSoC4/CyLib.c **** *
2533:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 72


2534:.\Generated_Source\PSoC4/CyLib.c **** *
2535:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:.\Generated_Source\PSoC4/CyLib.c **** *
2538:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:.\Generated_Source\PSoC4/CyLib.c **** {
2541:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:.\Generated_Source\PSoC4/CyLib.c **** }
2544:.\Generated_Source\PSoC4/CyLib.c **** 
2545:.\Generated_Source\PSoC4/CyLib.c **** 
2546:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:.\Generated_Source\PSoC4/CyLib.c **** *
2552:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:.\Generated_Source\PSoC4/CyLib.c **** *
2555:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:.\Generated_Source\PSoC4/CyLib.c **** {
 1404              		.loc 1 2557 0
 1405              		.cfi_startproc
2558:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1406              		.loc 1 2558 0
 1407 0000 024A     		ldr	r2, .L106
 1408 0002 1368     		ldr	r3, [r2]
 1409 0004 0121     		mov	r1, #1
 1410 0006 8B43     		bic	r3, r1
 1411 0008 1360     		str	r3, [r2]
2559:.\Generated_Source\PSoC4/CyLib.c **** }
 1412              		.loc 1 2559 0
 1413              		@ sp needed
 1414 000a 7047     		bx	lr
 1415              	.L107:
 1416              		.align	2
 1417              	.L106:
 1418 000c 10E000E0 		.word	-536813552
 1419              		.cfi_endproc
 1420              	.LFE33:
 1421              		.size	CySysTickStop, .-CySysTickStop
 1422              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1423              		.align	2
 1424              		.global	CySysTickEnableInterrupt
 1425              		.code	16
 1426              		.thumb_func
 1427              		.type	CySysTickEnableInterrupt, %function
 1428              	CySysTickEnableInterrupt:
 1429              	.LFB34:
2560:.\Generated_Source\PSoC4/CyLib.c **** 
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 73


2565:.\Generated_Source\PSoC4/CyLib.c **** *
2566:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:.\Generated_Source\PSoC4/CyLib.c **** *
2568:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:.\Generated_Source\PSoC4/CyLib.c **** *
2571:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:.\Generated_Source\PSoC4/CyLib.c **** {
 1430              		.loc 1 2573 0
 1431              		.cfi_startproc
2574:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1432              		.loc 1 2574 0
 1433 0000 024A     		ldr	r2, .L109
 1434 0002 1168     		ldr	r1, [r2]
 1435 0004 0223     		mov	r3, #2
 1436 0006 0B43     		orr	r3, r1
 1437 0008 1360     		str	r3, [r2]
2575:.\Generated_Source\PSoC4/CyLib.c **** }
 1438              		.loc 1 2575 0
 1439              		@ sp needed
 1440 000a 7047     		bx	lr
 1441              	.L110:
 1442              		.align	2
 1443              	.L109:
 1444 000c 10E000E0 		.word	-536813552
 1445              		.cfi_endproc
 1446              	.LFE34:
 1447              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1448              		.section	.text.CySysTickEnable,"ax",%progbits
 1449              		.align	2
 1450              		.global	CySysTickEnable
 1451              		.code	16
 1452              		.thumb_func
 1453              		.type	CySysTickEnable, %function
 1454              	CySysTickEnable:
 1455              	.LFB32:
2540:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1456              		.loc 1 2540 0
 1457              		.cfi_startproc
 1458 0000 08B5     		push	{r3, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 3, -8
 1461              		.cfi_offset 14, -4
2541:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1462              		.loc 1 2541 0
 1463 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1464              	.LVL128:
2542:.\Generated_Source\PSoC4/CyLib.c **** }
 1465              		.loc 1 2542 0
 1466 0006 034A     		ldr	r2, .L112
 1467 0008 1168     		ldr	r1, [r2]
 1468 000a 0123     		mov	r3, #1
 1469 000c 0B43     		orr	r3, r1
 1470 000e 1360     		str	r3, [r2]
2543:.\Generated_Source\PSoC4/CyLib.c **** 
 1471              		.loc 1 2543 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 74


 1472              		@ sp needed
 1473 0010 08BD     		pop	{r3, pc}
 1474              	.L113:
 1475 0012 C046     		.align	2
 1476              	.L112:
 1477 0014 10E000E0 		.word	-536813552
 1478              		.cfi_endproc
 1479              	.LFE32:
 1480              		.size	CySysTickEnable, .-CySysTickEnable
 1481              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1482              		.align	2
 1483              		.global	CySysTickDisableInterrupt
 1484              		.code	16
 1485              		.thumb_func
 1486              		.type	CySysTickDisableInterrupt, %function
 1487              	CySysTickDisableInterrupt:
 1488              	.LFB35:
2576:.\Generated_Source\PSoC4/CyLib.c **** 
2577:.\Generated_Source\PSoC4/CyLib.c **** 
2578:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:.\Generated_Source\PSoC4/CyLib.c **** *
2582:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:.\Generated_Source\PSoC4/CyLib.c **** *
2584:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:.\Generated_Source\PSoC4/CyLib.c **** *
2587:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:.\Generated_Source\PSoC4/CyLib.c **** {
 1489              		.loc 1 2589 0
 1490              		.cfi_startproc
2590:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1491              		.loc 1 2590 0
 1492 0000 024A     		ldr	r2, .L115
 1493 0002 1368     		ldr	r3, [r2]
 1494 0004 0221     		mov	r1, #2
 1495 0006 8B43     		bic	r3, r1
 1496 0008 1360     		str	r3, [r2]
2591:.\Generated_Source\PSoC4/CyLib.c **** }
 1497              		.loc 1 2591 0
 1498              		@ sp needed
 1499 000a 7047     		bx	lr
 1500              	.L116:
 1501              		.align	2
 1502              	.L115:
 1503 000c 10E000E0 		.word	-536813552
 1504              		.cfi_endproc
 1505              	.LFE35:
 1506              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1507              		.section	.text.CySysTickSetReload,"ax",%progbits
 1508              		.align	2
 1509              		.global	CySysTickSetReload
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	CySysTickSetReload, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 75


 1513              	CySysTickSetReload:
 1514              	.LFB36:
2592:.\Generated_Source\PSoC4/CyLib.c **** 
2593:.\Generated_Source\PSoC4/CyLib.c **** 
2594:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:.\Generated_Source\PSoC4/CyLib.c **** *
2598:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:.\Generated_Source\PSoC4/CyLib.c **** *
2602:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:.\Generated_Source\PSoC4/CyLib.c **** *
2604:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:.\Generated_Source\PSoC4/CyLib.c **** {
 1515              		.loc 1 2606 0
 1516              		.cfi_startproc
 1517              	.LVL129:
2607:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1518              		.loc 1 2607 0
 1519 0000 0002     		lsl	r0, r0, #8
 1520              	.LVL130:
 1521 0002 000A     		lsr	r0, r0, #8
 1522 0004 014B     		ldr	r3, .L118
 1523 0006 1860     		str	r0, [r3]
2608:.\Generated_Source\PSoC4/CyLib.c **** }
 1524              		.loc 1 2608 0
 1525              		@ sp needed
 1526 0008 7047     		bx	lr
 1527              	.L119:
 1528 000a C046     		.align	2
 1529              	.L118:
 1530 000c 14E000E0 		.word	-536813548
 1531              		.cfi_endproc
 1532              	.LFE36:
 1533              		.size	CySysTickSetReload, .-CySysTickSetReload
 1534              		.section	.text.CySysTickGetReload,"ax",%progbits
 1535              		.align	2
 1536              		.global	CySysTickGetReload
 1537              		.code	16
 1538              		.thumb_func
 1539              		.type	CySysTickGetReload, %function
 1540              	CySysTickGetReload:
 1541              	.LFB37:
2609:.\Generated_Source\PSoC4/CyLib.c **** 
2610:.\Generated_Source\PSoC4/CyLib.c **** 
2611:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:.\Generated_Source\PSoC4/CyLib.c **** *
2615:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:.\Generated_Source\PSoC4/CyLib.c **** *
2617:.\Generated_Source\PSoC4/CyLib.c **** * \return
2618:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 76


2620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:.\Generated_Source\PSoC4/CyLib.c **** {
 1542              		.loc 1 2622 0
 1543              		.cfi_startproc
2623:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1544              		.loc 1 2623 0
 1545 0000 024B     		ldr	r3, .L121
 1546 0002 1868     		ldr	r0, [r3]
 1547 0004 0002     		lsl	r0, r0, #8
 1548 0006 000A     		lsr	r0, r0, #8
2624:.\Generated_Source\PSoC4/CyLib.c **** }
 1549              		.loc 1 2624 0
 1550              		@ sp needed
 1551 0008 7047     		bx	lr
 1552              	.L122:
 1553 000a C046     		.align	2
 1554              	.L121:
 1555 000c 14E000E0 		.word	-536813548
 1556              		.cfi_endproc
 1557              	.LFE37:
 1558              		.size	CySysTickGetReload, .-CySysTickGetReload
 1559              		.section	.text.CySysTickGetValue,"ax",%progbits
 1560              		.align	2
 1561              		.global	CySysTickGetValue
 1562              		.code	16
 1563              		.thumb_func
 1564              		.type	CySysTickGetValue, %function
 1565              	CySysTickGetValue:
 1566              	.LFB38:
2625:.\Generated_Source\PSoC4/CyLib.c **** 
2626:.\Generated_Source\PSoC4/CyLib.c **** 
2627:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:.\Generated_Source\PSoC4/CyLib.c **** *
2631:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:.\Generated_Source\PSoC4/CyLib.c **** *
2633:.\Generated_Source\PSoC4/CyLib.c **** * \return
2634:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:.\Generated_Source\PSoC4/CyLib.c **** *
2636:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:.\Generated_Source\PSoC4/CyLib.c **** {
 1567              		.loc 1 2638 0
 1568              		.cfi_startproc
2639:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1569              		.loc 1 2639 0
 1570 0000 024B     		ldr	r3, .L124
 1571 0002 1868     		ldr	r0, [r3]
 1572 0004 0002     		lsl	r0, r0, #8
 1573 0006 000A     		lsr	r0, r0, #8
2640:.\Generated_Source\PSoC4/CyLib.c **** }
 1574              		.loc 1 2640 0
 1575              		@ sp needed
 1576 0008 7047     		bx	lr
 1577              	.L125:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 77


 1578 000a C046     		.align	2
 1579              	.L124:
 1580 000c 18E000E0 		.word	-536813544
 1581              		.cfi_endproc
 1582              	.LFE38:
 1583              		.size	CySysTickGetValue, .-CySysTickGetValue
 1584              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1585              		.align	2
 1586              		.global	CySysTickSetClockSource
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CySysTickSetClockSource, %function
 1590              	CySysTickSetClockSource:
 1591              	.LFB39:
2641:.\Generated_Source\PSoC4/CyLib.c **** 
2642:.\Generated_Source\PSoC4/CyLib.c **** 
2643:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:.\Generated_Source\PSoC4/CyLib.c ****     *
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:.\Generated_Source\PSoC4/CyLib.c ****     *
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:.\Generated_Source\PSoC4/CyLib.c ****     *
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1592              		.loc 1 2670 0
 1593              		.cfi_startproc
 1594              	.LVL131:
2671:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1595              		.loc 1 2671 0
 1596 0000 0128     		cmp	r0, #1
 1597 0002 05D1     		bne	.L127
2672:.\Generated_Source\PSoC4/CyLib.c ****         {
2673:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1598              		.loc 1 2673 0
 1599 0004 054A     		ldr	r2, .L129
 1600 0006 1168     		ldr	r1, [r2]
 1601 0008 0423     		mov	r3, #4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 78


 1602 000a 0B43     		orr	r3, r1
 1603 000c 1360     		str	r3, [r2]
 1604 000e 04E0     		b	.L126
 1605              	.L127:
2674:.\Generated_Source\PSoC4/CyLib.c ****         }
2675:.\Generated_Source\PSoC4/CyLib.c ****         else
2676:.\Generated_Source\PSoC4/CyLib.c ****         {
2677:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1606              		.loc 1 2677 0
 1607 0010 024A     		ldr	r2, .L129
 1608 0012 1368     		ldr	r3, [r2]
 1609 0014 0421     		mov	r1, #4
 1610 0016 8B43     		bic	r3, r1
 1611 0018 1360     		str	r3, [r2]
 1612              	.L126:
2678:.\Generated_Source\PSoC4/CyLib.c ****         }
2679:.\Generated_Source\PSoC4/CyLib.c ****     }
 1613              		.loc 1 2679 0
 1614              		@ sp needed
 1615 001a 7047     		bx	lr
 1616              	.L130:
 1617              		.align	2
 1618              	.L129:
 1619 001c 10E000E0 		.word	-536813552
 1620              		.cfi_endproc
 1621              	.LFE39:
 1622              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1623              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1624              		.align	2
 1625              		.global	CySysTickGetCountFlag
 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	CySysTickGetCountFlag, %function
 1629              	CySysTickGetCountFlag:
 1630              	.LFB40:
2680:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:.\Generated_Source\PSoC4/CyLib.c **** 
2682:.\Generated_Source\PSoC4/CyLib.c **** 
2683:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** * \return
2691:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:.\Generated_Source\PSoC4/CyLib.c **** *
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:.\Generated_Source\PSoC4/CyLib.c **** {
 1631              		.loc 1 2699 0
 1632              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 79


2700:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1633              		.loc 1 2700 0
 1634 0000 024B     		ldr	r3, .L132
 1635 0002 1868     		ldr	r0, [r3]
 1636 0004 C003     		lsl	r0, r0, #15
 1637 0006 C00F     		lsr	r0, r0, #31
2701:.\Generated_Source\PSoC4/CyLib.c **** }
 1638              		.loc 1 2701 0
 1639              		@ sp needed
 1640 0008 7047     		bx	lr
 1641              	.L133:
 1642 000a C046     		.align	2
 1643              	.L132:
 1644 000c 10E000E0 		.word	-536813552
 1645              		.cfi_endproc
 1646              	.LFE40:
 1647              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1648              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1649              		.align	2
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickServiceCallbacks, %function
 1653              	CySysTickServiceCallbacks:
 1654              	.LFB44:
2702:.\Generated_Source\PSoC4/CyLib.c **** 
2703:.\Generated_Source\PSoC4/CyLib.c **** 
2704:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:.\Generated_Source\PSoC4/CyLib.c **** *
2708:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:.\Generated_Source\PSoC4/CyLib.c **** *
2710:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:.\Generated_Source\PSoC4/CyLib.c **** {
2713:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:.\Generated_Source\PSoC4/CyLib.c **** }
2715:.\Generated_Source\PSoC4/CyLib.c **** 
2716:.\Generated_Source\PSoC4/CyLib.c **** 
2717:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:.\Generated_Source\PSoC4/CyLib.c **** *
2725:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:.\Generated_Source\PSoC4/CyLib.c **** *
2734:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 80


2735:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** * \return
2739:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:.\Generated_Source\PSoC4/CyLib.c **** *
2742:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:.\Generated_Source\PSoC4/CyLib.c **** *
2745:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:.\Generated_Source\PSoC4/CyLib.c **** {
2748:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:.\Generated_Source\PSoC4/CyLib.c **** 
2750:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:.\Generated_Source\PSoC4/CyLib.c **** }
2754:.\Generated_Source\PSoC4/CyLib.c **** 
2755:.\Generated_Source\PSoC4/CyLib.c **** 
2756:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:.\Generated_Source\PSoC4/CyLib.c **** *
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:.\Generated_Source\PSoC4/CyLib.c **** *
2765:.\Generated_Source\PSoC4/CyLib.c **** * \return
2766:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:.\Generated_Source\PSoC4/CyLib.c **** *
2769:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:.\Generated_Source\PSoC4/CyLib.c **** {
2772:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:.\Generated_Source\PSoC4/CyLib.c **** }
2774:.\Generated_Source\PSoC4/CyLib.c **** 
2775:.\Generated_Source\PSoC4/CyLib.c **** 
2776:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:.\Generated_Source\PSoC4/CyLib.c **** *
2780:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:.\Generated_Source\PSoC4/CyLib.c **** *
2782:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:.\Generated_Source\PSoC4/CyLib.c **** {
 1655              		.loc 1 2784 0
 1656              		.cfi_startproc
 1657 0000 10B5     		push	{r4, lr}
 1658              		.cfi_def_cfa_offset 8
 1659              		.cfi_offset 4, -8
 1660              		.cfi_offset 14, -4
2785:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 81


2786:.\Generated_Source\PSoC4/CyLib.c **** 
2787:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1661              		.loc 1 2788 0
 1662 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1663              	.LVL132:
 1664 0006 0128     		cmp	r0, #1
 1665 0008 0BD1     		bne	.L134
 1666 000a 07E0     		b	.L139
 1667              	.LVL133:
 1668              	.L138:
2789:.\Generated_Source\PSoC4/CyLib.c ****     {
2790:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:.\Generated_Source\PSoC4/CyLib.c ****         {
2792:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1669              		.loc 1 2792 0
 1670 000c A300     		lsl	r3, r4, #2
 1671 000e 054A     		ldr	r2, .L140
 1672 0010 9B58     		ldr	r3, [r3, r2]
 1673 0012 002B     		cmp	r3, #0
 1674 0014 00D0     		beq	.L137
2793:.\Generated_Source\PSoC4/CyLib.c ****             {
2794:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1675              		.loc 1 2794 0
 1676 0016 9847     		blx	r3
 1677              	.LVL134:
 1678              	.L137:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1679              		.loc 1 2790 0 discriminator 2
 1680 0018 0134     		add	r4, r4, #1
 1681              	.LVL135:
 1682 001a 00E0     		b	.L135
 1683              	.LVL136:
 1684              	.L139:
 1685 001c 0024     		mov	r4, #0
 1686              	.L135:
 1687              	.LVL137:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1688              		.loc 1 2790 0 is_stmt 0 discriminator 1
 1689 001e 042C     		cmp	r4, #4
 1690 0020 F4D9     		bls	.L138
 1691              	.LVL138:
 1692              	.L134:
2795:.\Generated_Source\PSoC4/CyLib.c ****             }
2796:.\Generated_Source\PSoC4/CyLib.c ****         }
2797:.\Generated_Source\PSoC4/CyLib.c ****     }
2798:.\Generated_Source\PSoC4/CyLib.c **** }
 1693              		.loc 1 2798 0 is_stmt 1
 1694              		@ sp needed
 1695 0022 10BD     		pop	{r4, pc}
 1696              	.L141:
 1697              		.align	2
 1698              	.L140:
 1699 0024 00000000 		.word	.LANCHOR2
 1700              		.cfi_endproc
 1701              	.LFE44:
 1702              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 82


 1703              		.section	.text.CySysTickClear,"ax",%progbits
 1704              		.align	2
 1705              		.global	CySysTickClear
 1706              		.code	16
 1707              		.thumb_func
 1708              		.type	CySysTickClear, %function
 1709              	CySysTickClear:
 1710              	.LFB41:
2712:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1711              		.loc 1 2712 0
 1712              		.cfi_startproc
2713:.\Generated_Source\PSoC4/CyLib.c **** }
 1713              		.loc 1 2713 0
 1714 0000 0022     		mov	r2, #0
 1715 0002 014B     		ldr	r3, .L143
 1716 0004 1A60     		str	r2, [r3]
2714:.\Generated_Source\PSoC4/CyLib.c **** 
 1717              		.loc 1 2714 0
 1718              		@ sp needed
 1719 0006 7047     		bx	lr
 1720              	.L144:
 1721              		.align	2
 1722              	.L143:
 1723 0008 18E000E0 		.word	-536813544
 1724              		.cfi_endproc
 1725              	.LFE41:
 1726              		.size	CySysTickClear, .-CySysTickClear
 1727              		.section	.text.CySysTickInit,"ax",%progbits
 1728              		.align	2
 1729              		.global	CySysTickInit
 1730              		.code	16
 1731              		.thumb_func
 1732              		.type	CySysTickInit, %function
 1733              	CySysTickInit:
 1734              	.LFB31:
2509:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1735              		.loc 1 2509 0
 1736              		.cfi_startproc
 1737 0000 08B5     		push	{r3, lr}
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 3, -8
 1740              		.cfi_offset 14, -4
 1741              	.LVL139:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1742              		.loc 1 2512 0
 1743 0002 0023     		mov	r3, #0
 1744 0004 04E0     		b	.L146
 1745              	.LVL140:
 1746              	.L147:
2514:.\Generated_Source\PSoC4/CyLib.c ****     }
 1747              		.loc 1 2514 0 discriminator 3
 1748 0006 9900     		lsl	r1, r3, #2
 1749 0008 0020     		mov	r0, #0
 1750 000a 0D4A     		ldr	r2, .L148
 1751 000c 8850     		str	r0, [r1, r2]
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1752              		.loc 1 2512 0 discriminator 3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 83


 1753 000e 0133     		add	r3, r3, #1
 1754              	.LVL141:
 1755              	.L146:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1756              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1757 0010 042B     		cmp	r3, #4
 1758 0012 F8D9     		bls	.L147
2517:.\Generated_Source\PSoC4/CyLib.c **** 
 1759              		.loc 1 2517 0 is_stmt 1
 1760 0014 0F20     		mov	r0, #15
 1761 0016 0B49     		ldr	r1, .L148+4
 1762 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1763              	.LVL142:
2520:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1764              		.loc 1 2520 0
 1765 001c 0120     		mov	r0, #1
 1766 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1767              	.LVL143:
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1768              		.loc 1 2523 0
 1769 0022 094B     		ldr	r3, .L148+8
 1770 0024 D868     		ldr	r0, [r3, #12]
 1771 0026 FA21     		mov	r1, #250
 1772 0028 8900     		lsl	r1, r1, #2
 1773 002a FFF7FEFF 		bl	__aeabi_uidiv
 1774              	.LVL144:
 1775 002e FFF7FEFF 		bl	CySysTickSetReload
 1776              	.LVL145:
2524:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1777              		.loc 1 2524 0
 1778 0032 FFF7FEFF 		bl	CySysTickClear
 1779              	.LVL146:
2525:.\Generated_Source\PSoC4/CyLib.c **** }
 1780              		.loc 1 2525 0
 1781 0036 0F20     		mov	r0, #15
 1782 0038 FFF7FEFF 		bl	CyIntEnable
 1783              	.LVL147:
2526:.\Generated_Source\PSoC4/CyLib.c **** 
 1784              		.loc 1 2526 0
 1785              		@ sp needed
 1786 003c 08BD     		pop	{r3, pc}
 1787              	.L149:
 1788 003e C046     		.align	2
 1789              	.L148:
 1790 0040 00000000 		.word	.LANCHOR2
 1791 0044 00000000 		.word	CySysTickServiceCallbacks
 1792 0048 00000000 		.word	.LANCHOR0
 1793              		.cfi_endproc
 1794              	.LFE31:
 1795              		.size	CySysTickInit, .-CySysTickInit
 1796              		.section	.text.CySysTickStart,"ax",%progbits
 1797              		.align	2
 1798              		.global	CySysTickStart
 1799              		.code	16
 1800              		.thumb_func
 1801              		.type	CySysTickStart, %function
 1802              	CySysTickStart:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 84


 1803              	.LFB30:
2480:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1804              		.loc 1 2480 0
 1805              		.cfi_startproc
 1806 0000 08B5     		push	{r3, lr}
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 3, -8
 1809              		.cfi_offset 14, -4
2481:.\Generated_Source\PSoC4/CyLib.c ****     {
 1810              		.loc 1 2481 0
 1811 0002 064B     		ldr	r3, .L152
 1812 0004 5B69     		ldr	r3, [r3, #20]
 1813 0006 002B     		cmp	r3, #0
 1814 0008 04D1     		bne	.L151
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1815              		.loc 1 2483 0
 1816 000a FFF7FEFF 		bl	CySysTickInit
 1817              	.LVL148:
2484:.\Generated_Source\PSoC4/CyLib.c ****     }
 1818              		.loc 1 2484 0
 1819 000e 0122     		mov	r2, #1
 1820 0010 024B     		ldr	r3, .L152
 1821 0012 5A61     		str	r2, [r3, #20]
 1822              	.L151:
2487:.\Generated_Source\PSoC4/CyLib.c **** }
 1823              		.loc 1 2487 0
 1824 0014 FFF7FEFF 		bl	CySysTickEnable
 1825              	.LVL149:
2488:.\Generated_Source\PSoC4/CyLib.c **** 
 1826              		.loc 1 2488 0
 1827              		@ sp needed
 1828 0018 08BD     		pop	{r3, pc}
 1829              	.L153:
 1830 001a C046     		.align	2
 1831              	.L152:
 1832 001c 00000000 		.word	.LANCHOR2
 1833              		.cfi_endproc
 1834              	.LFE30:
 1835              		.size	CySysTickStart, .-CySysTickStart
 1836              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1837              		.align	2
 1838              		.global	CySysTickSetCallback
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	CySysTickSetCallback, %function
 1842              	CySysTickSetCallback:
 1843              	.LFB42:
2747:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1844              		.loc 1 2747 0
 1845              		.cfi_startproc
 1846              	.LVL150:
2750:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1847              		.loc 1 2750 0
 1848 0000 024A     		ldr	r2, .L155
 1849 0002 8300     		lsl	r3, r0, #2
 1850 0004 9858     		ldr	r0, [r3, r2]
 1851              	.LVL151:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 85


2751:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1852              		.loc 1 2751 0
 1853 0006 9950     		str	r1, [r3, r2]
2753:.\Generated_Source\PSoC4/CyLib.c **** 
 1854              		.loc 1 2753 0
 1855              		@ sp needed
 1856 0008 7047     		bx	lr
 1857              	.L156:
 1858 000a C046     		.align	2
 1859              	.L155:
 1860 000c 00000000 		.word	.LANCHOR2
 1861              		.cfi_endproc
 1862              	.LFE42:
 1863              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1864              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickGetCallback
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickGetCallback, %function
 1870              	CySysTickGetCallback:
 1871              	.LFB43:
2771:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1872              		.loc 1 2771 0
 1873              		.cfi_startproc
 1874              	.LVL152:
2772:.\Generated_Source\PSoC4/CyLib.c **** }
 1875              		.loc 1 2772 0
 1876 0000 8000     		lsl	r0, r0, #2
 1877              	.LVL153:
 1878 0002 014B     		ldr	r3, .L158
 1879 0004 C058     		ldr	r0, [r0, r3]
2773:.\Generated_Source\PSoC4/CyLib.c **** 
 1880              		.loc 1 2773 0
 1881              		@ sp needed
 1882 0006 7047     		bx	lr
 1883              	.L159:
 1884              		.align	2
 1885              	.L158:
 1886 0008 00000000 		.word	.LANCHOR2
 1887              		.cfi_endproc
 1888              	.LFE43:
 1889              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1890              		.section	.text.CyGetUniqueId,"ax",%progbits
 1891              		.align	2
 1892              		.global	CyGetUniqueId
 1893              		.code	16
 1894              		.thumb_func
 1895              		.type	CyGetUniqueId, %function
 1896              	CyGetUniqueId:
 1897              	.LFB45:
2799:.\Generated_Source\PSoC4/CyLib.c **** 
2800:.\Generated_Source\PSoC4/CyLib.c **** 
2801:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 86


2805:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:.\Generated_Source\PSoC4/CyLib.c **** *
2810:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:.\Generated_Source\PSoC4/CyLib.c **** *
2814:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:.\Generated_Source\PSoC4/CyLib.c **** {
 1898              		.loc 1 2816 0
 1899              		.cfi_startproc
 1900              	.LVL154:
2817:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1901              		.loc 1 2818 0
 1902 0000 134B     		ldr	r3, .L161
 1903 0002 1B78     		ldrb	r3, [r3]
 1904 0004 DAB2     		uxtb	r2, r3
 1905 0006 0260     		str	r2, [r0]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1906              		.loc 1 2819 0
 1907 0008 124B     		ldr	r3, .L161+4
 1908 000a 1B78     		ldrb	r3, [r3]
 1909 000c 1B02     		lsl	r3, r3, #8
 1910 000e 1343     		orr	r3, r2
 1911 0010 0360     		str	r3, [r0]
2820:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1912              		.loc 1 2820 0
 1913 0012 114A     		ldr	r2, .L161+8
 1914 0014 1278     		ldrb	r2, [r2]
 1915 0016 1204     		lsl	r2, r2, #16
 1916 0018 1343     		orr	r3, r2
 1917 001a 0360     		str	r3, [r0]
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1918              		.loc 1 2821 0
 1919 001c 0F4A     		ldr	r2, .L161+12
 1920 001e 1278     		ldrb	r2, [r2]
 1921 0020 1206     		lsl	r2, r2, #24
 1922 0022 1343     		orr	r3, r2
 1923 0024 0360     		str	r3, [r0]
2822:.\Generated_Source\PSoC4/CyLib.c **** 
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1924              		.loc 1 2823 0
 1925 0026 0E4B     		ldr	r3, .L161+16
 1926 0028 1B78     		ldrb	r3, [r3]
 1927 002a DAB2     		uxtb	r2, r3
 1928 002c 4260     		str	r2, [r0, #4]
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1929              		.loc 1 2824 0
 1930 002e 0D4B     		ldr	r3, .L161+20
 1931 0030 1B78     		ldrb	r3, [r3]
 1932 0032 1B02     		lsl	r3, r3, #8
 1933 0034 1343     		orr	r3, r2
 1934 0036 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 87


2825:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1935              		.loc 1 2825 0
 1936 0038 0B4A     		ldr	r2, .L161+24
 1937 003a 1278     		ldrb	r2, [r2]
 1938 003c 1204     		lsl	r2, r2, #16
 1939 003e 1343     		orr	r3, r2
 1940 0040 4360     		str	r3, [r0, #4]
2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1941              		.loc 1 2826 0
 1942 0042 0A4A     		ldr	r2, .L161+28
 1943 0044 1278     		ldrb	r2, [r2]
 1944 0046 1206     		lsl	r2, r2, #24
 1945 0048 1343     		orr	r3, r2
 1946 004a 4360     		str	r3, [r0, #4]
2827:.\Generated_Source\PSoC4/CyLib.c **** #else
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:.\Generated_Source\PSoC4/CyLib.c **** 
2833:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:.\Generated_Source\PSoC4/CyLib.c **** }
 1947              		.loc 1 2838 0
 1948              		@ sp needed
 1949 004c 7047     		bx	lr
 1950              	.L162:
 1951 004e C046     		.align	2
 1952              	.L161:
 1953 0050 78F1FF0F 		.word	268431736
 1954 0054 79F1FF0F 		.word	268431737
 1955 0058 7AF1FF0F 		.word	268431738
 1956 005c 7BF1FF0F 		.word	268431739
 1957 0060 7CF1FF0F 		.word	268431740
 1958 0064 7DF1FF0F 		.word	268431741
 1959 0068 7EF1FF0F 		.word	268431742
 1960 006c 7FF1FF0F 		.word	268431743
 1961              		.cfi_endproc
 1962              	.LFE45:
 1963              		.size	CyGetUniqueId, .-CyGetUniqueId
 1964              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 1965              		.align	2
 1966              		.global	CySysSetRamAccessArbPriority
 1967              		.code	16
 1968              		.thumb_func
 1969              		.type	CySysSetRamAccessArbPriority, %function
 1970              	CySysSetRamAccessArbPriority:
 1971              	.LFB46:
2839:.\Generated_Source\PSoC4/CyLib.c **** 
2840:.\Generated_Source\PSoC4/CyLib.c **** 
2841:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
2842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
2844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 88


2845:.\Generated_Source\PSoC4/CyLib.c ****     *
2846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
2847:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2848:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2851:.\Generated_Source\PSoC4/CyLib.c ****     *
2852:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2853:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2854:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2855:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2856:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2859:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
2860:.\Generated_Source\PSoC4/CyLib.c ****     {
 1972              		.loc 1 2860 0
 1973              		.cfi_startproc
 1974              	.LVL155:
2861:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2862:.\Generated_Source\PSoC4/CyLib.c **** 
2863:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 1975              		.loc 1 2863 0
 1976 0000 0549     		ldr	r1, .L164
 1977 0002 0A68     		ldr	r2, [r1]
 1978 0004 054B     		ldr	r3, .L164+4
 1979 0006 1340     		and	r3, r2
 1980              	.LVL156:
2864:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 1981              		.loc 1 2864 0
 1982 0008 4004     		lsl	r0, r0, #17
 1983              	.LVL157:
 1984 000a C022     		mov	r2, #192
 1985 000c D202     		lsl	r2, r2, #11
 1986 000e 1040     		and	r0, r2
 1987 0010 1843     		orr	r0, r3
 1988              	.LVL158:
2865:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 1989              		.loc 1 2865 0
 1990 0012 0860     		str	r0, [r1]
2866:.\Generated_Source\PSoC4/CyLib.c ****     }
 1991              		.loc 1 2866 0
 1992              		@ sp needed
 1993 0014 7047     		bx	lr
 1994              	.L165:
 1995 0016 C046     		.align	2
 1996              	.L164:
 1997 0018 38001040 		.word	1074790456
 1998 001c FFFFF9FF 		.word	-393217
 1999              		.cfi_endproc
 2000              	.LFE46:
 2001              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2002              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2003              		.align	2
 2004              		.global	CySysSetFlashAccessArbPriority
 2005              		.code	16
 2006              		.thumb_func
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 89


 2007              		.type	CySysSetFlashAccessArbPriority, %function
 2008              	CySysSetFlashAccessArbPriority:
 2009              	.LFB47:
2867:.\Generated_Source\PSoC4/CyLib.c **** 
2868:.\Generated_Source\PSoC4/CyLib.c **** 
2869:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2870:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
2871:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2872:.\Generated_Source\PSoC4/CyLib.c ****     *
2873:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
2874:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2875:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
2876:.\Generated_Source\PSoC4/CyLib.c ****     *
2877:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2878:.\Generated_Source\PSoC4/CyLib.c ****     *
2879:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2880:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2881:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2882:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2883:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2884:.\Generated_Source\PSoC4/CyLib.c ****     *
2885:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2886:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
2887:.\Generated_Source\PSoC4/CyLib.c ****     {
 2010              		.loc 1 2887 0
 2011              		.cfi_startproc
 2012              	.LVL159:
2888:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2889:.\Generated_Source\PSoC4/CyLib.c **** 
2890:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2013              		.loc 1 2890 0
 2014 0000 0549     		ldr	r1, .L167
 2015 0002 0A68     		ldr	r2, [r1]
 2016 0004 054B     		ldr	r3, .L167+4
 2017 0006 1340     		and	r3, r2
 2018              	.LVL160:
2891:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2019              		.loc 1 2891 0
 2020 0008 4004     		lsl	r0, r0, #17
 2021              	.LVL161:
 2022 000a C022     		mov	r2, #192
 2023 000c D202     		lsl	r2, r2, #11
 2024 000e 1040     		and	r0, r2
 2025 0010 1843     		orr	r0, r3
 2026              	.LVL162:
2892:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2027              		.loc 1 2892 0
 2028 0012 0860     		str	r0, [r1]
2893:.\Generated_Source\PSoC4/CyLib.c ****     }
 2029              		.loc 1 2893 0
 2030              		@ sp needed
 2031 0014 7047     		bx	lr
 2032              	.L168:
 2033 0016 C046     		.align	2
 2034              	.L167:
 2035 0018 30001040 		.word	1074790448
 2036 001c FFFFF9FF 		.word	-393217
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 90


 2037              		.cfi_endproc
 2038              	.LFE47:
 2039              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2040              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2041              		.align	2
 2042              		.global	CySysSetDmacAccessArbPriority
 2043              		.code	16
 2044              		.thumb_func
 2045              		.type	CySysSetDmacAccessArbPriority, %function
 2046              	CySysSetDmacAccessArbPriority:
 2047              	.LFB48:
2894:.\Generated_Source\PSoC4/CyLib.c **** 
2895:.\Generated_Source\PSoC4/CyLib.c **** 
2896:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2897:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
2898:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2899:.\Generated_Source\PSoC4/CyLib.c ****     *
2900:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
2901:.\Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
2902:.\Generated_Source\PSoC4/CyLib.c ****     *  for more details.
2903:.\Generated_Source\PSoC4/CyLib.c ****     *
2904:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2905:.\Generated_Source\PSoC4/CyLib.c ****     *
2906:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2907:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2908:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2909:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2910:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2911:.\Generated_Source\PSoC4/CyLib.c ****     *
2912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
2914:.\Generated_Source\PSoC4/CyLib.c ****     {
 2048              		.loc 1 2914 0
 2049              		.cfi_startproc
 2050              	.LVL163:
2915:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2916:.\Generated_Source\PSoC4/CyLib.c **** 
2917:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2051              		.loc 1 2917 0
 2052 0000 0549     		ldr	r1, .L170
 2053 0002 0A68     		ldr	r2, [r1]
 2054 0004 054B     		ldr	r3, .L170+4
 2055 0006 1340     		and	r3, r2
 2056              	.LVL164:
2918:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2057              		.loc 1 2918 0
 2058 0008 4004     		lsl	r0, r0, #17
 2059              	.LVL165:
 2060 000a C022     		mov	r2, #192
 2061 000c D202     		lsl	r2, r2, #11
 2062 000e 1040     		and	r0, r2
 2063 0010 1843     		orr	r0, r3
 2064              	.LVL166:
2919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2065              		.loc 1 2919 0
 2066 0012 0860     		str	r0, [r1]
2920:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 91


 2067              		.loc 1 2920 0
 2068              		@ sp needed
 2069 0014 7047     		bx	lr
 2070              	.L171:
 2071 0016 C046     		.align	2
 2072              	.L170:
 2073 0018 3C001040 		.word	1074790460
 2074 001c FFFFF9FF 		.word	-393217
 2075              		.cfi_endproc
 2076              	.LFE48:
 2077              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2078              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2079              		.align	2
 2080              		.global	CySysSetPeripheralAccessArbPriority
 2081              		.code	16
 2082              		.thumb_func
 2083              		.type	CySysSetPeripheralAccessArbPriority, %function
 2084              	CySysSetPeripheralAccessArbPriority:
 2085              	.LFB49:
2921:.\Generated_Source\PSoC4/CyLib.c **** 
2922:.\Generated_Source\PSoC4/CyLib.c **** 
2923:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2924:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
2925:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2926:.\Generated_Source\PSoC4/CyLib.c ****     *
2927:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
2928:.\Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
2929:.\Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2930:.\Generated_Source\PSoC4/CyLib.c ****     *
2931:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2932:.\Generated_Source\PSoC4/CyLib.c ****     *
2933:.\Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
2934:.\Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2935:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2936:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2937:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2938:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2939:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2940:.\Generated_Source\PSoC4/CyLib.c ****     *
2941:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2942:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
2943:.\Generated_Source\PSoC4/CyLib.c ****     {
 2086              		.loc 1 2943 0
 2087              		.cfi_startproc
 2088              	.LVL167:
 2089 0000 08B5     		push	{r3, lr}
 2090              		.cfi_def_cfa_offset 8
 2091              		.cfi_offset 3, -8
 2092              		.cfi_offset 14, -4
2944:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2945:.\Generated_Source\PSoC4/CyLib.c **** 
2946:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2093              		.loc 1 2946 0
 2094 0002 0028     		cmp	r0, #0
 2095 0004 0AD1     		bne	.L173
2947:.\Generated_Source\PSoC4/CyLib.c ****         {
2948:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 92


 2096              		.loc 1 2948 0
 2097 0006 0E48     		ldr	r0, .L176
 2098              	.LVL168:
 2099 0008 0268     		ldr	r2, [r0]
 2100 000a 0E4B     		ldr	r3, .L176+4
 2101 000c 1340     		and	r3, r2
 2102              	.LVL169:
2949:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2103              		.loc 1 2949 0
 2104 000e 4904     		lsl	r1, r1, #17
 2105              	.LVL170:
 2106 0010 C022     		mov	r2, #192
 2107 0012 D202     		lsl	r2, r2, #11
 2108 0014 1140     		and	r1, r2
 2109 0016 1943     		orr	r1, r3
 2110              	.LVL171:
2950:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2111              		.loc 1 2950 0
 2112 0018 0160     		str	r1, [r0]
 2113 001a 0FE0     		b	.L172
 2114              	.LVL172:
 2115              	.L173:
2951:.\Generated_Source\PSoC4/CyLib.c ****         } else
2952:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
2953:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2116              		.loc 1 2953 0
 2117 001c 0128     		cmp	r0, #1
 2118 001e 0AD1     		bne	.L175
2954:.\Generated_Source\PSoC4/CyLib.c ****         {
2955:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2119              		.loc 1 2955 0
 2120 0020 0948     		ldr	r0, .L176+8
 2121              	.LVL173:
 2122 0022 0268     		ldr	r2, [r0]
 2123 0024 074B     		ldr	r3, .L176+4
 2124 0026 1340     		and	r3, r2
 2125              	.LVL174:
2956:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2126              		.loc 1 2956 0
 2127 0028 4904     		lsl	r1, r1, #17
 2128              	.LVL175:
 2129 002a C022     		mov	r2, #192
 2130 002c D202     		lsl	r2, r2, #11
 2131 002e 1140     		and	r1, r2
 2132 0030 1943     		orr	r1, r3
 2133              	.LVL176:
2957:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2134              		.loc 1 2957 0
 2135 0032 0160     		str	r1, [r0]
 2136 0034 02E0     		b	.L172
 2137              	.LVL177:
 2138              	.L175:
2958:.\Generated_Source\PSoC4/CyLib.c ****         } else
2959:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2960:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
2961:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
2962:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 93


2963:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
2964:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
2965:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
2966:.\Generated_Source\PSoC4/CyLib.c ****         } else
2967:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2968:.\Generated_Source\PSoC4/CyLib.c ****         {
2969:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
2970:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2139              		.loc 1 2970 0 discriminator 1
 2140 0036 0020     		mov	r0, #0
 2141              	.LVL178:
 2142 0038 FFF7FEFF 		bl	CyHalt
 2143              	.LVL179:
 2144              	.L172:
2971:.\Generated_Source\PSoC4/CyLib.c ****         }
2972:.\Generated_Source\PSoC4/CyLib.c ****     }
 2145              		.loc 1 2972 0
 2146              		@ sp needed
 2147 003c 08BD     		pop	{r3, pc}
 2148              	.L177:
 2149 003e C046     		.align	2
 2150              	.L176:
 2151 0040 00011040 		.word	1074790656
 2152 0044 FFFFF9FF 		.word	-393217
 2153 0048 04011040 		.word	1074790660
 2154              		.cfi_endproc
 2155              	.LFE49:
 2156              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2157              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2158              		.align	2
 2159              		.global	CySysPrbSetGlobalVrefSource
 2160              		.code	16
 2161              		.thumb_func
 2162              		.type	CySysPrbSetGlobalVrefSource, %function
 2163              	CySysPrbSetGlobalVrefSource:
 2164              	.LFB50:
2973:.\Generated_Source\PSoC4/CyLib.c **** 
2974:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
2975:.\Generated_Source\PSoC4/CyLib.c **** 
2976:.\Generated_Source\PSoC4/CyLib.c **** 
2977:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
2978:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
2980:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:.\Generated_Source\PSoC4/CyLib.c ****     *
2982:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
2983:.\Generated_Source\PSoC4/CyLib.c ****     *
2984:.\Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
2985:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
2986:.\Generated_Source\PSoC4/CyLib.c ****     *
2987:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
2988:.\Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
2989:.\Generated_Source\PSoC4/CyLib.c ****     *
2990:.\Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
2991:.\Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
2992:.\Generated_Source\PSoC4/CyLib.c ****     *
2993:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC 4400 devices only.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 94


2994:.\Generated_Source\PSoC4/CyLib.c ****     *
2995:.\Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2996:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
2997:.\Generated_Source\PSoC4/CyLib.c ****     *   reference.
2998:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
2999:.\Generated_Source\PSoC4/CyLib.c ****     *   reference.
3000:.\Generated_Source\PSoC4/CyLib.c ****     *
3001:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3002:.\Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3003:.\Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
3004:.\Generated_Source\PSoC4/CyLib.c ****         {
 2165              		.loc 1 3004 0
 2166              		.cfi_startproc
 2167              	.LVL180:
 2168 0000 031C     		mov	r3, r0
3005:.\Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2169              		.loc 1 3005 0
 2170 0002 0449     		ldr	r1, .L179
 2171 0004 0A68     		ldr	r2, [r1]
 2172 0006 0220     		mov	r0, #2
 2173              	.LVL181:
 2174 0008 8243     		bic	r2, r0
 2175 000a 5B00     		lsl	r3, r3, #1
 2176              	.LVL182:
 2177 000c 1840     		and	r0, r3
 2178 000e 1043     		orr	r0, r2
 2179 0010 0860     		str	r0, [r1]
3006:.\Generated_Source\PSoC4/CyLib.c ****         }
 2180              		.loc 1 3006 0
 2181              		@ sp needed
 2182 0012 7047     		bx	lr
 2183              	.L180:
 2184              		.align	2
 2185              	.L179:
 2186 0014 08023F40 		.word	1077871112
 2187              		.cfi_endproc
 2188              	.LFE50:
 2189              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2190              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2191              		.align	2
 2192              		.global	CySysPrbSetBgGain
 2193              		.code	16
 2194              		.thumb_func
 2195              		.type	CySysPrbSetBgGain, %function
 2196              	CySysPrbSetBgGain:
 2197              	.LFB51:
3007:.\Generated_Source\PSoC4/CyLib.c ****     #endif
3008:.\Generated_Source\PSoC4/CyLib.c **** 
3009:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3011:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:.\Generated_Source\PSoC4/CyLib.c ****     *
3013:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3014:.\Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3015:.\Generated_Source\PSoC4/CyLib.c ****     *
3016:.\Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3017:.\Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 95


3018:.\Generated_Source\PSoC4/CyLib.c ****     *
3019:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3020:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3021:.\Generated_Source\PSoC4/CyLib.c ****     *
3022:.\Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3023:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3024:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
3025:.\Generated_Source\PSoC4/CyLib.c ****     *
3026:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
3028:.\Generated_Source\PSoC4/CyLib.c ****     {
 2198              		.loc 1 3028 0
 2199              		.cfi_startproc
 2200              	.LVL183:
3029:.\Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2201              		.loc 1 3029 0
 2202 0000 034A     		ldr	r2, .L182
 2203 0002 1368     		ldr	r3, [r2]
 2204 0004 0321     		mov	r1, #3
 2205 0006 8B43     		bic	r3, r1
 2206 0008 0840     		and	r0, r1
 2207              	.LVL184:
 2208 000a 1843     		orr	r0, r3
 2209 000c 1060     		str	r0, [r2]
3030:.\Generated_Source\PSoC4/CyLib.c ****     }
 2210              		.loc 1 3030 0
 2211              		@ sp needed
 2212 000e 7047     		bx	lr
 2213              	.L183:
 2214              		.align	2
 2215              	.L182:
 2216 0010 00023F40 		.word	1077871104
 2217              		.cfi_endproc
 2218              	.LFE51:
 2219              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 2220              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 2221              		.align	2
 2222              		.global	CySysPrbSetGlobalVrefVoltage
 2223              		.code	16
 2224              		.thumb_func
 2225              		.type	CySysPrbSetGlobalVrefVoltage, %function
 2226              	CySysPrbSetGlobalVrefVoltage:
 2227              	.LFB52:
3031:.\Generated_Source\PSoC4/CyLib.c **** 
3032:.\Generated_Source\PSoC4/CyLib.c **** 
3033:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3034:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3035:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3036:.\Generated_Source\PSoC4/CyLib.c ****     *
3037:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3038:.\Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3039:.\Generated_Source\PSoC4/CyLib.c ****     * API.
3040:.\Generated_Source\PSoC4/CyLib.c ****     *
3041:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3042:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3043:.\Generated_Source\PSoC4/CyLib.c ****     *
3044:.\Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 96


3045:.\Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3046:.\Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3047:.\Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3048:.\Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
3049:.\Generated_Source\PSoC4/CyLib.c ****     *
3050:.\Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3051:.\Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3052:.\Generated_Source\PSoC4/CyLib.c ****     *       0       |       0.08        |       0.16        |       0.21
3053:.\Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.15        |       0.30        |       0.41
3054:.\Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.23        |       0.46        |       0.62
3055:.\Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.30        |       0.60        |       0.83
3056:.\Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.38        |       0.76        |       1.03
3057:.\Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.45        |       0.90        |       1.24
3058:.\Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.53        |       1.06        |       1.44
3059:.\Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.60        |       1.20        |       1.65
3060:.\Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.68        |       1.36        |       1.86
3061:.\Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.75        |       1.50        |       2.06
3062:.\Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.83        |       1.66        |       2.27
3063:.\Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.90        |       1.80        |       2.48
3064:.\Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.98        |       1.96        |       2.68
3065:.\Generated_Source\PSoC4/CyLib.c ****     *       13      |       1.05        |       2.10        |       2.89
3066:.\Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.13        |       2.26        |       3.09
3067:.\Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.20        |       2.40        |       3.30
3068:.\Generated_Source\PSoC4/CyLib.c ****     *
3069:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3070:.\Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3071:.\Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3072:.\Generated_Source\PSoC4/CyLib.c ****         {
 2228              		.loc 1 3072 0
 2229              		.cfi_startproc
 2230              	.LVL185:
3073:.\Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 2231              		.loc 1 3073 0
 2232 0000 0449     		ldr	r1, .L185
 2233 0002 0A68     		ldr	r2, [r1]
 2234 0004 F023     		mov	r3, #240
 2235 0006 9A43     		bic	r2, r3
 2236 0008 0301     		lsl	r3, r0, #4
 2237 000a FF20     		mov	r0, #255
 2238              	.LVL186:
 2239 000c 1840     		and	r0, r3
 2240 000e 1043     		orr	r0, r2
 2241 0010 0860     		str	r0, [r1]
3074:.\Generated_Source\PSoC4/CyLib.c ****         }
 2242              		.loc 1 3074 0
 2243              		@ sp needed
 2244 0012 7047     		bx	lr
 2245              	.L186:
 2246              		.align	2
 2247              	.L185:
 2248 0014 08023F40 		.word	1077871112
 2249              		.cfi_endproc
 2250              	.LFE52:
 2251              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
 2252              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 2253              		.align	2
 2254              		.global	CySysPrbEnableDeepsleepVddaRef
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 97


 2255              		.code	16
 2256              		.thumb_func
 2257              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 2258              	CySysPrbEnableDeepsleepVddaRef:
 2259              	.LFB53:
3075:.\Generated_Source\PSoC4/CyLib.c ****     #endif
3076:.\Generated_Source\PSoC4/CyLib.c **** 
3077:.\Generated_Source\PSoC4/CyLib.c **** 
3078:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3079:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3080:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3081:.\Generated_Source\PSoC4/CyLib.c ****     *
3082:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3083:.\Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3084:.\Generated_Source\PSoC4/CyLib.c ****     *
3085:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3086:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3087:.\Generated_Source\PSoC4/CyLib.c ****     *
3088:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3089:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3090:.\Generated_Source\PSoC4/CyLib.c ****     {
 2260              		.loc 1 3090 0
 2261              		.cfi_startproc
3091:.\Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2262              		.loc 1 3091 0
 2263 0000 034A     		ldr	r2, .L188
 2264 0002 1368     		ldr	r3, [r2]
 2265 0004 8021     		mov	r1, #128
 2266 0006 C905     		lsl	r1, r1, #23
 2267 0008 0B43     		orr	r3, r1
 2268 000a 1360     		str	r3, [r2]
3092:.\Generated_Source\PSoC4/CyLib.c ****     }
 2269              		.loc 1 3092 0
 2270              		@ sp needed
 2271 000c 7047     		bx	lr
 2272              	.L189:
 2273 000e C046     		.align	2
 2274              	.L188:
 2275 0010 00023F40 		.word	1077871104
 2276              		.cfi_endproc
 2277              	.LFE53:
 2278              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 2279              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 2280              		.align	2
 2281              		.global	CySysPrbDisableDeepsleepVddaRef
 2282              		.code	16
 2283              		.thumb_func
 2284              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 2285              	CySysPrbDisableDeepsleepVddaRef:
 2286              	.LFB54:
3093:.\Generated_Source\PSoC4/CyLib.c **** 
3094:.\Generated_Source\PSoC4/CyLib.c **** 
3095:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3096:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3097:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3098:.\Generated_Source\PSoC4/CyLib.c ****     *
3099:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 98


3100:.\Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3101:.\Generated_Source\PSoC4/CyLib.c ****     *
3102:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3103:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3104:.\Generated_Source\PSoC4/CyLib.c ****     *
3105:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3106:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3107:.\Generated_Source\PSoC4/CyLib.c ****     {
 2287              		.loc 1 3107 0
 2288              		.cfi_startproc
3108:.\Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 2289              		.loc 1 3108 0
 2290 0000 024A     		ldr	r2, .L191
 2291 0002 1168     		ldr	r1, [r2]
 2292 0004 024B     		ldr	r3, .L191+4
 2293 0006 0B40     		and	r3, r1
 2294 0008 1360     		str	r3, [r2]
3109:.\Generated_Source\PSoC4/CyLib.c ****     }
 2295              		.loc 1 3109 0
 2296              		@ sp needed
 2297 000a 7047     		bx	lr
 2298              	.L192:
 2299              		.align	2
 2300              	.L191:
 2301 000c 00023F40 		.word	1077871104
 2302 0010 FFFFFFBF 		.word	-1073741825
 2303              		.cfi_endproc
 2304              	.LFE54:
 2305              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 2306              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 2307              		.align	2
 2308              		.global	CySysPrbEnableVddaRef
 2309              		.code	16
 2310              		.thumb_func
 2311              		.type	CySysPrbEnableVddaRef, %function
 2312              	CySysPrbEnableVddaRef:
 2313              	.LFB55:
3110:.\Generated_Source\PSoC4/CyLib.c **** 
3111:.\Generated_Source\PSoC4/CyLib.c **** 
3112:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3113:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3114:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3115:.\Generated_Source\PSoC4/CyLib.c ****     *
3116:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
3117:.\Generated_Source\PSoC4/CyLib.c ****     *
3118:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3119:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3120:.\Generated_Source\PSoC4/CyLib.c ****     *
3121:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3122:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3123:.\Generated_Source\PSoC4/CyLib.c ****     {
 2314              		.loc 1 3123 0
 2315              		.cfi_startproc
3124:.\Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 2316              		.loc 1 3124 0
 2317 0000 024A     		ldr	r2, .L194
 2318 0002 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 99


 2319 0004 1023     		mov	r3, #16
 2320 0006 0B43     		orr	r3, r1
 2321 0008 1360     		str	r3, [r2]
3125:.\Generated_Source\PSoC4/CyLib.c ****     }
 2322              		.loc 1 3125 0
 2323              		@ sp needed
 2324 000a 7047     		bx	lr
 2325              	.L195:
 2326              		.align	2
 2327              	.L194:
 2328 000c 00023F40 		.word	1077871104
 2329              		.cfi_endproc
 2330              	.LFE55:
 2331              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 2332              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 2333              		.align	2
 2334              		.global	CySysPrbDisableVddaRef
 2335              		.code	16
 2336              		.thumb_func
 2337              		.type	CySysPrbDisableVddaRef, %function
 2338              	CySysPrbDisableVddaRef:
 2339              	.LFB56:
3126:.\Generated_Source\PSoC4/CyLib.c **** 
3127:.\Generated_Source\PSoC4/CyLib.c **** 
3128:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3129:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3130:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3131:.\Generated_Source\PSoC4/CyLib.c ****     *
3132:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3133:.\Generated_Source\PSoC4/CyLib.c ****     *
3134:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3135:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3136:.\Generated_Source\PSoC4/CyLib.c ****     *
3137:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3138:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3139:.\Generated_Source\PSoC4/CyLib.c ****     {
 2340              		.loc 1 3139 0
 2341              		.cfi_startproc
3140:.\Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 2342              		.loc 1 3140 0
 2343 0000 024A     		ldr	r2, .L197
 2344 0002 1368     		ldr	r3, [r2]
 2345 0004 1021     		mov	r1, #16
 2346 0006 8B43     		bic	r3, r1
 2347 0008 1360     		str	r3, [r2]
3141:.\Generated_Source\PSoC4/CyLib.c ****     }
 2348              		.loc 1 3141 0
 2349              		@ sp needed
 2350 000a 7047     		bx	lr
 2351              	.L198:
 2352              		.align	2
 2353              	.L197:
 2354 000c 00023F40 		.word	1077871104
 2355              		.cfi_endproc
 2356              	.LFE56:
 2357              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 2358              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 100


 2359              		.align	2
 2360              		.global	CySysPrbSetBgBufferTrim
 2361              		.code	16
 2362              		.thumb_func
 2363              		.type	CySysPrbSetBgBufferTrim, %function
 2364              	CySysPrbSetBgBufferTrim:
 2365              	.LFB57:
3142:.\Generated_Source\PSoC4/CyLib.c **** 
3143:.\Generated_Source\PSoC4/CyLib.c **** 
3144:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3145:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3146:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3147:.\Generated_Source\PSoC4/CyLib.c ****     *
3148:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3149:.\Generated_Source\PSoC4/CyLib.c ****     *
3150:.\Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3151:.\Generated_Source\PSoC4/CyLib.c ****     *
3152:.\Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3153:.\Generated_Source\PSoC4/CyLib.c ****     *
3154:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3155:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3156:.\Generated_Source\PSoC4/CyLib.c ****     *
3157:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3158:.\Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3159:.\Generated_Source\PSoC4/CyLib.c ****     {
 2366              		.loc 1 3159 0
 2367              		.cfi_startproc
 2368              	.LVL187:
3160:.\Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
3161:.\Generated_Source\PSoC4/CyLib.c **** 
3162:.\Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
 2369              		.loc 1 3162 0
 2370 0000 0028     		cmp	r0, #0
 2371 0002 07DB     		blt	.L200
3163:.\Generated_Source\PSoC4/CyLib.c ****         {
3164:.\Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 2372              		.loc 1 3164 0
 2373 0004 084A     		ldr	r2, .L202
 2374 0006 1368     		ldr	r3, [r2]
 2375 0008 3F21     		mov	r1, #63
 2376 000a 8B43     		bic	r3, r1
 2377 000c 0840     		and	r0, r1
 2378              	.LVL188:
 2379 000e 1843     		orr	r0, r3
 2380 0010 1060     		str	r0, [r2]
 2381 0012 08E0     		b	.L199
 2382              	.LVL189:
 2383              	.L200:
3165:.\Generated_Source\PSoC4/CyLib.c ****         }
3166:.\Generated_Source\PSoC4/CyLib.c ****         else
3167:.\Generated_Source\PSoC4/CyLib.c ****         {
3168:.\Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
3169:.\Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
3170:.\Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
3171:.\Generated_Source\PSoC4/CyLib.c **** 
3172:.\Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 2384              		.loc 1 3172 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 101


 2385 0014 0449     		ldr	r1, .L202
 2386 0016 0A68     		ldr	r2, [r1]
 2387 0018 3F23     		mov	r3, #63
 2388 001a 9A43     		bic	r2, r3
 2389 001c 1840     		and	r0, r3
 2390              	.LVL190:
 2391 001e 1F3B     		sub	r3, r3, #31
 2392 0020 1843     		orr	r0, r3
 2393 0022 1043     		orr	r0, r2
 2394 0024 0860     		str	r0, [r1]
 2395              	.L199:
3173:.\Generated_Source\PSoC4/CyLib.c ****         }
3174:.\Generated_Source\PSoC4/CyLib.c ****     }
 2396              		.loc 1 3174 0
 2397              		@ sp needed
 2398 0026 7047     		bx	lr
 2399              	.L203:
 2400              		.align	2
 2401              	.L202:
 2402 0028 040F3F40 		.word	1077874436
 2403              		.cfi_endproc
 2404              	.LFE57:
 2405              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 2406              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 2407              		.align	2
 2408              		.global	CySysPrbGetBgBufferTrim
 2409              		.code	16
 2410              		.thumb_func
 2411              		.type	CySysPrbGetBgBufferTrim, %function
 2412              	CySysPrbGetBgBufferTrim:
 2413              	.LFB58:
3175:.\Generated_Source\PSoC4/CyLib.c **** 
3176:.\Generated_Source\PSoC4/CyLib.c **** 
3177:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3178:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3179:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3180:.\Generated_Source\PSoC4/CyLib.c ****     *
3181:.\Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3182:.\Generated_Source\PSoC4/CyLib.c ****     *
3183:.\Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3184:.\Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3185:.\Generated_Source\PSoC4/CyLib.c ****     *
3186:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3187:.\Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
3188:.\Generated_Source\PSoC4/CyLib.c ****     {
 2414              		.loc 1 3188 0
 2415              		.cfi_startproc
3189:.\Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3190:.\Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3191:.\Generated_Source\PSoC4/CyLib.c **** 
3192:.\Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
 2416              		.loc 1 3192 0
 2417 0000 054B     		ldr	r3, .L207
 2418 0002 1B68     		ldr	r3, [r3]
 2419 0004 DBB2     		uxtb	r3, r3
 2420 0006 3F20     		mov	r0, #63
 2421 0008 1840     		and	r0, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 102


 2422              	.LVL191:
3193:.\Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 2423              		.loc 1 3193 0
 2424 000a 9B06     		lsl	r3, r3, #26
 2425 000c 02D5     		bpl	.L206
3194:.\Generated_Source\PSoC4/CyLib.c ****         {
3195:.\Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
 2426              		.loc 1 3195 0
 2427 000e 4042     		neg	r0, r0
 2428              	.LVL192:
 2429 0010 C0B2     		uxtb	r0, r0
 2430              	.LVL193:
3196:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 2431              		.loc 1 3196 0
 2432 0012 4042     		neg	r0, r0
 2433              	.LVL194:
 2434              	.L206:
3197:.\Generated_Source\PSoC4/CyLib.c ****         }
3198:.\Generated_Source\PSoC4/CyLib.c ****         else
3199:.\Generated_Source\PSoC4/CyLib.c ****         {
3200:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
3201:.\Generated_Source\PSoC4/CyLib.c ****         }
3202:.\Generated_Source\PSoC4/CyLib.c **** 
3203:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
3204:.\Generated_Source\PSoC4/CyLib.c ****     }
 2435              		.loc 1 3204 0
 2436              		@ sp needed
 2437 0014 7047     		bx	lr
 2438              	.L208:
 2439 0016 C046     		.align	2
 2440              	.L207:
 2441 0018 040F3F40 		.word	1077874436
 2442              		.cfi_endproc
 2443              	.LFE58:
 2444              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 2445              		.global	cyImoFreqMhz2DpllOffset
 2446              		.global	CySysTickInitVar
 2447              		.global	cydelay32kMs
 2448              		.global	cydelayFreqMhz
 2449              		.global	cydelayFreqKhz
 2450              		.global	cydelayFreqHz
 2451              		.section	.rodata
 2452              		.align	2
 2453              		.set	.LANCHOR1,. + 0
 2454              		.type	cyImoFreqMhz2DpllOffset, %object
 2455              		.size	cyImoFreqMhz2DpllOffset, 23
 2456              	cyImoFreqMhz2DpllOffset:
 2457 0000 EE       		.byte	-18
 2458 0001 DB       		.byte	-37
 2459 0002 C9       		.byte	-55
 2460 0003 B9       		.byte	-71
 2461 0004 AA       		.byte	-86
 2462 0005 9B       		.byte	-101
 2463 0006 8E       		.byte	-114
 2464 0007 82       		.byte	-126
 2465 0008 76       		.byte	118
 2466 0009 6B       		.byte	107
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 103


 2467 000a 60       		.byte	96
 2468 000b 56       		.byte	86
 2469 000c 4D       		.byte	77
 2470 000d 44       		.byte	68
 2471 000e 3B       		.byte	59
 2472 000f 33       		.byte	51
 2473 0010 2C       		.byte	44
 2474 0011 24       		.byte	36
 2475 0012 1D       		.byte	29
 2476 0013 17       		.byte	23
 2477 0014 10       		.byte	16
 2478 0015 0A       		.byte	10
 2479 0016 04       		.byte	4
 2480 0017 00       		.data
 2481              		.align	2
 2482              		.set	.LANCHOR0,. + 0
 2483              		.type	cydelay32kMs, %object
 2484              		.size	cydelay32kMs, 4
 2485              	cydelay32kMs:
 2486 0000 0000E02E 		.word	786432000
 2487              		.type	cydelayFreqKhz, %object
 2488              		.size	cydelayFreqKhz, 4
 2489              	cydelayFreqKhz:
 2490 0004 C05D0000 		.word	24000
 2491              		.type	cydelayFreqMhz, %object
 2492              		.size	cydelayFreqMhz, 1
 2493              	cydelayFreqMhz:
 2494 0008 18       		.byte	24
 2495 0009 000000   		.space	3
 2496              		.type	cydelayFreqHz, %object
 2497              		.size	cydelayFreqHz, 4
 2498              	cydelayFreqHz:
 2499 000c 00366E01 		.word	24000000
 2500              		.bss
 2501              		.align	2
 2502              		.set	.LANCHOR2,. + 0
 2503              		.type	CySysTickCallbacks, %object
 2504              		.size	CySysTickCallbacks, 20
 2505              	CySysTickCallbacks:
 2506 0000 00000000 		.space	20
 2506      00000000 
 2506      00000000 
 2506      00000000 
 2506      00000000 
 2507              		.type	CySysTickInitVar, %object
 2508              		.size	CySysTickInitVar, 4
 2509              	CySysTickInitVar:
 2510 0014 00000000 		.space	4
 2511              		.text
 2512              	.Letext0:
 2513              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2514              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2515              		.file 4 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
 2516              		.file 5 ".\\Generated_Source\\PSoC4\\CyFlash.h"
 2517              		.section	.debug_info,"",%progbits
 2518              	.Ldebug_info0:
 2519 0000 D10D0000 		.4byte	0xdd1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 104


 2520 0004 0400     		.2byte	0x4
 2521 0006 00000000 		.4byte	.Ldebug_abbrev0
 2522 000a 04       		.byte	0x4
 2523 000b 01       		.uleb128 0x1
 2524 000c 23080000 		.4byte	.LASF124
 2525 0010 01       		.byte	0x1
 2526 0011 03040000 		.4byte	.LASF125
 2527 0015 AF010000 		.4byte	.LASF126
 2528 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2529 001d 00000000 		.4byte	0
 2530 0021 00000000 		.4byte	.Ldebug_line0
 2531 0025 02       		.uleb128 0x2
 2532 0026 01       		.byte	0x1
 2533 0027 06       		.byte	0x6
 2534 0028 F6000000 		.4byte	.LASF0
 2535 002c 02       		.uleb128 0x2
 2536 002d 01       		.byte	0x1
 2537 002e 08       		.byte	0x8
 2538 002f EE050000 		.4byte	.LASF1
 2539 0033 02       		.uleb128 0x2
 2540 0034 02       		.byte	0x2
 2541 0035 05       		.byte	0x5
 2542 0036 FC050000 		.4byte	.LASF2
 2543 003a 02       		.uleb128 0x2
 2544 003b 02       		.byte	0x2
 2545 003c 07       		.byte	0x7
 2546 003d B5030000 		.4byte	.LASF3
 2547 0041 02       		.uleb128 0x2
 2548 0042 04       		.byte	0x4
 2549 0043 05       		.byte	0x5
 2550 0044 64010000 		.4byte	.LASF4
 2551 0048 02       		.uleb128 0x2
 2552 0049 04       		.byte	0x4
 2553 004a 07       		.byte	0x7
 2554 004b 4B030000 		.4byte	.LASF5
 2555 004f 02       		.uleb128 0x2
 2556 0050 08       		.byte	0x8
 2557 0051 05       		.byte	0x5
 2558 0052 E8000000 		.4byte	.LASF6
 2559 0056 02       		.uleb128 0x2
 2560 0057 08       		.byte	0x8
 2561 0058 07       		.byte	0x7
 2562 0059 6C000000 		.4byte	.LASF7
 2563 005d 03       		.uleb128 0x3
 2564 005e 04       		.byte	0x4
 2565 005f 05       		.byte	0x5
 2566 0060 696E7400 		.ascii	"int\000"
 2567 0064 02       		.uleb128 0x2
 2568 0065 04       		.byte	0x4
 2569 0066 07       		.byte	0x7
 2570 0067 19030000 		.4byte	.LASF8
 2571 006b 04       		.uleb128 0x4
 2572 006c 9B030000 		.4byte	.LASF9
 2573 0070 02       		.byte	0x2
 2574 0071 9801     		.2byte	0x198
 2575 0073 2C000000 		.4byte	0x2c
 2576 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 105


 2577 0078 0F000000 		.4byte	.LASF10
 2578 007c 02       		.byte	0x2
 2579 007d 9901     		.2byte	0x199
 2580 007f 3A000000 		.4byte	0x3a
 2581 0083 04       		.uleb128 0x4
 2582 0084 4C020000 		.4byte	.LASF11
 2583 0088 02       		.byte	0x2
 2584 0089 9A01     		.2byte	0x19a
 2585 008b 48000000 		.4byte	0x48
 2586 008f 04       		.uleb128 0x4
 2587 0090 FE030000 		.4byte	.LASF12
 2588 0094 02       		.byte	0x2
 2589 0095 9B01     		.2byte	0x19b
 2590 0097 25000000 		.4byte	0x25
 2591 009b 04       		.uleb128 0x4
 2592 009c 22010000 		.4byte	.LASF13
 2593 00a0 02       		.byte	0x2
 2594 00a1 9D01     		.2byte	0x19d
 2595 00a3 41000000 		.4byte	0x41
 2596 00a7 02       		.uleb128 0x2
 2597 00a8 04       		.byte	0x4
 2598 00a9 04       		.byte	0x4
 2599 00aa 51050000 		.4byte	.LASF14
 2600 00ae 02       		.uleb128 0x2
 2601 00af 08       		.byte	0x8
 2602 00b0 04       		.byte	0x4
 2603 00b1 3F020000 		.4byte	.LASF15
 2604 00b5 02       		.uleb128 0x2
 2605 00b6 01       		.byte	0x1
 2606 00b7 08       		.byte	0x8
 2607 00b8 52060000 		.4byte	.LASF16
 2608 00bc 04       		.uleb128 0x4
 2609 00bd C5050000 		.4byte	.LASF17
 2610 00c1 02       		.byte	0x2
 2611 00c2 4202     		.2byte	0x242
 2612 00c4 C8000000 		.4byte	0xc8
 2613 00c8 05       		.uleb128 0x5
 2614 00c9 6B000000 		.4byte	0x6b
 2615 00cd 04       		.uleb128 0x4
 2616 00ce 8D040000 		.4byte	.LASF18
 2617 00d2 02       		.byte	0x2
 2618 00d3 4402     		.2byte	0x244
 2619 00d5 D9000000 		.4byte	0xd9
 2620 00d9 05       		.uleb128 0x5
 2621 00da 83000000 		.4byte	0x83
 2622 00de 04       		.uleb128 0x4
 2623 00df 6F060000 		.4byte	.LASF19
 2624 00e3 02       		.byte	0x2
 2625 00e4 5402     		.2byte	0x254
 2626 00e6 EA000000 		.4byte	0xea
 2627 00ea 06       		.uleb128 0x6
 2628 00eb 04       		.byte	0x4
 2629 00ec F0000000 		.4byte	0xf0
 2630 00f0 07       		.uleb128 0x7
 2631 00f1 02       		.uleb128 0x2
 2632 00f2 04       		.byte	0x4
 2633 00f3 07       		.byte	0x7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 106


 2634 00f4 B6040000 		.4byte	.LASF20
 2635 00f8 08       		.uleb128 0x8
 2636 00f9 6D050000 		.4byte	.LASF21
 2637 00fd 03       		.byte	0x3
 2638 00fe F3       		.byte	0xf3
 2639 00ff EA000000 		.4byte	0xea
 2640 0103 09       		.uleb128 0x9
 2641 0104 7C070000 		.4byte	.LASF22
 2642 0108 01       		.byte	0x1
 2643 0109 68       		.byte	0x68
 2644 010a 00000000 		.4byte	.LFB1
 2645 010e 14000000 		.4byte	.LFE1-.LFB1
 2646 0112 01       		.uleb128 0x1
 2647 0113 9C       		.byte	0x9c
 2648 0114 0A       		.uleb128 0xa
 2649 0115 73040000 		.4byte	.LASF23
 2650 0119 01       		.byte	0x1
 2651 011a 1A01     		.2byte	0x11a
 2652 011c 00000000 		.4byte	.LFB4
 2653 0120 14000000 		.4byte	.LFE4-.LFB4
 2654 0124 01       		.uleb128 0x1
 2655 0125 9C       		.byte	0x9c
 2656 0126 0B       		.uleb128 0xb
 2657 0127 64030000 		.4byte	.LASF24
 2658 012b 01       		.byte	0x1
 2659 012c 88       		.byte	0x88
 2660 012d 00000000 		.4byte	.LFB2
 2661 0131 18000000 		.4byte	.LFE2-.LFB2
 2662 0135 01       		.uleb128 0x1
 2663 0136 9C       		.byte	0x9c
 2664 0137 45010000 		.4byte	0x145
 2665 013b 0C       		.uleb128 0xc
 2666 013c 06000000 		.4byte	.LVL0
 2667 0140 14010000 		.4byte	0x114
 2668 0144 00       		.byte	0
 2669 0145 0D       		.uleb128 0xd
 2670 0146 46010000 		.4byte	.LASF79
 2671 014a 01       		.byte	0x1
 2672 014b 2D01     		.2byte	0x12d
 2673 014d 83000000 		.4byte	0x83
 2674 0151 00000000 		.4byte	.LFB5
 2675 0155 14000000 		.4byte	.LFE5-.LFB5
 2676 0159 01       		.uleb128 0x1
 2677 015a 9C       		.byte	0x9c
 2678 015b 0E       		.uleb128 0xe
 2679 015c 1F000000 		.4byte	.LASF25
 2680 0160 01       		.byte	0x1
 2681 0161 AA01     		.2byte	0x1aa
 2682 0163 00000000 		.4byte	.LFB6
 2683 0167 20000000 		.4byte	.LFE6-.LFB6
 2684 016b 01       		.uleb128 0x1
 2685 016c 9C       		.byte	0x9c
 2686 016d B4010000 		.4byte	0x1b4
 2687 0171 0F       		.uleb128 0xf
 2688 0172 24060000 		.4byte	.LASF30
 2689 0176 01       		.byte	0x1
 2690 0177 AA01     		.2byte	0x1aa
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 107


 2691 0179 83000000 		.4byte	0x83
 2692 017d 00000000 		.4byte	.LLST0
 2693 0181 10       		.uleb128 0x10
 2694 0182 13010000 		.4byte	.LASF26
 2695 0186 01       		.byte	0x1
 2696 0187 AC01     		.2byte	0x1ac
 2697 0189 6B000000 		.4byte	0x6b
 2698 018d 2C000000 		.4byte	.LLST1
 2699 0191 10       		.uleb128 0x10
 2700 0192 E3070000 		.4byte	.LASF27
 2701 0196 01       		.byte	0x1
 2702 0197 AD01     		.2byte	0x1ad
 2703 0199 83000000 		.4byte	0x83
 2704 019d 3F000000 		.4byte	.LLST2
 2705 01a1 0C       		.uleb128 0xc
 2706 01a2 08000000 		.4byte	.LVL2
 2707 01a6 8F0D0000 		.4byte	0xd8f
 2708 01aa 0C       		.uleb128 0xc
 2709 01ab 1A000000 		.4byte	.LVL5
 2710 01af 9A0D0000 		.4byte	0xd9a
 2711 01b3 00       		.byte	0
 2712 01b4 11       		.uleb128 0x11
 2713 01b5 6E020000 		.4byte	.LASF33
 2714 01b9 01       		.byte	0x1
 2715 01ba CF01     		.2byte	0x1cf
 2716 01bc 83000000 		.4byte	0x83
 2717 01c0 00000000 		.4byte	.LFB7
 2718 01c4 1C000000 		.4byte	.LFE7-.LFB7
 2719 01c8 01       		.uleb128 0x1
 2720 01c9 9C       		.byte	0x9c
 2721 01ca 01020000 		.4byte	0x201
 2722 01ce 10       		.uleb128 0x10
 2723 01cf 13010000 		.4byte	.LASF26
 2724 01d3 01       		.byte	0x1
 2725 01d4 D101     		.2byte	0x1d1
 2726 01d6 6B000000 		.4byte	0x6b
 2727 01da 5D000000 		.4byte	.LLST3
 2728 01de 10       		.uleb128 0x10
 2729 01df FD040000 		.4byte	.LASF28
 2730 01e3 01       		.byte	0x1
 2731 01e4 D201     		.2byte	0x1d2
 2732 01e6 83000000 		.4byte	0x83
 2733 01ea 70000000 		.4byte	.LLST4
 2734 01ee 0C       		.uleb128 0xc
 2735 01ef 06000000 		.4byte	.LVL7
 2736 01f3 8F0D0000 		.4byte	0xd8f
 2737 01f7 0C       		.uleb128 0xc
 2738 01f8 12000000 		.4byte	.LVL9
 2739 01fc 9A0D0000 		.4byte	0xd9a
 2740 0200 00       		.byte	0
 2741 0201 0E       		.uleb128 0xe
 2742 0202 A2060000 		.4byte	.LASF29
 2743 0206 01       		.byte	0x1
 2744 0207 0602     		.2byte	0x206
 2745 0209 00000000 		.4byte	.LFB8
 2746 020d 24000000 		.4byte	.LFE8-.LFB8
 2747 0211 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 108


 2748 0212 9C       		.byte	0x9c
 2749 0213 4A020000 		.4byte	0x24a
 2750 0217 0F       		.uleb128 0xf
 2751 0218 74070000 		.4byte	.LASF31
 2752 021c 01       		.byte	0x1
 2753 021d 0602     		.2byte	0x206
 2754 021f 83000000 		.4byte	0x83
 2755 0223 8E000000 		.4byte	.LLST5
 2756 0227 10       		.uleb128 0x10
 2757 0228 13010000 		.4byte	.LASF26
 2758 022c 01       		.byte	0x1
 2759 022d 0802     		.2byte	0x208
 2760 022f 6B000000 		.4byte	0x6b
 2761 0233 BA000000 		.4byte	.LLST6
 2762 0237 0C       		.uleb128 0xc
 2763 0238 08000000 		.4byte	.LVL12
 2764 023c 8F0D0000 		.4byte	0xd8f
 2765 0240 0C       		.uleb128 0xc
 2766 0241 1E000000 		.4byte	.LVL14
 2767 0245 9A0D0000 		.4byte	0xd9a
 2768 0249 00       		.byte	0
 2769 024a 0E       		.uleb128 0xe
 2770 024b 8C060000 		.4byte	.LASF32
 2771 024f 01       		.byte	0x1
 2772 0250 A403     		.2byte	0x3a4
 2773 0252 00000000 		.4byte	.LFB10
 2774 0256 24000000 		.4byte	.LFE10-.LFB10
 2775 025a 01       		.uleb128 0x1
 2776 025b 9C       		.byte	0x9c
 2777 025c 93020000 		.4byte	0x293
 2778 0260 0F       		.uleb128 0xf
 2779 0261 74070000 		.4byte	.LASF31
 2780 0265 01       		.byte	0x1
 2781 0266 A403     		.2byte	0x3a4
 2782 0268 83000000 		.4byte	0x83
 2783 026c CD000000 		.4byte	.LLST7
 2784 0270 10       		.uleb128 0x10
 2785 0271 13010000 		.4byte	.LASF26
 2786 0275 01       		.byte	0x1
 2787 0276 A603     		.2byte	0x3a6
 2788 0278 6B000000 		.4byte	0x6b
 2789 027c F9000000 		.4byte	.LLST8
 2790 0280 0C       		.uleb128 0xc
 2791 0281 08000000 		.4byte	.LVL16
 2792 0285 8F0D0000 		.4byte	0xd8f
 2793 0289 0C       		.uleb128 0xc
 2794 028a 1E000000 		.4byte	.LVL18
 2795 028e 9A0D0000 		.4byte	0xd9a
 2796 0292 00       		.byte	0
 2797 0293 11       		.uleb128 0x11
 2798 0294 A1030000 		.4byte	.LASF34
 2799 0298 01       		.byte	0x1
 2800 0299 0B08     		.2byte	0x80b
 2801 029b 83000000 		.4byte	0x83
 2802 029f 00000000 		.4byte	.LFB11
 2803 02a3 14000000 		.4byte	.LFE11-.LFB11
 2804 02a7 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 109


 2805 02a8 9C       		.byte	0x9c
 2806 02a9 CC020000 		.4byte	0x2cc
 2807 02ad 0F       		.uleb128 0xf
 2808 02ae 2E060000 		.4byte	.LASF35
 2809 02b2 01       		.byte	0x1
 2810 02b3 0B08     		.2byte	0x80b
 2811 02b5 83000000 		.4byte	0x83
 2812 02b9 0C010000 		.4byte	.LLST9
 2813 02bd 12       		.uleb128 0x12
 2814 02be A2040000 		.4byte	.LASF36
 2815 02c2 01       		.byte	0x1
 2816 02c3 0D08     		.2byte	0x80d
 2817 02c5 83000000 		.4byte	0x83
 2818 02c9 01       		.uleb128 0x1
 2819 02ca 50       		.byte	0x50
 2820 02cb 00       		.byte	0
 2821 02cc 11       		.uleb128 0x11
 2822 02cd 5E000000 		.4byte	.LASF37
 2823 02d1 01       		.byte	0x1
 2824 02d2 2208     		.2byte	0x822
 2825 02d4 83000000 		.4byte	0x83
 2826 02d8 00000000 		.4byte	.LFB12
 2827 02dc 10000000 		.4byte	.LFE12-.LFB12
 2828 02e0 01       		.uleb128 0x1
 2829 02e1 9C       		.byte	0x9c
 2830 02e2 F5020000 		.4byte	0x2f5
 2831 02e6 12       		.uleb128 0x12
 2832 02e7 16000000 		.4byte	.LASF38
 2833 02eb 01       		.byte	0x1
 2834 02ec 2408     		.2byte	0x824
 2835 02ee 83000000 		.4byte	0x83
 2836 02f2 01       		.uleb128 0x1
 2837 02f3 50       		.byte	0x50
 2838 02f4 00       		.byte	0
 2839 02f5 0E       		.uleb128 0xe
 2840 02f6 94000000 		.4byte	.LASF39
 2841 02fa 01       		.byte	0x1
 2842 02fb 3908     		.2byte	0x839
 2843 02fd 00000000 		.4byte	.LFB13
 2844 0301 0C000000 		.4byte	.LFE13-.LFB13
 2845 0305 01       		.uleb128 0x1
 2846 0306 9C       		.byte	0x9c
 2847 0307 1A030000 		.4byte	0x31a
 2848 030b 13       		.uleb128 0x13
 2849 030c 69020000 		.4byte	.LASF40
 2850 0310 01       		.byte	0x1
 2851 0311 3908     		.2byte	0x839
 2852 0313 83000000 		.4byte	0x83
 2853 0317 01       		.uleb128 0x1
 2854 0318 50       		.byte	0x50
 2855 0319 00       		.byte	0
 2856 031a 0E       		.uleb128 0xe
 2857 031b 06060000 		.4byte	.LASF41
 2858 031f 01       		.byte	0x1
 2859 0320 F008     		.2byte	0x8f0
 2860 0322 00000000 		.4byte	.LFB20
 2861 0326 14000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 110


 2862 032a 01       		.uleb128 0x1
 2863 032b 9C       		.byte	0x9c
 2864 032c 41030000 		.4byte	0x341
 2865 0330 0F       		.uleb128 0xf
 2866 0331 62020000 		.4byte	.LASF42
 2867 0335 01       		.byte	0x1
 2868 0336 F008     		.2byte	0x8f0
 2869 0338 6B000000 		.4byte	0x6b
 2870 033c 2A010000 		.4byte	.LLST10
 2871 0340 00       		.byte	0
 2872 0341 11       		.uleb128 0x11
 2873 0342 DA000000 		.4byte	.LASF43
 2874 0346 01       		.byte	0x1
 2875 0347 0209     		.2byte	0x902
 2876 0349 6B000000 		.4byte	0x6b
 2877 034d 00000000 		.4byte	.LFB21
 2878 0351 18000000 		.4byte	.LFE21-.LFB21
 2879 0355 01       		.uleb128 0x1
 2880 0356 9C       		.byte	0x9c
 2881 0357 6C030000 		.4byte	0x36c
 2882 035b 0F       		.uleb128 0xf
 2883 035c 62020000 		.4byte	.LASF42
 2884 0360 01       		.byte	0x1
 2885 0361 0209     		.2byte	0x902
 2886 0363 6B000000 		.4byte	0x6b
 2887 0367 4B010000 		.4byte	.LLST11
 2888 036b 00       		.byte	0
 2889 036c 0E       		.uleb128 0xe
 2890 036d 6D010000 		.4byte	.LASF44
 2891 0371 01       		.byte	0x1
 2892 0372 1209     		.2byte	0x912
 2893 0374 00000000 		.4byte	.LFB22
 2894 0378 14000000 		.4byte	.LFE22-.LFB22
 2895 037c 01       		.uleb128 0x1
 2896 037d 9C       		.byte	0x9c
 2897 037e 93030000 		.4byte	0x393
 2898 0382 0F       		.uleb128 0xf
 2899 0383 62020000 		.4byte	.LASF42
 2900 0387 01       		.byte	0x1
 2901 0388 1209     		.2byte	0x912
 2902 038a 6B000000 		.4byte	0x6b
 2903 038e 6C010000 		.4byte	.LLST12
 2904 0392 00       		.byte	0
 2905 0393 0E       		.uleb128 0xe
 2906 0394 8B030000 		.4byte	.LASF45
 2907 0398 01       		.byte	0x1
 2908 0399 2009     		.2byte	0x920
 2909 039b 00000000 		.4byte	.LFB23
 2910 039f 14000000 		.4byte	.LFE23-.LFB23
 2911 03a3 01       		.uleb128 0x1
 2912 03a4 9C       		.byte	0x9c
 2913 03a5 BA030000 		.4byte	0x3ba
 2914 03a9 0F       		.uleb128 0xf
 2915 03aa 62020000 		.4byte	.LASF42
 2916 03ae 01       		.byte	0x1
 2917 03af 2009     		.2byte	0x920
 2918 03b1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 111


 2919 03b5 8D010000 		.4byte	.LLST13
 2920 03b9 00       		.byte	0
 2921 03ba 0E       		.uleb128 0xe
 2922 03bb E3040000 		.4byte	.LASF46
 2923 03bf 01       		.byte	0x1
 2924 03c0 2F09     		.2byte	0x92f
 2925 03c2 00000000 		.4byte	.LFB24
 2926 03c6 14000000 		.4byte	.LFE24-.LFB24
 2927 03ca 01       		.uleb128 0x1
 2928 03cb 9C       		.byte	0x9c
 2929 03cc E1030000 		.4byte	0x3e1
 2930 03d0 0F       		.uleb128 0xf
 2931 03d1 62020000 		.4byte	.LASF42
 2932 03d5 01       		.byte	0x1
 2933 03d6 2F09     		.2byte	0x92f
 2934 03d8 6B000000 		.4byte	0x6b
 2935 03dc AE010000 		.4byte	.LLST14
 2936 03e0 00       		.byte	0
 2937 03e1 0E       		.uleb128 0xe
 2938 03e2 CA050000 		.4byte	.LASF47
 2939 03e6 01       		.byte	0x1
 2940 03e7 3E09     		.2byte	0x93e
 2941 03e9 00000000 		.4byte	.LFB25
 2942 03ed 04000000 		.4byte	.LFE25-.LFB25
 2943 03f1 01       		.uleb128 0x1
 2944 03f2 9C       		.byte	0x9c
 2945 03f3 06040000 		.4byte	0x406
 2946 03f7 13       		.uleb128 0x13
 2947 03f8 2E060000 		.4byte	.LASF35
 2948 03fc 01       		.byte	0x1
 2949 03fd 3E09     		.2byte	0x93e
 2950 03ff 6B000000 		.4byte	0x6b
 2951 0403 01       		.uleb128 0x1
 2952 0404 50       		.byte	0x50
 2953 0405 00       		.byte	0
 2954 0406 11       		.uleb128 0x11
 2955 0407 61040000 		.4byte	.LASF48
 2956 040b 01       		.byte	0x1
 2957 040c 5208     		.2byte	0x852
 2958 040e DE000000 		.4byte	0xde
 2959 0412 00000000 		.4byte	.LFB14
 2960 0416 20000000 		.4byte	.LFE14-.LFB14
 2961 041a 01       		.uleb128 0x1
 2962 041b 9C       		.byte	0x9c
 2963 041c 6E040000 		.4byte	0x46e
 2964 0420 0F       		.uleb128 0xf
 2965 0421 62020000 		.4byte	.LASF42
 2966 0425 01       		.byte	0x1
 2967 0426 5208     		.2byte	0x852
 2968 0428 6B000000 		.4byte	0x6b
 2969 042c CF010000 		.4byte	.LLST15
 2970 0430 0F       		.uleb128 0xf
 2971 0431 F5040000 		.4byte	.LASF49
 2972 0435 01       		.byte	0x1
 2973 0436 5208     		.2byte	0x852
 2974 0438 DE000000 		.4byte	0xde
 2975 043c F0010000 		.4byte	.LLST16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 112


 2976 0440 12       		.uleb128 0x12
 2977 0441 50000000 		.4byte	.LASF50
 2978 0445 01       		.byte	0x1
 2979 0446 5408     		.2byte	0x854
 2980 0448 DE000000 		.4byte	0xde
 2981 044c 01       		.uleb128 0x1
 2982 044d 50       		.byte	0x50
 2983 044e 14       		.uleb128 0x14
 2984 044f 00000000 		.4byte	.LASF51
 2985 0453 01       		.byte	0x1
 2986 0454 5508     		.2byte	0x855
 2987 0456 6E040000 		.4byte	0x46e
 2988 045a 00000020 		.4byte	0x20000000
 2989 045e 15       		.uleb128 0x15
 2990 045f 10000000 		.4byte	.LVL39
 2991 0463 E1030000 		.4byte	0x3e1
 2992 0467 16       		.uleb128 0x16
 2993 0468 01       		.uleb128 0x1
 2994 0469 50       		.byte	0x50
 2995 046a 01       		.uleb128 0x1
 2996 046b 30       		.byte	0x30
 2997 046c 00       		.byte	0
 2998 046d 00       		.byte	0
 2999 046e 06       		.uleb128 0x6
 3000 046f 04       		.byte	0x4
 3001 0470 DE000000 		.4byte	0xde
 3002 0474 11       		.uleb128 0x11
 3003 0475 12060000 		.4byte	.LASF52
 3004 0479 01       		.byte	0x1
 3005 047a 7408     		.2byte	0x874
 3006 047c DE000000 		.4byte	0xde
 3007 0480 00000000 		.4byte	.LFB15
 3008 0484 1C000000 		.4byte	.LFE15-.LFB15
 3009 0488 01       		.uleb128 0x1
 3010 0489 9C       		.byte	0x9c
 3011 048a BE040000 		.4byte	0x4be
 3012 048e 0F       		.uleb128 0xf
 3013 048f 62020000 		.4byte	.LASF42
 3014 0493 01       		.byte	0x1
 3015 0494 7408     		.2byte	0x874
 3016 0496 6B000000 		.4byte	0x6b
 3017 049a 1C020000 		.4byte	.LLST17
 3018 049e 14       		.uleb128 0x14
 3019 049f 00000000 		.4byte	.LASF51
 3020 04a3 01       		.byte	0x1
 3021 04a4 7608     		.2byte	0x876
 3022 04a6 6E040000 		.4byte	0x46e
 3023 04aa 00000020 		.4byte	0x20000000
 3024 04ae 15       		.uleb128 0x15
 3025 04af 0E000000 		.4byte	.LVL45
 3026 04b3 E1030000 		.4byte	0x3e1
 3027 04b7 16       		.uleb128 0x16
 3028 04b8 01       		.uleb128 0x1
 3029 04b9 50       		.byte	0x50
 3030 04ba 01       		.uleb128 0x1
 3031 04bb 30       		.byte	0x30
 3032 04bc 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 113


 3033 04bd 00       		.byte	0
 3034 04be 11       		.uleb128 0x11
 3035 04bf 53020000 		.4byte	.LASF53
 3036 04c3 01       		.byte	0x1
 3037 04c4 8A08     		.2byte	0x88a
 3038 04c6 DE000000 		.4byte	0xde
 3039 04ca 00000000 		.4byte	.LFB16
 3040 04ce 24000000 		.4byte	.LFE16-.LFB16
 3041 04d2 01       		.uleb128 0x1
 3042 04d3 9C       		.byte	0x9c
 3043 04d4 26050000 		.4byte	0x526
 3044 04d8 0F       		.uleb128 0xf
 3045 04d9 62020000 		.4byte	.LASF42
 3046 04dd 01       		.byte	0x1
 3047 04de 8A08     		.2byte	0x88a
 3048 04e0 6B000000 		.4byte	0x6b
 3049 04e4 3D020000 		.4byte	.LLST18
 3050 04e8 0F       		.uleb128 0xf
 3051 04e9 F5040000 		.4byte	.LASF49
 3052 04ed 01       		.byte	0x1
 3053 04ee 8A08     		.2byte	0x88a
 3054 04f0 DE000000 		.4byte	0xde
 3055 04f4 5E020000 		.4byte	.LLST19
 3056 04f8 12       		.uleb128 0x12
 3057 04f9 50000000 		.4byte	.LASF50
 3058 04fd 01       		.byte	0x1
 3059 04fe 8C08     		.2byte	0x88c
 3060 0500 DE000000 		.4byte	0xde
 3061 0504 01       		.uleb128 0x1
 3062 0505 50       		.byte	0x50
 3063 0506 14       		.uleb128 0x14
 3064 0507 00000000 		.4byte	.LASF51
 3065 050b 01       		.byte	0x1
 3066 050c 8D08     		.2byte	0x88d
 3067 050e 6E040000 		.4byte	0x46e
 3068 0512 00000020 		.4byte	0x20000000
 3069 0516 15       		.uleb128 0x15
 3070 0517 10000000 		.4byte	.LVL49
 3071 051b E1030000 		.4byte	0x3e1
 3072 051f 16       		.uleb128 0x16
 3073 0520 01       		.uleb128 0x1
 3074 0521 50       		.byte	0x50
 3075 0522 01       		.uleb128 0x1
 3076 0523 30       		.byte	0x30
 3077 0524 00       		.byte	0
 3078 0525 00       		.byte	0
 3079 0526 11       		.uleb128 0x11
 3080 0527 7F050000 		.4byte	.LASF54
 3081 052b 01       		.byte	0x1
 3082 052c A608     		.2byte	0x8a6
 3083 052e DE000000 		.4byte	0xde
 3084 0532 00000000 		.4byte	.LFB17
 3085 0536 20000000 		.4byte	.LFE17-.LFB17
 3086 053a 01       		.uleb128 0x1
 3087 053b 9C       		.byte	0x9c
 3088 053c 70050000 		.4byte	0x570
 3089 0540 0F       		.uleb128 0xf
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 114


 3090 0541 62020000 		.4byte	.LASF42
 3091 0545 01       		.byte	0x1
 3092 0546 A608     		.2byte	0x8a6
 3093 0548 6B000000 		.4byte	0x6b
 3094 054c 8A020000 		.4byte	.LLST20
 3095 0550 14       		.uleb128 0x14
 3096 0551 00000000 		.4byte	.LASF51
 3097 0555 01       		.byte	0x1
 3098 0556 A808     		.2byte	0x8a8
 3099 0558 6E040000 		.4byte	0x46e
 3100 055c 00000020 		.4byte	0x20000000
 3101 0560 15       		.uleb128 0x15
 3102 0561 0E000000 		.4byte	.LVL55
 3103 0565 E1030000 		.4byte	0x3e1
 3104 0569 16       		.uleb128 0x16
 3105 056a 01       		.uleb128 0x1
 3106 056b 50       		.byte	0x50
 3107 056c 01       		.uleb128 0x1
 3108 056d 30       		.byte	0x30
 3109 056e 00       		.byte	0
 3110 056f 00       		.byte	0
 3111 0570 0E       		.uleb128 0xe
 3112 0571 33050000 		.4byte	.LASF55
 3113 0575 01       		.byte	0x1
 3114 0576 B908     		.2byte	0x8b9
 3115 0578 00000000 		.4byte	.LFB18
 3116 057c 4C000000 		.4byte	.LFE18-.LFB18
 3117 0580 01       		.uleb128 0x1
 3118 0581 9C       		.byte	0x9c
 3119 0582 0F060000 		.4byte	0x60f
 3120 0586 0F       		.uleb128 0xf
 3121 0587 62020000 		.4byte	.LASF42
 3122 058b 01       		.byte	0x1
 3123 058c B908     		.2byte	0x8b9
 3124 058e 6B000000 		.4byte	0x6b
 3125 0592 AB020000 		.4byte	.LLST21
 3126 0596 0F       		.uleb128 0xf
 3127 0597 24040000 		.4byte	.LASF56
 3128 059b 01       		.byte	0x1
 3129 059c B908     		.2byte	0x8b9
 3130 059e 6B000000 		.4byte	0x6b
 3131 05a2 CC020000 		.4byte	.LLST22
 3132 05a6 10       		.uleb128 0x10
 3133 05a7 13010000 		.4byte	.LASF26
 3134 05ab 01       		.byte	0x1
 3135 05ac BB08     		.2byte	0x8bb
 3136 05ae 6B000000 		.4byte	0x6b
 3137 05b2 ED020000 		.4byte	.LLST23
 3138 05b6 10       		.uleb128 0x10
 3139 05b7 46020000 		.4byte	.LASF57
 3140 05bb 01       		.byte	0x1
 3141 05bc BC08     		.2byte	0x8bc
 3142 05be 83000000 		.4byte	0x83
 3143 05c2 00030000 		.4byte	.LLST24
 3144 05c6 10       		.uleb128 0x10
 3145 05c7 E3020000 		.4byte	.LASF58
 3146 05cb 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 115


 3147 05cc BD08     		.2byte	0x8bd
 3148 05ce 83000000 		.4byte	0x83
 3149 05d2 13030000 		.4byte	.LLST25
 3150 05d6 17       		.uleb128 0x17
 3151 05d7 10000000 		.4byte	.LVL58
 3152 05db E1030000 		.4byte	0x3e1
 3153 05df E9050000 		.4byte	0x5e9
 3154 05e3 16       		.uleb128 0x16
 3155 05e4 01       		.uleb128 0x1
 3156 05e5 50       		.byte	0x50
 3157 05e6 01       		.uleb128 0x1
 3158 05e7 30       		.byte	0x30
 3159 05e8 00       		.byte	0
 3160 05e9 17       		.uleb128 0x17
 3161 05ea 1A000000 		.4byte	.LVL59
 3162 05ee E1030000 		.4byte	0x3e1
 3163 05f2 FC050000 		.4byte	0x5fc
 3164 05f6 16       		.uleb128 0x16
 3165 05f7 01       		.uleb128 0x1
 3166 05f8 50       		.byte	0x50
 3167 05f9 01       		.uleb128 0x1
 3168 05fa 30       		.byte	0x30
 3169 05fb 00       		.byte	0
 3170 05fc 0C       		.uleb128 0xc
 3171 05fd 26000000 		.4byte	.LVL61
 3172 0601 8F0D0000 		.4byte	0xd8f
 3173 0605 0C       		.uleb128 0xc
 3174 0606 44000000 		.4byte	.LVL66
 3175 060a 9A0D0000 		.4byte	0xd9a
 3176 060e 00       		.byte	0
 3177 060f 11       		.uleb128 0x11
 3178 0610 9F020000 		.4byte	.LASF59
 3179 0614 01       		.byte	0x1
 3180 0615 DB08     		.2byte	0x8db
 3181 0617 6B000000 		.4byte	0x6b
 3182 061b 00000000 		.4byte	.LFB19
 3183 061f 2C000000 		.4byte	.LFE19-.LFB19
 3184 0623 01       		.uleb128 0x1
 3185 0624 9C       		.byte	0x9c
 3186 0625 59060000 		.4byte	0x659
 3187 0629 0F       		.uleb128 0xf
 3188 062a 62020000 		.4byte	.LASF42
 3189 062e 01       		.byte	0x1
 3190 062f DB08     		.2byte	0x8db
 3191 0631 6B000000 		.4byte	0x6b
 3192 0635 31030000 		.4byte	.LLST26
 3193 0639 10       		.uleb128 0x10
 3194 063a 24040000 		.4byte	.LASF56
 3195 063e 01       		.byte	0x1
 3196 063f DD08     		.2byte	0x8dd
 3197 0641 6B000000 		.4byte	0x6b
 3198 0645 52030000 		.4byte	.LLST27
 3199 0649 15       		.uleb128 0x15
 3200 064a 0E000000 		.4byte	.LVL70
 3201 064e E1030000 		.4byte	0x3e1
 3202 0652 16       		.uleb128 0x16
 3203 0653 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 116


 3204 0654 50       		.byte	0x50
 3205 0655 01       		.uleb128 0x1
 3206 0656 30       		.byte	0x30
 3207 0657 00       		.byte	0
 3208 0658 00       		.byte	0
 3209 0659 0A       		.uleb128 0xa
 3210 065a B1000000 		.4byte	.LASF60
 3211 065e 01       		.byte	0x1
 3212 065f 5609     		.2byte	0x956
 3213 0661 00000000 		.4byte	.LFB26
 3214 0665 18000000 		.4byte	.LFE26-.LFB26
 3215 0669 01       		.uleb128 0x1
 3216 066a 9C       		.byte	0x9c
 3217 066b 0E       		.uleb128 0xe
 3218 066c 04070000 		.4byte	.LASF61
 3219 0670 01       		.byte	0x1
 3220 0671 6A09     		.2byte	0x96a
 3221 0673 00000000 		.4byte	.LFB27
 3222 0677 30000000 		.4byte	.LFE27-.LFB27
 3223 067b 01       		.uleb128 0x1
 3224 067c 9C       		.byte	0x9c
 3225 067d A4060000 		.4byte	0x6a4
 3226 0681 0F       		.uleb128 0xf
 3227 0682 8E050000 		.4byte	.LASF62
 3228 0686 01       		.byte	0x1
 3229 0687 6A09     		.2byte	0x96a
 3230 0689 83000000 		.4byte	0x83
 3231 068d 65030000 		.4byte	.LLST28
 3232 0691 0C       		.uleb128 0xc
 3233 0692 0E000000 		.4byte	.LVL75
 3234 0696 AB0D0000 		.4byte	0xdab
 3235 069a 0C       		.uleb128 0xc
 3236 069b 26000000 		.4byte	.LVL77
 3237 069f AB0D0000 		.4byte	0xdab
 3238 06a3 00       		.byte	0
 3239 06a4 0B       		.uleb128 0xb
 3240 06a5 86020000 		.4byte	.LASF63
 3241 06a9 01       		.byte	0x1
 3242 06aa AC       		.byte	0xac
 3243 06ab 00000000 		.4byte	.LFB3
 3244 06af CC000000 		.4byte	.LFE3-.LFB3
 3245 06b3 01       		.uleb128 0x1
 3246 06b4 9C       		.byte	0x9c
 3247 06b5 4D070000 		.4byte	0x74d
 3248 06b9 18       		.uleb128 0x18
 3249 06ba 02010000 		.4byte	.LASF64
 3250 06be 01       		.byte	0x1
 3251 06bf B2       		.byte	0xb2
 3252 06c0 83000000 		.4byte	0x83
 3253 06c4 83030000 		.4byte	.LLST29
 3254 06c8 18       		.uleb128 0x18
 3255 06c9 13010000 		.4byte	.LASF26
 3256 06cd 01       		.byte	0x1
 3257 06ce B3       		.byte	0xb3
 3258 06cf 6B000000 		.4byte	0x6b
 3259 06d3 AE030000 		.4byte	.LLST30
 3260 06d7 18       		.uleb128 0x18
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 117


 3261 06d8 C8030000 		.4byte	.LASF65
 3262 06dc 01       		.byte	0x1
 3263 06dd B4       		.byte	0xb4
 3264 06de 83000000 		.4byte	0x83
 3265 06e2 C1030000 		.4byte	.LLST31
 3266 06e6 18       		.uleb128 0x18
 3267 06e7 49050000 		.4byte	.LASF66
 3268 06eb 01       		.byte	0x1
 3269 06ec B5       		.byte	0xb5
 3270 06ed 83000000 		.4byte	0x83
 3271 06f1 17040000 		.4byte	.LLST32
 3272 06f5 19       		.uleb128 0x19
 3273 06f6 F8060000 		.4byte	.LASF67
 3274 06fa 01       		.byte	0x1
 3275 06fb B6       		.byte	0xb6
 3276 06fc D9000000 		.4byte	0xd9
 3277 0700 02       		.uleb128 0x2
 3278 0701 91       		.byte	0x91
 3279 0702 6C       		.sleb128 -20
 3280 0703 0C       		.uleb128 0xc
 3281 0704 08000000 		.4byte	.LVL80
 3282 0708 BC0D0000 		.4byte	0xdbc
 3283 070c 0C       		.uleb128 0xc
 3284 070d 10000000 		.4byte	.LVL81
 3285 0711 8F0D0000 		.4byte	0xd8f
 3286 0715 17       		.uleb128 0x17
 3287 0716 82000000 		.4byte	.LVL97
 3288 071a C70D0000 		.4byte	0xdc7
 3289 071e 29070000 		.4byte	0x729
 3290 0722 16       		.uleb128 0x16
 3291 0723 01       		.uleb128 0x1
 3292 0724 50       		.byte	0x50
 3293 0725 02       		.uleb128 0x2
 3294 0726 08       		.byte	0x8
 3295 0727 30       		.byte	0x30
 3296 0728 00       		.byte	0
 3297 0729 17       		.uleb128 0x17
 3298 072a 94000000 		.4byte	.LVL98
 3299 072e 6B060000 		.4byte	0x66b
 3300 0732 3C070000 		.4byte	0x73c
 3301 0736 16       		.uleb128 0x16
 3302 0737 01       		.uleb128 0x1
 3303 0738 50       		.byte	0x50
 3304 0739 01       		.uleb128 0x1
 3305 073a 44       		.byte	0x44
 3306 073b 00       		.byte	0
 3307 073c 15       		.uleb128 0x15
 3308 073d 9E000000 		.4byte	.LVL99
 3309 0741 9A0D0000 		.4byte	0xd9a
 3310 0745 16       		.uleb128 0x16
 3311 0746 01       		.uleb128 0x1
 3312 0747 50       		.byte	0x50
 3313 0748 02       		.uleb128 0x2
 3314 0749 74       		.byte	0x74
 3315 074a 00       		.sleb128 0
 3316 074b 00       		.byte	0
 3317 074c 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 118


 3318 074d 0E       		.uleb128 0xe
 3319 074e 2D040000 		.4byte	.LASF68
 3320 0752 01       		.byte	0x1
 3321 0753 0D03     		.2byte	0x30d
 3322 0755 00000000 		.4byte	.LFB9
 3323 0759 D8000000 		.4byte	.LFE9-.LFB9
 3324 075d 01       		.uleb128 0x1
 3325 075e 9C       		.byte	0x9c
 3326 075f 15080000 		.4byte	0x815
 3327 0763 0F       		.uleb128 0xf
 3328 0764 02010000 		.4byte	.LASF64
 3329 0768 01       		.byte	0x1
 3330 0769 0D03     		.2byte	0x30d
 3331 076b 83000000 		.4byte	0x83
 3332 076f 36040000 		.4byte	.LLST33
 3333 0773 10       		.uleb128 0x10
 3334 0774 13010000 		.4byte	.LASF26
 3335 0778 01       		.byte	0x1
 3336 0779 0F03     		.2byte	0x30f
 3337 077b 6B000000 		.4byte	0x6b
 3338 077f 86040000 		.4byte	.LLST34
 3339 0783 10       		.uleb128 0x10
 3340 0784 E1060000 		.4byte	.LASF69
 3341 0788 01       		.byte	0x1
 3342 0789 1003     		.2byte	0x310
 3343 078b 6B000000 		.4byte	0x6b
 3344 078f 9A040000 		.4byte	.LLST35
 3345 0793 10       		.uleb128 0x10
 3346 0794 5C010000 		.4byte	.LASF70
 3347 0798 01       		.byte	0x1
 3348 0799 1303     		.2byte	0x313
 3349 079b 83000000 		.4byte	0x83
 3350 079f BE040000 		.4byte	.LLST36
 3351 07a3 0C       		.uleb128 0xc
 3352 07a4 26000000 		.4byte	.LVL102
 3353 07a8 8F0D0000 		.4byte	0xd8f
 3354 07ac 0C       		.uleb128 0xc
 3355 07ad 2C000000 		.4byte	.LVL104
 3356 07b1 45010000 		.4byte	0x145
 3357 07b5 0C       		.uleb128 0xc
 3358 07b6 34000000 		.4byte	.LVL106
 3359 07ba 14010000 		.4byte	0x114
 3360 07be 17       		.uleb128 0x17
 3361 07bf 74000000 		.4byte	.LVL113
 3362 07c3 AB0D0000 		.4byte	0xdab
 3363 07c7 D2070000 		.4byte	0x7d2
 3364 07cb 16       		.uleb128 0x16
 3365 07cc 01       		.uleb128 0x1
 3366 07cd 50       		.byte	0x50
 3367 07ce 02       		.uleb128 0x2
 3368 07cf 08       		.byte	0x8
 3369 07d0 32       		.byte	0x32
 3370 07d1 00       		.byte	0
 3371 07d2 17       		.uleb128 0x17
 3372 07d3 94000000 		.4byte	.LVL114
 3373 07d7 AB0D0000 		.4byte	0xdab
 3374 07db E6070000 		.4byte	0x7e6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 119


 3375 07df 16       		.uleb128 0x16
 3376 07e0 01       		.uleb128 0x1
 3377 07e1 50       		.byte	0x50
 3378 07e2 02       		.uleb128 0x2
 3379 07e3 08       		.byte	0x8
 3380 07e4 32       		.byte	0x32
 3381 07e5 00       		.byte	0
 3382 07e6 0C       		.uleb128 0xc
 3383 07e7 AE000000 		.4byte	.LVL116
 3384 07eb A4060000 		.4byte	0x6a4
 3385 07ef 17       		.uleb128 0x17
 3386 07f0 B4000000 		.4byte	.LVL117
 3387 07f4 9A0D0000 		.4byte	0xd9a
 3388 07f8 05080000 		.4byte	0x805
 3389 07fc 16       		.uleb128 0x16
 3390 07fd 01       		.uleb128 0x1
 3391 07fe 50       		.byte	0x50
 3392 07ff 04       		.uleb128 0x4
 3393 0800 91       		.byte	0x91
 3394 0801 64       		.sleb128 -28
 3395 0802 94       		.byte	0x94
 3396 0803 01       		.byte	0x1
 3397 0804 00       		.byte	0
 3398 0805 15       		.uleb128 0x15
 3399 0806 BC000000 		.4byte	.LVL120
 3400 080a E1030000 		.4byte	0x3e1
 3401 080e 16       		.uleb128 0x16
 3402 080f 01       		.uleb128 0x1
 3403 0810 50       		.byte	0x50
 3404 0811 01       		.uleb128 0x1
 3405 0812 30       		.byte	0x30
 3406 0813 00       		.byte	0
 3407 0814 00       		.byte	0
 3408 0815 0E       		.uleb128 0xe
 3409 0816 35020000 		.4byte	.LASF71
 3410 081a 01       		.byte	0x1
 3411 081b 8109     		.2byte	0x981
 3412 081d 00000000 		.4byte	.LFB28
 3413 0821 14000000 		.4byte	.LFE28-.LFB28
 3414 0825 01       		.uleb128 0x1
 3415 0826 9C       		.byte	0x9c
 3416 0827 45080000 		.4byte	0x845
 3417 082b 0F       		.uleb128 0xf
 3418 082c D6070000 		.4byte	.LASF72
 3419 0830 01       		.byte	0x1
 3420 0831 8109     		.2byte	0x981
 3421 0833 77000000 		.4byte	0x77
 3422 0837 01050000 		.4byte	.LLST37
 3423 083b 0C       		.uleb128 0xc
 3424 083c 0C000000 		.4byte	.LVL123
 3425 0840 AB0D0000 		.4byte	0xdab
 3426 0844 00       		.byte	0
 3427 0845 1A       		.uleb128 0x1a
 3428 0846 07010000 		.4byte	.LASF73
 3429 084a 01       		.byte	0x1
 3430 084b 8F09     		.2byte	0x98f
 3431 084d 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 120


 3432 0851 4C000000 		.4byte	.LFE29-.LFB29
 3433 0855 01       		.uleb128 0x1
 3434 0856 9C       		.byte	0x9c
 3435 0857 6C080000 		.4byte	0x86c
 3436 085b 0F       		.uleb128 0xf
 3437 085c 02010000 		.4byte	.LASF64
 3438 0860 01       		.byte	0x1
 3439 0861 8F09     		.2byte	0x98f
 3440 0863 83000000 		.4byte	0x83
 3441 0867 22050000 		.4byte	.LLST38
 3442 086b 00       		.byte	0
 3443 086c 0A       		.uleb128 0xa
 3444 086d 66070000 		.4byte	.LASF74
 3445 0871 01       		.byte	0x1
 3446 0872 FC09     		.2byte	0x9fc
 3447 0874 00000000 		.4byte	.LFB33
 3448 0878 10000000 		.4byte	.LFE33-.LFB33
 3449 087c 01       		.uleb128 0x1
 3450 087d 9C       		.byte	0x9c
 3451 087e 0A       		.uleb128 0xa
 3452 087f C1000000 		.4byte	.LASF75
 3453 0883 01       		.byte	0x1
 3454 0884 0C0A     		.2byte	0xa0c
 3455 0886 00000000 		.4byte	.LFB34
 3456 088a 10000000 		.4byte	.LFE34-.LFB34
 3457 088e 01       		.uleb128 0x1
 3458 088f 9C       		.byte	0x9c
 3459 0890 0E       		.uleb128 0xe
 3460 0891 7C060000 		.4byte	.LASF76
 3461 0895 01       		.byte	0x1
 3462 0896 EB09     		.2byte	0x9eb
 3463 0898 00000000 		.4byte	.LFB32
 3464 089c 18000000 		.4byte	.LFE32-.LFB32
 3465 08a0 01       		.uleb128 0x1
 3466 08a1 9C       		.byte	0x9c
 3467 08a2 B0080000 		.4byte	0x8b0
 3468 08a6 0C       		.uleb128 0xc
 3469 08a7 06000000 		.4byte	.LVL128
 3470 08ab 7E080000 		.4byte	0x87e
 3471 08af 00       		.byte	0
 3472 08b0 0A       		.uleb128 0xa
 3473 08b1 0C070000 		.4byte	.LASF77
 3474 08b5 01       		.byte	0x1
 3475 08b6 1C0A     		.2byte	0xa1c
 3476 08b8 00000000 		.4byte	.LFB35
 3477 08bc 10000000 		.4byte	.LFE35-.LFB35
 3478 08c0 01       		.uleb128 0x1
 3479 08c1 9C       		.byte	0x9c
 3480 08c2 0E       		.uleb128 0xe
 3481 08c3 EA070000 		.4byte	.LASF78
 3482 08c7 01       		.byte	0x1
 3483 08c8 2D0A     		.2byte	0xa2d
 3484 08ca 00000000 		.4byte	.LFB36
 3485 08ce 10000000 		.4byte	.LFE36-.LFB36
 3486 08d2 01       		.uleb128 0x1
 3487 08d3 9C       		.byte	0x9c
 3488 08d4 E9080000 		.4byte	0x8e9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 121


 3489 08d8 0F       		.uleb128 0xf
 3490 08d9 E3020000 		.4byte	.LASF58
 3491 08dd 01       		.byte	0x1
 3492 08de 2D0A     		.2byte	0xa2d
 3493 08e0 83000000 		.4byte	0x83
 3494 08e4 43050000 		.4byte	.LLST39
 3495 08e8 00       		.byte	0
 3496 08e9 0D       		.uleb128 0xd
 3497 08ea 28010000 		.4byte	.LASF80
 3498 08ee 01       		.byte	0x1
 3499 08ef 3D0A     		.2byte	0xa3d
 3500 08f1 83000000 		.4byte	0x83
 3501 08f5 00000000 		.4byte	.LFB37
 3502 08f9 10000000 		.4byte	.LFE37-.LFB37
 3503 08fd 01       		.uleb128 0x1
 3504 08fe 9C       		.byte	0x9c
 3505 08ff 0D       		.uleb128 0xd
 3506 0900 13050000 		.4byte	.LASF81
 3507 0904 01       		.byte	0x1
 3508 0905 4D0A     		.2byte	0xa4d
 3509 0907 83000000 		.4byte	0x83
 3510 090b 00000000 		.4byte	.LFB38
 3511 090f 10000000 		.4byte	.LFE38-.LFB38
 3512 0913 01       		.uleb128 0x1
 3513 0914 9C       		.byte	0x9c
 3514 0915 0E       		.uleb128 0xe
 3515 0916 E6030000 		.4byte	.LASF82
 3516 091a 01       		.byte	0x1
 3517 091b 6D0A     		.2byte	0xa6d
 3518 091d 00000000 		.4byte	.LFB39
 3519 0921 20000000 		.4byte	.LFE39-.LFB39
 3520 0925 01       		.uleb128 0x1
 3521 0926 9C       		.byte	0x9c
 3522 0927 3A090000 		.4byte	0x93a
 3523 092b 13       		.uleb128 0x13
 3524 092c E9020000 		.4byte	.LASF83
 3525 0930 01       		.byte	0x1
 3526 0931 6D0A     		.2byte	0xa6d
 3527 0933 83000000 		.4byte	0x83
 3528 0937 01       		.uleb128 0x1
 3529 0938 50       		.byte	0x50
 3530 0939 00       		.byte	0
 3531 093a 0D       		.uleb128 0xd
 3532 093b 03030000 		.4byte	.LASF84
 3533 093f 01       		.byte	0x1
 3534 0940 8A0A     		.2byte	0xa8a
 3535 0942 83000000 		.4byte	0x83
 3536 0946 00000000 		.4byte	.LFB40
 3537 094a 10000000 		.4byte	.LFE40-.LFB40
 3538 094e 01       		.uleb128 0x1
 3539 094f 9C       		.byte	0x9c
 3540 0950 1B       		.uleb128 0x1b
 3541 0951 FD070000 		.4byte	.LASF127
 3542 0955 01       		.byte	0x1
 3543 0956 DF0A     		.2byte	0xadf
 3544 0958 00000000 		.4byte	.LFB44
 3545 095c 28000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 122


 3546 0960 01       		.uleb128 0x1
 3547 0961 9C       		.byte	0x9c
 3548 0962 7E090000 		.4byte	0x97e
 3549 0966 1C       		.uleb128 0x1c
 3550 0967 6900     		.ascii	"i\000"
 3551 0969 01       		.byte	0x1
 3552 096a E10A     		.2byte	0xae1
 3553 096c 83000000 		.4byte	0x83
 3554 0970 64050000 		.4byte	.LLST40
 3555 0974 0C       		.uleb128 0xc
 3556 0975 06000000 		.4byte	.LVL132
 3557 0979 3A090000 		.4byte	0x93a
 3558 097d 00       		.byte	0
 3559 097e 0A       		.uleb128 0xa
 3560 097f 3C030000 		.4byte	.LASF85
 3561 0983 01       		.byte	0x1
 3562 0984 970A     		.2byte	0xa97
 3563 0986 00000000 		.4byte	.LFB41
 3564 098a 0C000000 		.4byte	.LFE41-.LFB41
 3565 098e 01       		.uleb128 0x1
 3566 098f 9C       		.byte	0x9c
 3567 0990 1A       		.uleb128 0x1a
 3568 0991 D5020000 		.4byte	.LASF86
 3569 0995 01       		.byte	0x1
 3570 0996 CC09     		.2byte	0x9cc
 3571 0998 00000000 		.4byte	.LFB31
 3572 099c 4C000000 		.4byte	.LFE31-.LFB31
 3573 09a0 01       		.uleb128 0x1
 3574 09a1 9C       		.byte	0x9c
 3575 09a2 050A0000 		.4byte	0xa05
 3576 09a6 1C       		.uleb128 0x1c
 3577 09a7 6900     		.ascii	"i\000"
 3578 09a9 01       		.byte	0x1
 3579 09aa CE09     		.2byte	0x9ce
 3580 09ac 83000000 		.4byte	0x83
 3581 09b0 82050000 		.4byte	.LLST41
 3582 09b4 17       		.uleb128 0x17
 3583 09b5 1C000000 		.4byte	.LVL142
 3584 09b9 06040000 		.4byte	0x406
 3585 09bd D0090000 		.4byte	0x9d0
 3586 09c1 16       		.uleb128 0x16
 3587 09c2 01       		.uleb128 0x1
 3588 09c3 51       		.byte	0x51
 3589 09c4 05       		.uleb128 0x5
 3590 09c5 03       		.byte	0x3
 3591 09c6 00000000 		.4byte	CySysTickServiceCallbacks
 3592 09ca 16       		.uleb128 0x16
 3593 09cb 01       		.uleb128 0x1
 3594 09cc 50       		.byte	0x50
 3595 09cd 01       		.uleb128 0x1
 3596 09ce 3F       		.byte	0x3f
 3597 09cf 00       		.byte	0
 3598 09d0 17       		.uleb128 0x17
 3599 09d1 22000000 		.4byte	.LVL143
 3600 09d5 15090000 		.4byte	0x915
 3601 09d9 E3090000 		.4byte	0x9e3
 3602 09dd 16       		.uleb128 0x16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 123


 3603 09de 01       		.uleb128 0x1
 3604 09df 50       		.byte	0x50
 3605 09e0 01       		.uleb128 0x1
 3606 09e1 31       		.byte	0x31
 3607 09e2 00       		.byte	0
 3608 09e3 0C       		.uleb128 0xc
 3609 09e4 32000000 		.4byte	.LVL145
 3610 09e8 C2080000 		.4byte	0x8c2
 3611 09ec 0C       		.uleb128 0xc
 3612 09ed 36000000 		.4byte	.LVL146
 3613 09f1 7E090000 		.4byte	0x97e
 3614 09f5 15       		.uleb128 0x15
 3615 09f6 3C000000 		.4byte	.LVL147
 3616 09fa 1A030000 		.4byte	0x31a
 3617 09fe 16       		.uleb128 0x16
 3618 09ff 01       		.uleb128 0x1
 3619 0a00 50       		.byte	0x50
 3620 0a01 01       		.uleb128 0x1
 3621 0a02 3F       		.byte	0x3f
 3622 0a03 00       		.byte	0
 3623 0a04 00       		.byte	0
 3624 0a05 0E       		.uleb128 0xe
 3625 0a06 93040000 		.4byte	.LASF87
 3626 0a0a 01       		.byte	0x1
 3627 0a0b AF09     		.2byte	0x9af
 3628 0a0d 00000000 		.4byte	.LFB30
 3629 0a11 20000000 		.4byte	.LFE30-.LFB30
 3630 0a15 01       		.uleb128 0x1
 3631 0a16 9C       		.byte	0x9c
 3632 0a17 2E0A0000 		.4byte	0xa2e
 3633 0a1b 0C       		.uleb128 0xc
 3634 0a1c 0E000000 		.4byte	.LVL148
 3635 0a20 90090000 		.4byte	0x990
 3636 0a24 0C       		.uleb128 0xc
 3637 0a25 18000000 		.4byte	.LVL149
 3638 0a29 90080000 		.4byte	0x890
 3639 0a2d 00       		.byte	0
 3640 0a2e 11       		.uleb128 0x11
 3641 0a2f B9060000 		.4byte	.LASF88
 3642 0a33 01       		.byte	0x1
 3643 0a34 BA0A     		.2byte	0xaba
 3644 0a36 F8000000 		.4byte	0xf8
 3645 0a3a 00000000 		.4byte	.LFB42
 3646 0a3e 10000000 		.4byte	.LFE42-.LFB42
 3647 0a42 01       		.uleb128 0x1
 3648 0a43 9C       		.byte	0x9c
 3649 0a44 750A0000 		.4byte	0xa75
 3650 0a48 0F       		.uleb128 0xf
 3651 0a49 62020000 		.4byte	.LASF42
 3652 0a4d 01       		.byte	0x1
 3653 0a4e BA0A     		.2byte	0xaba
 3654 0a50 83000000 		.4byte	0x83
 3655 0a54 A1050000 		.4byte	.LLST42
 3656 0a58 13       		.uleb128 0x13
 3657 0a59 0A050000 		.4byte	.LASF89
 3658 0a5d 01       		.byte	0x1
 3659 0a5e BA0A     		.2byte	0xaba
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 124


 3660 0a60 F8000000 		.4byte	0xf8
 3661 0a64 01       		.uleb128 0x1
 3662 0a65 51       		.byte	0x51
 3663 0a66 12       		.uleb128 0x12
 3664 0a67 57000000 		.4byte	.LASF90
 3665 0a6b 01       		.byte	0x1
 3666 0a6c BC0A     		.2byte	0xabc
 3667 0a6e F8000000 		.4byte	0xf8
 3668 0a72 01       		.uleb128 0x1
 3669 0a73 50       		.byte	0x50
 3670 0a74 00       		.byte	0
 3671 0a75 11       		.uleb128 0x11
 3672 0a76 9A010000 		.4byte	.LASF91
 3673 0a7a 01       		.byte	0x1
 3674 0a7b D20A     		.2byte	0xad2
 3675 0a7d F8000000 		.4byte	0xf8
 3676 0a81 00000000 		.4byte	.LFB43
 3677 0a85 0C000000 		.4byte	.LFE43-.LFB43
 3678 0a89 01       		.uleb128 0x1
 3679 0a8a 9C       		.byte	0x9c
 3680 0a8b A00A0000 		.4byte	0xaa0
 3681 0a8f 0F       		.uleb128 0xf
 3682 0a90 62020000 		.4byte	.LASF42
 3683 0a94 01       		.byte	0x1
 3684 0a95 D20A     		.2byte	0xad2
 3685 0a97 83000000 		.4byte	0x83
 3686 0a9b C2050000 		.4byte	.LLST43
 3687 0a9f 00       		.byte	0
 3688 0aa0 0E       		.uleb128 0xe
 3689 0aa1 F5020000 		.4byte	.LASF92
 3690 0aa5 01       		.byte	0x1
 3691 0aa6 FF0A     		.2byte	0xaff
 3692 0aa8 00000000 		.4byte	.LFB45
 3693 0aac 70000000 		.4byte	.LFE45-.LFB45
 3694 0ab0 01       		.uleb128 0x1
 3695 0ab1 9C       		.byte	0x9c
 3696 0ab2 C50A0000 		.4byte	0xac5
 3697 0ab6 13       		.uleb128 0x13
 3698 0ab7 EF060000 		.4byte	.LASF93
 3699 0abb 01       		.byte	0x1
 3700 0abc FF0A     		.2byte	0xaff
 3701 0abe C50A0000 		.4byte	0xac5
 3702 0ac2 01       		.uleb128 0x1
 3703 0ac3 50       		.byte	0x50
 3704 0ac4 00       		.byte	0
 3705 0ac5 06       		.uleb128 0x6
 3706 0ac6 04       		.byte	0x4
 3707 0ac7 83000000 		.4byte	0x83
 3708 0acb 0E       		.uleb128 0xe
 3709 0acc D1050000 		.4byte	.LASF94
 3710 0ad0 01       		.byte	0x1
 3711 0ad1 2B0B     		.2byte	0xb2b
 3712 0ad3 00000000 		.4byte	.LFB46
 3713 0ad7 20000000 		.4byte	.LFE46-.LFB46
 3714 0adb 01       		.uleb128 0x1
 3715 0adc 9C       		.byte	0x9c
 3716 0add 020B0000 		.4byte	0xb02
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 125


 3717 0ae1 0F       		.uleb128 0xf
 3718 0ae2 AF040000 		.4byte	.LASF95
 3719 0ae6 01       		.byte	0x1
 3720 0ae7 2B0B     		.2byte	0xb2b
 3721 0ae9 83000000 		.4byte	0x83
 3722 0aed E3050000 		.4byte	.LLST44
 3723 0af1 10       		.uleb128 0x10
 3724 0af2 C8030000 		.4byte	.LASF65
 3725 0af6 01       		.byte	0x1
 3726 0af7 2D0B     		.2byte	0xb2d
 3727 0af9 83000000 		.4byte	0x83
 3728 0afd 04060000 		.4byte	.LLST45
 3729 0b01 00       		.byte	0
 3730 0b02 0E       		.uleb128 0xe
 3731 0b03 42040000 		.4byte	.LASF96
 3732 0b07 01       		.byte	0x1
 3733 0b08 460B     		.2byte	0xb46
 3734 0b0a 00000000 		.4byte	.LFB47
 3735 0b0e 20000000 		.4byte	.LFE47-.LFB47
 3736 0b12 01       		.uleb128 0x1
 3737 0b13 9C       		.byte	0x9c
 3738 0b14 390B0000 		.4byte	0xb39
 3739 0b18 0F       		.uleb128 0xf
 3740 0b19 AF040000 		.4byte	.LASF95
 3741 0b1d 01       		.byte	0x1
 3742 0b1e 460B     		.2byte	0xb46
 3743 0b20 83000000 		.4byte	0x83
 3744 0b24 22060000 		.4byte	.LLST46
 3745 0b28 10       		.uleb128 0x10
 3746 0b29 C8030000 		.4byte	.LASF65
 3747 0b2d 01       		.byte	0x1
 3748 0b2e 480B     		.2byte	0xb48
 3749 0b30 83000000 		.4byte	0x83
 3750 0b34 43060000 		.4byte	.LLST47
 3751 0b38 00       		.byte	0
 3752 0b39 0E       		.uleb128 0xe
 3753 0b3a 48070000 		.4byte	.LASF97
 3754 0b3e 01       		.byte	0x1
 3755 0b3f 610B     		.2byte	0xb61
 3756 0b41 00000000 		.4byte	.LFB48
 3757 0b45 20000000 		.4byte	.LFE48-.LFB48
 3758 0b49 01       		.uleb128 0x1
 3759 0b4a 9C       		.byte	0x9c
 3760 0b4b 700B0000 		.4byte	0xb70
 3761 0b4f 0F       		.uleb128 0xf
 3762 0b50 AF040000 		.4byte	.LASF95
 3763 0b54 01       		.byte	0x1
 3764 0b55 610B     		.2byte	0xb61
 3765 0b57 83000000 		.4byte	0x83
 3766 0b5b 61060000 		.4byte	.LLST48
 3767 0b5f 10       		.uleb128 0x10
 3768 0b60 C8030000 		.4byte	.LASF65
 3769 0b64 01       		.byte	0x1
 3770 0b65 630B     		.2byte	0xb63
 3771 0b67 83000000 		.4byte	0x83
 3772 0b6b 82060000 		.4byte	.LLST49
 3773 0b6f 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 126


 3774 0b70 0E       		.uleb128 0xe
 3775 0b71 BF040000 		.4byte	.LASF98
 3776 0b75 01       		.byte	0x1
 3777 0b76 7E0B     		.2byte	0xb7e
 3778 0b78 00000000 		.4byte	.LFB49
 3779 0b7c 4C000000 		.4byte	.LFE49-.LFB49
 3780 0b80 01       		.uleb128 0x1
 3781 0b81 9C       		.byte	0x9c
 3782 0b82 C60B0000 		.4byte	0xbc6
 3783 0b86 0F       		.uleb128 0xf
 3784 0b87 A1000000 		.4byte	.LASF99
 3785 0b8b 01       		.byte	0x1
 3786 0b8c 7E0B     		.2byte	0xb7e
 3787 0b8e 83000000 		.4byte	0x83
 3788 0b92 A0060000 		.4byte	.LLST50
 3789 0b96 0F       		.uleb128 0xf
 3790 0b97 AF040000 		.4byte	.LASF95
 3791 0b9b 01       		.byte	0x1
 3792 0b9c 7E0B     		.2byte	0xb7e
 3793 0b9e 83000000 		.4byte	0x83
 3794 0ba2 F3060000 		.4byte	.LLST51
 3795 0ba6 10       		.uleb128 0x10
 3796 0ba7 C8030000 		.4byte	.LASF65
 3797 0bab 01       		.byte	0x1
 3798 0bac 800B     		.2byte	0xb80
 3799 0bae 83000000 		.4byte	0x83
 3800 0bb2 46070000 		.4byte	.LLST52
 3801 0bb6 15       		.uleb128 0x15
 3802 0bb7 3C000000 		.4byte	.LVL179
 3803 0bbb E1030000 		.4byte	0x3e1
 3804 0bbf 16       		.uleb128 0x16
 3805 0bc0 01       		.uleb128 0x1
 3806 0bc1 50       		.byte	0x50
 3807 0bc2 01       		.uleb128 0x1
 3808 0bc3 30       		.byte	0x30
 3809 0bc4 00       		.byte	0
 3810 0bc5 00       		.byte	0
 3811 0bc6 0E       		.uleb128 0xe
 3812 0bc7 9B050000 		.4byte	.LASF100
 3813 0bcb 01       		.byte	0x1
 3814 0bcc BB0B     		.2byte	0xbbb
 3815 0bce 00000000 		.4byte	.LFB50
 3816 0bd2 18000000 		.4byte	.LFE50-.LFB50
 3817 0bd6 01       		.uleb128 0x1
 3818 0bd7 9C       		.byte	0x9c
 3819 0bd8 ED0B0000 		.4byte	0xbed
 3820 0bdc 0F       		.uleb128 0xf
 3821 0bdd AF040000 		.4byte	.LASF95
 3822 0be1 01       		.byte	0x1
 3823 0be2 BB0B     		.2byte	0xbbb
 3824 0be4 83000000 		.4byte	0x83
 3825 0be8 7A070000 		.4byte	.LLST53
 3826 0bec 00       		.byte	0
 3827 0bed 0E       		.uleb128 0xe
 3828 0bee C4070000 		.4byte	.LASF101
 3829 0bf2 01       		.byte	0x1
 3830 0bf3 D30B     		.2byte	0xbd3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 127


 3831 0bf5 00000000 		.4byte	.LFB51
 3832 0bf9 14000000 		.4byte	.LFE51-.LFB51
 3833 0bfd 01       		.uleb128 0x1
 3834 0bfe 9C       		.byte	0x9c
 3835 0bff 140C0000 		.4byte	0xc14
 3836 0c03 0F       		.uleb128 0xf
 3837 0c04 44050000 		.4byte	.LASF102
 3838 0c08 01       		.byte	0x1
 3839 0c09 D30B     		.2byte	0xbd3
 3840 0c0b 83000000 		.4byte	0x83
 3841 0c0f A6070000 		.4byte	.LLST54
 3842 0c13 00       		.byte	0
 3843 0c14 0E       		.uleb128 0xe
 3844 0c15 35060000 		.4byte	.LASF103
 3845 0c19 01       		.byte	0x1
 3846 0c1a FF0B     		.2byte	0xbff
 3847 0c1c 00000000 		.4byte	.LFB52
 3848 0c20 18000000 		.4byte	.LFE52-.LFB52
 3849 0c24 01       		.uleb128 0x1
 3850 0c25 9C       		.byte	0x9c
 3851 0c26 3B0C0000 		.4byte	0xc3b
 3852 0c2a 0F       		.uleb128 0xf
 3853 0c2b 3B010000 		.4byte	.LASF104
 3854 0c2f 01       		.byte	0x1
 3855 0c30 FF0B     		.2byte	0xbff
 3856 0c32 83000000 		.4byte	0x83
 3857 0c36 C7070000 		.4byte	.LLST55
 3858 0c3a 00       		.byte	0
 3859 0c3b 0A       		.uleb128 0xa
 3860 0c3c A5070000 		.4byte	.LASF105
 3861 0c40 01       		.byte	0x1
 3862 0c41 110C     		.2byte	0xc11
 3863 0c43 00000000 		.4byte	.LFB53
 3864 0c47 14000000 		.4byte	.LFE53-.LFB53
 3865 0c4b 01       		.uleb128 0x1
 3866 0c4c 9C       		.byte	0x9c
 3867 0c4d 0A       		.uleb128 0xa
 3868 0c4e 7A010000 		.4byte	.LASF106
 3869 0c52 01       		.byte	0x1
 3870 0c53 220C     		.2byte	0xc22
 3871 0c55 00000000 		.4byte	.LFB54
 3872 0c59 14000000 		.4byte	.LFE54-.LFB54
 3873 0c5d 01       		.uleb128 0x1
 3874 0c5e 9C       		.byte	0x9c
 3875 0c5f 0A       		.uleb128 0xa
 3876 0c60 26030000 		.4byte	.LASF107
 3877 0c64 01       		.byte	0x1
 3878 0c65 320C     		.2byte	0xc32
 3879 0c67 00000000 		.4byte	.LFB55
 3880 0c6b 10000000 		.4byte	.LFE55-.LFB55
 3881 0c6f 01       		.uleb128 0x1
 3882 0c70 9C       		.byte	0x9c
 3883 0c71 0A       		.uleb128 0xa
 3884 0c72 CF030000 		.4byte	.LASF108
 3885 0c76 01       		.byte	0x1
 3886 0c77 420C     		.2byte	0xc42
 3887 0c79 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 128


 3888 0c7d 10000000 		.4byte	.LFE56-.LFB56
 3889 0c81 01       		.uleb128 0x1
 3890 0c82 9C       		.byte	0x9c
 3891 0c83 0E       		.uleb128 0xe
 3892 0c84 BD020000 		.4byte	.LASF109
 3893 0c88 01       		.byte	0x1
 3894 0c89 560C     		.2byte	0xc56
 3895 0c8b 00000000 		.4byte	.LFB57
 3896 0c8f 2C000000 		.4byte	.LFE57-.LFB57
 3897 0c93 01       		.uleb128 0x1
 3898 0c94 9C       		.byte	0x9c
 3899 0c95 BA0C0000 		.4byte	0xcba
 3900 0c99 0F       		.uleb128 0xf
 3901 0c9a 5D030000 		.4byte	.LASF110
 3902 0c9e 01       		.byte	0x1
 3903 0c9f 560C     		.2byte	0xc56
 3904 0ca1 9B000000 		.4byte	0x9b
 3905 0ca5 E8070000 		.4byte	.LLST56
 3906 0ca9 1C       		.uleb128 0x1c
 3907 0caa 746D7000 		.ascii	"tmp\000"
 3908 0cae 01       		.byte	0x1
 3909 0caf 580C     		.2byte	0xc58
 3910 0cb1 6B000000 		.4byte	0x6b
 3911 0cb5 22080000 		.4byte	.LLST57
 3912 0cb9 00       		.byte	0
 3913 0cba 11       		.uleb128 0x11
 3914 0cbb 38000000 		.4byte	.LASF111
 3915 0cbf 01       		.byte	0x1
 3916 0cc0 730C     		.2byte	0xc73
 3917 0cc2 9B000000 		.4byte	0x9b
 3918 0cc6 00000000 		.4byte	.LFB58
 3919 0cca 1C000000 		.4byte	.LFE58-.LFB58
 3920 0cce 01       		.uleb128 0x1
 3921 0ccf 9C       		.byte	0x9c
 3922 0cd0 F30C0000 		.4byte	0xcf3
 3923 0cd4 1C       		.uleb128 0x1c
 3924 0cd5 746D7000 		.ascii	"tmp\000"
 3925 0cd9 01       		.byte	0x1
 3926 0cda 750C     		.2byte	0xc75
 3927 0cdc 6B000000 		.4byte	0x6b
 3928 0ce0 46080000 		.4byte	.LLST58
 3929 0ce4 12       		.uleb128 0x12
 3930 0ce5 17080000 		.4byte	.LASF112
 3931 0ce9 01       		.byte	0x1
 3932 0cea 760C     		.2byte	0xc76
 3933 0cec 9B000000 		.4byte	0x9b
 3934 0cf0 01       		.uleb128 0x1
 3935 0cf1 50       		.byte	0x50
 3936 0cf2 00       		.byte	0
 3937 0cf3 1D       		.uleb128 0x1d
 3938 0cf4 F8000000 		.4byte	0xf8
 3939 0cf8 030D0000 		.4byte	0xd03
 3940 0cfc 1E       		.uleb128 0x1e
 3941 0cfd F1000000 		.4byte	0xf1
 3942 0d01 04       		.byte	0x4
 3943 0d02 00       		.byte	0
 3944 0d03 19       		.uleb128 0x19
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 129


 3945 0d04 CE060000 		.4byte	.LASF113
 3946 0d08 01       		.byte	0x1
 3947 0d09 22       		.byte	0x22
 3948 0d0a F30C0000 		.4byte	0xcf3
 3949 0d0e 05       		.uleb128 0x5
 3950 0d0f 03       		.byte	0x3
 3951 0d10 00000000 		.4byte	CySysTickCallbacks
 3952 0d14 1F       		.uleb128 0x1f
 3953 0d15 25050000 		.4byte	.LASF114
 3954 0d19 01       		.byte	0x1
 3955 0d1a 1B       		.byte	0x1b
 3956 0d1b 83000000 		.4byte	0x83
 3957 0d1f 05       		.uleb128 0x5
 3958 0d20 03       		.byte	0x3
 3959 0d21 00000000 		.4byte	cydelayFreqHz
 3960 0d25 1F       		.uleb128 0x1f
 3961 0d26 26020000 		.4byte	.LASF115
 3962 0d2a 01       		.byte	0x1
 3963 0d2b 1C       		.byte	0x1c
 3964 0d2c 83000000 		.4byte	0x83
 3965 0d30 05       		.uleb128 0x5
 3966 0d31 03       		.byte	0x3
 3967 0d32 00000000 		.4byte	cydelayFreqKhz
 3968 0d36 1F       		.uleb128 0x1f
 3969 0d37 26070000 		.4byte	.LASF116
 3970 0d3b 01       		.byte	0x1
 3971 0d3c 1D       		.byte	0x1d
 3972 0d3d 6B000000 		.4byte	0x6b
 3973 0d41 05       		.uleb128 0x5
 3974 0d42 03       		.byte	0x3
 3975 0d43 00000000 		.4byte	cydelayFreqMhz
 3976 0d47 1F       		.uleb128 0x1f
 3977 0d48 B0020000 		.4byte	.LASF117
 3978 0d4c 01       		.byte	0x1
 3979 0d4d 1E       		.byte	0x1e
 3980 0d4e 83000000 		.4byte	0x83
 3981 0d52 05       		.uleb128 0x5
 3982 0d53 03       		.byte	0x3
 3983 0d54 00000000 		.4byte	cydelay32kMs
 3984 0d58 1F       		.uleb128 0x1f
 3985 0d59 83000000 		.4byte	.LASF118
 3986 0d5d 01       		.byte	0x1
 3987 0d5e 35       		.byte	0x35
 3988 0d5f 83000000 		.4byte	0x83
 3989 0d63 05       		.uleb128 0x5
 3990 0d64 03       		.byte	0x3
 3991 0d65 00000000 		.4byte	CySysTickInitVar
 3992 0d69 1D       		.uleb128 0x1d
 3993 0d6a 6B000000 		.4byte	0x6b
 3994 0d6e 790D0000 		.4byte	0xd79
 3995 0d72 1E       		.uleb128 0x1e
 3996 0d73 F1000000 		.4byte	0xf1
 3997 0d77 16       		.byte	0x16
 3998 0d78 00       		.byte	0
 3999 0d79 1F       		.uleb128 0x1f
 4000 0d7a 57060000 		.4byte	.LASF119
 4001 0d7e 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 130


 4002 0d7f 4B       		.byte	0x4b
 4003 0d80 8A0D0000 		.4byte	0xd8a
 4004 0d84 05       		.uleb128 0x5
 4005 0d85 03       		.byte	0x3
 4006 0d86 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4007 0d8a 20       		.uleb128 0x20
 4008 0d8b 690D0000 		.4byte	0xd69
 4009 0d8f 21       		.uleb128 0x21
 4010 0d90 74030000 		.4byte	.LASF122
 4011 0d94 03       		.byte	0x3
 4012 0d95 E3       		.byte	0xe3
 4013 0d96 6B000000 		.4byte	0x6b
 4014 0d9a 22       		.uleb128 0x22
 4015 0d9b 57050000 		.4byte	.LASF120
 4016 0d9f 03       		.byte	0x3
 4017 0da0 E4       		.byte	0xe4
 4018 0da1 AB0D0000 		.4byte	0xdab
 4019 0da5 23       		.uleb128 0x23
 4020 0da6 6B000000 		.4byte	0x6b
 4021 0daa 00       		.byte	0
 4022 0dab 22       		.uleb128 0x22
 4023 0dac B7050000 		.4byte	.LASF121
 4024 0db0 03       		.byte	0x3
 4025 0db1 DA       		.byte	0xda
 4026 0db2 BC0D0000 		.4byte	0xdbc
 4027 0db6 23       		.uleb128 0x23
 4028 0db7 83000000 		.4byte	0x83
 4029 0dbb 00       		.byte	0
 4030 0dbc 21       		.uleb128 0x21
 4031 0dbd 35070000 		.4byte	.LASF123
 4032 0dc1 04       		.byte	0x4
 4033 0dc2 54       		.byte	0x54
 4034 0dc3 83000000 		.4byte	0x83
 4035 0dc7 24       		.uleb128 0x24
 4036 0dc8 8D070000 		.4byte	.LASF128
 4037 0dcc 05       		.byte	0x5
 4038 0dcd 52       		.byte	0x52
 4039 0dce 23       		.uleb128 0x23
 4040 0dcf 83000000 		.4byte	0x83
 4041 0dd3 00       		.byte	0
 4042 0dd4 00       		.byte	0
 4043              		.section	.debug_abbrev,"",%progbits
 4044              	.Ldebug_abbrev0:
 4045 0000 01       		.uleb128 0x1
 4046 0001 11       		.uleb128 0x11
 4047 0002 01       		.byte	0x1
 4048 0003 25       		.uleb128 0x25
 4049 0004 0E       		.uleb128 0xe
 4050 0005 13       		.uleb128 0x13
 4051 0006 0B       		.uleb128 0xb
 4052 0007 03       		.uleb128 0x3
 4053 0008 0E       		.uleb128 0xe
 4054 0009 1B       		.uleb128 0x1b
 4055 000a 0E       		.uleb128 0xe
 4056 000b 55       		.uleb128 0x55
 4057 000c 17       		.uleb128 0x17
 4058 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 131


 4059 000e 01       		.uleb128 0x1
 4060 000f 10       		.uleb128 0x10
 4061 0010 17       		.uleb128 0x17
 4062 0011 00       		.byte	0
 4063 0012 00       		.byte	0
 4064 0013 02       		.uleb128 0x2
 4065 0014 24       		.uleb128 0x24
 4066 0015 00       		.byte	0
 4067 0016 0B       		.uleb128 0xb
 4068 0017 0B       		.uleb128 0xb
 4069 0018 3E       		.uleb128 0x3e
 4070 0019 0B       		.uleb128 0xb
 4071 001a 03       		.uleb128 0x3
 4072 001b 0E       		.uleb128 0xe
 4073 001c 00       		.byte	0
 4074 001d 00       		.byte	0
 4075 001e 03       		.uleb128 0x3
 4076 001f 24       		.uleb128 0x24
 4077 0020 00       		.byte	0
 4078 0021 0B       		.uleb128 0xb
 4079 0022 0B       		.uleb128 0xb
 4080 0023 3E       		.uleb128 0x3e
 4081 0024 0B       		.uleb128 0xb
 4082 0025 03       		.uleb128 0x3
 4083 0026 08       		.uleb128 0x8
 4084 0027 00       		.byte	0
 4085 0028 00       		.byte	0
 4086 0029 04       		.uleb128 0x4
 4087 002a 16       		.uleb128 0x16
 4088 002b 00       		.byte	0
 4089 002c 03       		.uleb128 0x3
 4090 002d 0E       		.uleb128 0xe
 4091 002e 3A       		.uleb128 0x3a
 4092 002f 0B       		.uleb128 0xb
 4093 0030 3B       		.uleb128 0x3b
 4094 0031 05       		.uleb128 0x5
 4095 0032 49       		.uleb128 0x49
 4096 0033 13       		.uleb128 0x13
 4097 0034 00       		.byte	0
 4098 0035 00       		.byte	0
 4099 0036 05       		.uleb128 0x5
 4100 0037 35       		.uleb128 0x35
 4101 0038 00       		.byte	0
 4102 0039 49       		.uleb128 0x49
 4103 003a 13       		.uleb128 0x13
 4104 003b 00       		.byte	0
 4105 003c 00       		.byte	0
 4106 003d 06       		.uleb128 0x6
 4107 003e 0F       		.uleb128 0xf
 4108 003f 00       		.byte	0
 4109 0040 0B       		.uleb128 0xb
 4110 0041 0B       		.uleb128 0xb
 4111 0042 49       		.uleb128 0x49
 4112 0043 13       		.uleb128 0x13
 4113 0044 00       		.byte	0
 4114 0045 00       		.byte	0
 4115 0046 07       		.uleb128 0x7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 132


 4116 0047 15       		.uleb128 0x15
 4117 0048 00       		.byte	0
 4118 0049 27       		.uleb128 0x27
 4119 004a 19       		.uleb128 0x19
 4120 004b 00       		.byte	0
 4121 004c 00       		.byte	0
 4122 004d 08       		.uleb128 0x8
 4123 004e 16       		.uleb128 0x16
 4124 004f 00       		.byte	0
 4125 0050 03       		.uleb128 0x3
 4126 0051 0E       		.uleb128 0xe
 4127 0052 3A       		.uleb128 0x3a
 4128 0053 0B       		.uleb128 0xb
 4129 0054 3B       		.uleb128 0x3b
 4130 0055 0B       		.uleb128 0xb
 4131 0056 49       		.uleb128 0x49
 4132 0057 13       		.uleb128 0x13
 4133 0058 00       		.byte	0
 4134 0059 00       		.byte	0
 4135 005a 09       		.uleb128 0x9
 4136 005b 2E       		.uleb128 0x2e
 4137 005c 00       		.byte	0
 4138 005d 3F       		.uleb128 0x3f
 4139 005e 19       		.uleb128 0x19
 4140 005f 03       		.uleb128 0x3
 4141 0060 0E       		.uleb128 0xe
 4142 0061 3A       		.uleb128 0x3a
 4143 0062 0B       		.uleb128 0xb
 4144 0063 3B       		.uleb128 0x3b
 4145 0064 0B       		.uleb128 0xb
 4146 0065 27       		.uleb128 0x27
 4147 0066 19       		.uleb128 0x19
 4148 0067 11       		.uleb128 0x11
 4149 0068 01       		.uleb128 0x1
 4150 0069 12       		.uleb128 0x12
 4151 006a 06       		.uleb128 0x6
 4152 006b 40       		.uleb128 0x40
 4153 006c 18       		.uleb128 0x18
 4154 006d 9742     		.uleb128 0x2117
 4155 006f 19       		.uleb128 0x19
 4156 0070 00       		.byte	0
 4157 0071 00       		.byte	0
 4158 0072 0A       		.uleb128 0xa
 4159 0073 2E       		.uleb128 0x2e
 4160 0074 00       		.byte	0
 4161 0075 3F       		.uleb128 0x3f
 4162 0076 19       		.uleb128 0x19
 4163 0077 03       		.uleb128 0x3
 4164 0078 0E       		.uleb128 0xe
 4165 0079 3A       		.uleb128 0x3a
 4166 007a 0B       		.uleb128 0xb
 4167 007b 3B       		.uleb128 0x3b
 4168 007c 05       		.uleb128 0x5
 4169 007d 27       		.uleb128 0x27
 4170 007e 19       		.uleb128 0x19
 4171 007f 11       		.uleb128 0x11
 4172 0080 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 133


 4173 0081 12       		.uleb128 0x12
 4174 0082 06       		.uleb128 0x6
 4175 0083 40       		.uleb128 0x40
 4176 0084 18       		.uleb128 0x18
 4177 0085 9742     		.uleb128 0x2117
 4178 0087 19       		.uleb128 0x19
 4179 0088 00       		.byte	0
 4180 0089 00       		.byte	0
 4181 008a 0B       		.uleb128 0xb
 4182 008b 2E       		.uleb128 0x2e
 4183 008c 01       		.byte	0x1
 4184 008d 3F       		.uleb128 0x3f
 4185 008e 19       		.uleb128 0x19
 4186 008f 03       		.uleb128 0x3
 4187 0090 0E       		.uleb128 0xe
 4188 0091 3A       		.uleb128 0x3a
 4189 0092 0B       		.uleb128 0xb
 4190 0093 3B       		.uleb128 0x3b
 4191 0094 0B       		.uleb128 0xb
 4192 0095 27       		.uleb128 0x27
 4193 0096 19       		.uleb128 0x19
 4194 0097 11       		.uleb128 0x11
 4195 0098 01       		.uleb128 0x1
 4196 0099 12       		.uleb128 0x12
 4197 009a 06       		.uleb128 0x6
 4198 009b 40       		.uleb128 0x40
 4199 009c 18       		.uleb128 0x18
 4200 009d 9742     		.uleb128 0x2117
 4201 009f 19       		.uleb128 0x19
 4202 00a0 01       		.uleb128 0x1
 4203 00a1 13       		.uleb128 0x13
 4204 00a2 00       		.byte	0
 4205 00a3 00       		.byte	0
 4206 00a4 0C       		.uleb128 0xc
 4207 00a5 898201   		.uleb128 0x4109
 4208 00a8 00       		.byte	0
 4209 00a9 11       		.uleb128 0x11
 4210 00aa 01       		.uleb128 0x1
 4211 00ab 31       		.uleb128 0x31
 4212 00ac 13       		.uleb128 0x13
 4213 00ad 00       		.byte	0
 4214 00ae 00       		.byte	0
 4215 00af 0D       		.uleb128 0xd
 4216 00b0 2E       		.uleb128 0x2e
 4217 00b1 00       		.byte	0
 4218 00b2 3F       		.uleb128 0x3f
 4219 00b3 19       		.uleb128 0x19
 4220 00b4 03       		.uleb128 0x3
 4221 00b5 0E       		.uleb128 0xe
 4222 00b6 3A       		.uleb128 0x3a
 4223 00b7 0B       		.uleb128 0xb
 4224 00b8 3B       		.uleb128 0x3b
 4225 00b9 05       		.uleb128 0x5
 4226 00ba 27       		.uleb128 0x27
 4227 00bb 19       		.uleb128 0x19
 4228 00bc 49       		.uleb128 0x49
 4229 00bd 13       		.uleb128 0x13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 134


 4230 00be 11       		.uleb128 0x11
 4231 00bf 01       		.uleb128 0x1
 4232 00c0 12       		.uleb128 0x12
 4233 00c1 06       		.uleb128 0x6
 4234 00c2 40       		.uleb128 0x40
 4235 00c3 18       		.uleb128 0x18
 4236 00c4 9742     		.uleb128 0x2117
 4237 00c6 19       		.uleb128 0x19
 4238 00c7 00       		.byte	0
 4239 00c8 00       		.byte	0
 4240 00c9 0E       		.uleb128 0xe
 4241 00ca 2E       		.uleb128 0x2e
 4242 00cb 01       		.byte	0x1
 4243 00cc 3F       		.uleb128 0x3f
 4244 00cd 19       		.uleb128 0x19
 4245 00ce 03       		.uleb128 0x3
 4246 00cf 0E       		.uleb128 0xe
 4247 00d0 3A       		.uleb128 0x3a
 4248 00d1 0B       		.uleb128 0xb
 4249 00d2 3B       		.uleb128 0x3b
 4250 00d3 05       		.uleb128 0x5
 4251 00d4 27       		.uleb128 0x27
 4252 00d5 19       		.uleb128 0x19
 4253 00d6 11       		.uleb128 0x11
 4254 00d7 01       		.uleb128 0x1
 4255 00d8 12       		.uleb128 0x12
 4256 00d9 06       		.uleb128 0x6
 4257 00da 40       		.uleb128 0x40
 4258 00db 18       		.uleb128 0x18
 4259 00dc 9742     		.uleb128 0x2117
 4260 00de 19       		.uleb128 0x19
 4261 00df 01       		.uleb128 0x1
 4262 00e0 13       		.uleb128 0x13
 4263 00e1 00       		.byte	0
 4264 00e2 00       		.byte	0
 4265 00e3 0F       		.uleb128 0xf
 4266 00e4 05       		.uleb128 0x5
 4267 00e5 00       		.byte	0
 4268 00e6 03       		.uleb128 0x3
 4269 00e7 0E       		.uleb128 0xe
 4270 00e8 3A       		.uleb128 0x3a
 4271 00e9 0B       		.uleb128 0xb
 4272 00ea 3B       		.uleb128 0x3b
 4273 00eb 05       		.uleb128 0x5
 4274 00ec 49       		.uleb128 0x49
 4275 00ed 13       		.uleb128 0x13
 4276 00ee 02       		.uleb128 0x2
 4277 00ef 17       		.uleb128 0x17
 4278 00f0 00       		.byte	0
 4279 00f1 00       		.byte	0
 4280 00f2 10       		.uleb128 0x10
 4281 00f3 34       		.uleb128 0x34
 4282 00f4 00       		.byte	0
 4283 00f5 03       		.uleb128 0x3
 4284 00f6 0E       		.uleb128 0xe
 4285 00f7 3A       		.uleb128 0x3a
 4286 00f8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 135


 4287 00f9 3B       		.uleb128 0x3b
 4288 00fa 05       		.uleb128 0x5
 4289 00fb 49       		.uleb128 0x49
 4290 00fc 13       		.uleb128 0x13
 4291 00fd 02       		.uleb128 0x2
 4292 00fe 17       		.uleb128 0x17
 4293 00ff 00       		.byte	0
 4294 0100 00       		.byte	0
 4295 0101 11       		.uleb128 0x11
 4296 0102 2E       		.uleb128 0x2e
 4297 0103 01       		.byte	0x1
 4298 0104 3F       		.uleb128 0x3f
 4299 0105 19       		.uleb128 0x19
 4300 0106 03       		.uleb128 0x3
 4301 0107 0E       		.uleb128 0xe
 4302 0108 3A       		.uleb128 0x3a
 4303 0109 0B       		.uleb128 0xb
 4304 010a 3B       		.uleb128 0x3b
 4305 010b 05       		.uleb128 0x5
 4306 010c 27       		.uleb128 0x27
 4307 010d 19       		.uleb128 0x19
 4308 010e 49       		.uleb128 0x49
 4309 010f 13       		.uleb128 0x13
 4310 0110 11       		.uleb128 0x11
 4311 0111 01       		.uleb128 0x1
 4312 0112 12       		.uleb128 0x12
 4313 0113 06       		.uleb128 0x6
 4314 0114 40       		.uleb128 0x40
 4315 0115 18       		.uleb128 0x18
 4316 0116 9742     		.uleb128 0x2117
 4317 0118 19       		.uleb128 0x19
 4318 0119 01       		.uleb128 0x1
 4319 011a 13       		.uleb128 0x13
 4320 011b 00       		.byte	0
 4321 011c 00       		.byte	0
 4322 011d 12       		.uleb128 0x12
 4323 011e 34       		.uleb128 0x34
 4324 011f 00       		.byte	0
 4325 0120 03       		.uleb128 0x3
 4326 0121 0E       		.uleb128 0xe
 4327 0122 3A       		.uleb128 0x3a
 4328 0123 0B       		.uleb128 0xb
 4329 0124 3B       		.uleb128 0x3b
 4330 0125 05       		.uleb128 0x5
 4331 0126 49       		.uleb128 0x49
 4332 0127 13       		.uleb128 0x13
 4333 0128 02       		.uleb128 0x2
 4334 0129 18       		.uleb128 0x18
 4335 012a 00       		.byte	0
 4336 012b 00       		.byte	0
 4337 012c 13       		.uleb128 0x13
 4338 012d 05       		.uleb128 0x5
 4339 012e 00       		.byte	0
 4340 012f 03       		.uleb128 0x3
 4341 0130 0E       		.uleb128 0xe
 4342 0131 3A       		.uleb128 0x3a
 4343 0132 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 136


 4344 0133 3B       		.uleb128 0x3b
 4345 0134 05       		.uleb128 0x5
 4346 0135 49       		.uleb128 0x49
 4347 0136 13       		.uleb128 0x13
 4348 0137 02       		.uleb128 0x2
 4349 0138 18       		.uleb128 0x18
 4350 0139 00       		.byte	0
 4351 013a 00       		.byte	0
 4352 013b 14       		.uleb128 0x14
 4353 013c 34       		.uleb128 0x34
 4354 013d 00       		.byte	0
 4355 013e 03       		.uleb128 0x3
 4356 013f 0E       		.uleb128 0xe
 4357 0140 3A       		.uleb128 0x3a
 4358 0141 0B       		.uleb128 0xb
 4359 0142 3B       		.uleb128 0x3b
 4360 0143 05       		.uleb128 0x5
 4361 0144 49       		.uleb128 0x49
 4362 0145 13       		.uleb128 0x13
 4363 0146 1C       		.uleb128 0x1c
 4364 0147 06       		.uleb128 0x6
 4365 0148 00       		.byte	0
 4366 0149 00       		.byte	0
 4367 014a 15       		.uleb128 0x15
 4368 014b 898201   		.uleb128 0x4109
 4369 014e 01       		.byte	0x1
 4370 014f 11       		.uleb128 0x11
 4371 0150 01       		.uleb128 0x1
 4372 0151 31       		.uleb128 0x31
 4373 0152 13       		.uleb128 0x13
 4374 0153 00       		.byte	0
 4375 0154 00       		.byte	0
 4376 0155 16       		.uleb128 0x16
 4377 0156 8A8201   		.uleb128 0x410a
 4378 0159 00       		.byte	0
 4379 015a 02       		.uleb128 0x2
 4380 015b 18       		.uleb128 0x18
 4381 015c 9142     		.uleb128 0x2111
 4382 015e 18       		.uleb128 0x18
 4383 015f 00       		.byte	0
 4384 0160 00       		.byte	0
 4385 0161 17       		.uleb128 0x17
 4386 0162 898201   		.uleb128 0x4109
 4387 0165 01       		.byte	0x1
 4388 0166 11       		.uleb128 0x11
 4389 0167 01       		.uleb128 0x1
 4390 0168 31       		.uleb128 0x31
 4391 0169 13       		.uleb128 0x13
 4392 016a 01       		.uleb128 0x1
 4393 016b 13       		.uleb128 0x13
 4394 016c 00       		.byte	0
 4395 016d 00       		.byte	0
 4396 016e 18       		.uleb128 0x18
 4397 016f 34       		.uleb128 0x34
 4398 0170 00       		.byte	0
 4399 0171 03       		.uleb128 0x3
 4400 0172 0E       		.uleb128 0xe
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 137


 4401 0173 3A       		.uleb128 0x3a
 4402 0174 0B       		.uleb128 0xb
 4403 0175 3B       		.uleb128 0x3b
 4404 0176 0B       		.uleb128 0xb
 4405 0177 49       		.uleb128 0x49
 4406 0178 13       		.uleb128 0x13
 4407 0179 02       		.uleb128 0x2
 4408 017a 17       		.uleb128 0x17
 4409 017b 00       		.byte	0
 4410 017c 00       		.byte	0
 4411 017d 19       		.uleb128 0x19
 4412 017e 34       		.uleb128 0x34
 4413 017f 00       		.byte	0
 4414 0180 03       		.uleb128 0x3
 4415 0181 0E       		.uleb128 0xe
 4416 0182 3A       		.uleb128 0x3a
 4417 0183 0B       		.uleb128 0xb
 4418 0184 3B       		.uleb128 0x3b
 4419 0185 0B       		.uleb128 0xb
 4420 0186 49       		.uleb128 0x49
 4421 0187 13       		.uleb128 0x13
 4422 0188 02       		.uleb128 0x2
 4423 0189 18       		.uleb128 0x18
 4424 018a 00       		.byte	0
 4425 018b 00       		.byte	0
 4426 018c 1A       		.uleb128 0x1a
 4427 018d 2E       		.uleb128 0x2e
 4428 018e 01       		.byte	0x1
 4429 018f 3F       		.uleb128 0x3f
 4430 0190 19       		.uleb128 0x19
 4431 0191 03       		.uleb128 0x3
 4432 0192 0E       		.uleb128 0xe
 4433 0193 3A       		.uleb128 0x3a
 4434 0194 0B       		.uleb128 0xb
 4435 0195 3B       		.uleb128 0x3b
 4436 0196 05       		.uleb128 0x5
 4437 0197 27       		.uleb128 0x27
 4438 0198 19       		.uleb128 0x19
 4439 0199 11       		.uleb128 0x11
 4440 019a 01       		.uleb128 0x1
 4441 019b 12       		.uleb128 0x12
 4442 019c 06       		.uleb128 0x6
 4443 019d 40       		.uleb128 0x40
 4444 019e 18       		.uleb128 0x18
 4445 019f 9642     		.uleb128 0x2116
 4446 01a1 19       		.uleb128 0x19
 4447 01a2 01       		.uleb128 0x1
 4448 01a3 13       		.uleb128 0x13
 4449 01a4 00       		.byte	0
 4450 01a5 00       		.byte	0
 4451 01a6 1B       		.uleb128 0x1b
 4452 01a7 2E       		.uleb128 0x2e
 4453 01a8 01       		.byte	0x1
 4454 01a9 03       		.uleb128 0x3
 4455 01aa 0E       		.uleb128 0xe
 4456 01ab 3A       		.uleb128 0x3a
 4457 01ac 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 138


 4458 01ad 3B       		.uleb128 0x3b
 4459 01ae 05       		.uleb128 0x5
 4460 01af 27       		.uleb128 0x27
 4461 01b0 19       		.uleb128 0x19
 4462 01b1 11       		.uleb128 0x11
 4463 01b2 01       		.uleb128 0x1
 4464 01b3 12       		.uleb128 0x12
 4465 01b4 06       		.uleb128 0x6
 4466 01b5 40       		.uleb128 0x40
 4467 01b6 18       		.uleb128 0x18
 4468 01b7 9642     		.uleb128 0x2116
 4469 01b9 19       		.uleb128 0x19
 4470 01ba 01       		.uleb128 0x1
 4471 01bb 13       		.uleb128 0x13
 4472 01bc 00       		.byte	0
 4473 01bd 00       		.byte	0
 4474 01be 1C       		.uleb128 0x1c
 4475 01bf 34       		.uleb128 0x34
 4476 01c0 00       		.byte	0
 4477 01c1 03       		.uleb128 0x3
 4478 01c2 08       		.uleb128 0x8
 4479 01c3 3A       		.uleb128 0x3a
 4480 01c4 0B       		.uleb128 0xb
 4481 01c5 3B       		.uleb128 0x3b
 4482 01c6 05       		.uleb128 0x5
 4483 01c7 49       		.uleb128 0x49
 4484 01c8 13       		.uleb128 0x13
 4485 01c9 02       		.uleb128 0x2
 4486 01ca 17       		.uleb128 0x17
 4487 01cb 00       		.byte	0
 4488 01cc 00       		.byte	0
 4489 01cd 1D       		.uleb128 0x1d
 4490 01ce 01       		.uleb128 0x1
 4491 01cf 01       		.byte	0x1
 4492 01d0 49       		.uleb128 0x49
 4493 01d1 13       		.uleb128 0x13
 4494 01d2 01       		.uleb128 0x1
 4495 01d3 13       		.uleb128 0x13
 4496 01d4 00       		.byte	0
 4497 01d5 00       		.byte	0
 4498 01d6 1E       		.uleb128 0x1e
 4499 01d7 21       		.uleb128 0x21
 4500 01d8 00       		.byte	0
 4501 01d9 49       		.uleb128 0x49
 4502 01da 13       		.uleb128 0x13
 4503 01db 2F       		.uleb128 0x2f
 4504 01dc 0B       		.uleb128 0xb
 4505 01dd 00       		.byte	0
 4506 01de 00       		.byte	0
 4507 01df 1F       		.uleb128 0x1f
 4508 01e0 34       		.uleb128 0x34
 4509 01e1 00       		.byte	0
 4510 01e2 03       		.uleb128 0x3
 4511 01e3 0E       		.uleb128 0xe
 4512 01e4 3A       		.uleb128 0x3a
 4513 01e5 0B       		.uleb128 0xb
 4514 01e6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 139


 4515 01e7 0B       		.uleb128 0xb
 4516 01e8 49       		.uleb128 0x49
 4517 01e9 13       		.uleb128 0x13
 4518 01ea 3F       		.uleb128 0x3f
 4519 01eb 19       		.uleb128 0x19
 4520 01ec 02       		.uleb128 0x2
 4521 01ed 18       		.uleb128 0x18
 4522 01ee 00       		.byte	0
 4523 01ef 00       		.byte	0
 4524 01f0 20       		.uleb128 0x20
 4525 01f1 26       		.uleb128 0x26
 4526 01f2 00       		.byte	0
 4527 01f3 49       		.uleb128 0x49
 4528 01f4 13       		.uleb128 0x13
 4529 01f5 00       		.byte	0
 4530 01f6 00       		.byte	0
 4531 01f7 21       		.uleb128 0x21
 4532 01f8 2E       		.uleb128 0x2e
 4533 01f9 00       		.byte	0
 4534 01fa 3F       		.uleb128 0x3f
 4535 01fb 19       		.uleb128 0x19
 4536 01fc 03       		.uleb128 0x3
 4537 01fd 0E       		.uleb128 0xe
 4538 01fe 3A       		.uleb128 0x3a
 4539 01ff 0B       		.uleb128 0xb
 4540 0200 3B       		.uleb128 0x3b
 4541 0201 0B       		.uleb128 0xb
 4542 0202 27       		.uleb128 0x27
 4543 0203 19       		.uleb128 0x19
 4544 0204 49       		.uleb128 0x49
 4545 0205 13       		.uleb128 0x13
 4546 0206 3C       		.uleb128 0x3c
 4547 0207 19       		.uleb128 0x19
 4548 0208 00       		.byte	0
 4549 0209 00       		.byte	0
 4550 020a 22       		.uleb128 0x22
 4551 020b 2E       		.uleb128 0x2e
 4552 020c 01       		.byte	0x1
 4553 020d 3F       		.uleb128 0x3f
 4554 020e 19       		.uleb128 0x19
 4555 020f 03       		.uleb128 0x3
 4556 0210 0E       		.uleb128 0xe
 4557 0211 3A       		.uleb128 0x3a
 4558 0212 0B       		.uleb128 0xb
 4559 0213 3B       		.uleb128 0x3b
 4560 0214 0B       		.uleb128 0xb
 4561 0215 27       		.uleb128 0x27
 4562 0216 19       		.uleb128 0x19
 4563 0217 3C       		.uleb128 0x3c
 4564 0218 19       		.uleb128 0x19
 4565 0219 01       		.uleb128 0x1
 4566 021a 13       		.uleb128 0x13
 4567 021b 00       		.byte	0
 4568 021c 00       		.byte	0
 4569 021d 23       		.uleb128 0x23
 4570 021e 05       		.uleb128 0x5
 4571 021f 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 140


 4572 0220 49       		.uleb128 0x49
 4573 0221 13       		.uleb128 0x13
 4574 0222 00       		.byte	0
 4575 0223 00       		.byte	0
 4576 0224 24       		.uleb128 0x24
 4577 0225 2E       		.uleb128 0x2e
 4578 0226 01       		.byte	0x1
 4579 0227 3F       		.uleb128 0x3f
 4580 0228 19       		.uleb128 0x19
 4581 0229 03       		.uleb128 0x3
 4582 022a 0E       		.uleb128 0xe
 4583 022b 3A       		.uleb128 0x3a
 4584 022c 0B       		.uleb128 0xb
 4585 022d 3B       		.uleb128 0x3b
 4586 022e 0B       		.uleb128 0xb
 4587 022f 27       		.uleb128 0x27
 4588 0230 19       		.uleb128 0x19
 4589 0231 3C       		.uleb128 0x3c
 4590 0232 19       		.uleb128 0x19
 4591 0233 00       		.byte	0
 4592 0234 00       		.byte	0
 4593 0235 00       		.byte	0
 4594              		.section	.debug_loc,"",%progbits
 4595              	.Ldebug_loc0:
 4596              	.LLST0:
 4597 0000 00000000 		.4byte	.LVL1
 4598 0004 07000000 		.4byte	.LVL2-1
 4599 0008 0100     		.2byte	0x1
 4600 000a 50       		.byte	0x50
 4601 000b 07000000 		.4byte	.LVL2-1
 4602 000f 1A000000 		.4byte	.LVL6
 4603 0013 0100     		.2byte	0x1
 4604 0015 54       		.byte	0x54
 4605 0016 1A000000 		.4byte	.LVL6
 4606 001a 20000000 		.4byte	.LFE6
 4607 001e 0400     		.2byte	0x4
 4608 0020 F3       		.byte	0xf3
 4609 0021 01       		.uleb128 0x1
 4610 0022 50       		.byte	0x50
 4611 0023 9F       		.byte	0x9f
 4612 0024 00000000 		.4byte	0
 4613 0028 00000000 		.4byte	0
 4614              	.LLST1:
 4615 002c 08000000 		.4byte	.LVL2
 4616 0030 19000000 		.4byte	.LVL5-1
 4617 0034 0100     		.2byte	0x1
 4618 0036 50       		.byte	0x50
 4619 0037 00000000 		.4byte	0
 4620 003b 00000000 		.4byte	0
 4621              	.LLST2:
 4622 003f 10000000 		.4byte	.LVL3
 4623 0043 14000000 		.4byte	.LVL4
 4624 0047 0100     		.2byte	0x1
 4625 0049 52       		.byte	0x52
 4626 004a 14000000 		.4byte	.LVL4
 4627 004e 19000000 		.4byte	.LVL5-1
 4628 0052 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 141


 4629 0054 53       		.byte	0x53
 4630 0055 00000000 		.4byte	0
 4631 0059 00000000 		.4byte	0
 4632              	.LLST3:
 4633 005d 06000000 		.4byte	.LVL7
 4634 0061 11000000 		.4byte	.LVL9-1
 4635 0065 0100     		.2byte	0x1
 4636 0067 50       		.byte	0x50
 4637 0068 00000000 		.4byte	0
 4638 006c 00000000 		.4byte	0
 4639              	.LLST4:
 4640 0070 0E000000 		.4byte	.LVL8
 4641 0074 14000000 		.4byte	.LVL10
 4642 0078 0100     		.2byte	0x1
 4643 007a 54       		.byte	0x54
 4644 007b 14000000 		.4byte	.LVL10
 4645 007f 1C000000 		.4byte	.LFE7
 4646 0083 0100     		.2byte	0x1
 4647 0085 50       		.byte	0x50
 4648 0086 00000000 		.4byte	0
 4649 008a 00000000 		.4byte	0
 4650              	.LLST5:
 4651 008e 00000000 		.4byte	.LVL11
 4652 0092 07000000 		.4byte	.LVL12-1
 4653 0096 0100     		.2byte	0x1
 4654 0098 50       		.byte	0x50
 4655 0099 07000000 		.4byte	.LVL12-1
 4656 009d 0A000000 		.4byte	.LVL13
 4657 00a1 0100     		.2byte	0x1
 4658 00a3 54       		.byte	0x54
 4659 00a4 0A000000 		.4byte	.LVL13
 4660 00a8 24000000 		.4byte	.LFE8
 4661 00ac 0400     		.2byte	0x4
 4662 00ae F3       		.byte	0xf3
 4663 00af 01       		.uleb128 0x1
 4664 00b0 50       		.byte	0x50
 4665 00b1 9F       		.byte	0x9f
 4666 00b2 00000000 		.4byte	0
 4667 00b6 00000000 		.4byte	0
 4668              	.LLST6:
 4669 00ba 08000000 		.4byte	.LVL12
 4670 00be 1D000000 		.4byte	.LVL14-1
 4671 00c2 0100     		.2byte	0x1
 4672 00c4 50       		.byte	0x50
 4673 00c5 00000000 		.4byte	0
 4674 00c9 00000000 		.4byte	0
 4675              	.LLST7:
 4676 00cd 00000000 		.4byte	.LVL15
 4677 00d1 07000000 		.4byte	.LVL16-1
 4678 00d5 0100     		.2byte	0x1
 4679 00d7 50       		.byte	0x50
 4680 00d8 07000000 		.4byte	.LVL16-1
 4681 00dc 14000000 		.4byte	.LVL17
 4682 00e0 0100     		.2byte	0x1
 4683 00e2 54       		.byte	0x54
 4684 00e3 14000000 		.4byte	.LVL17
 4685 00e7 24000000 		.4byte	.LFE10
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 142


 4686 00eb 0400     		.2byte	0x4
 4687 00ed F3       		.byte	0xf3
 4688 00ee 01       		.uleb128 0x1
 4689 00ef 50       		.byte	0x50
 4690 00f0 9F       		.byte	0x9f
 4691 00f1 00000000 		.4byte	0
 4692 00f5 00000000 		.4byte	0
 4693              	.LLST8:
 4694 00f9 08000000 		.4byte	.LVL16
 4695 00fd 1D000000 		.4byte	.LVL18-1
 4696 0101 0100     		.2byte	0x1
 4697 0103 50       		.byte	0x50
 4698 0104 00000000 		.4byte	0
 4699 0108 00000000 		.4byte	0
 4700              	.LLST9:
 4701 010c 00000000 		.4byte	.LVL19
 4702 0110 04000000 		.4byte	.LVL20
 4703 0114 0100     		.2byte	0x1
 4704 0116 50       		.byte	0x50
 4705 0117 04000000 		.4byte	.LVL20
 4706 011b 14000000 		.4byte	.LFE11
 4707 011f 0100     		.2byte	0x1
 4708 0121 52       		.byte	0x52
 4709 0122 00000000 		.4byte	0
 4710 0126 00000000 		.4byte	0
 4711              	.LLST10:
 4712 012a 00000000 		.4byte	.LVL25
 4713 012e 04000000 		.4byte	.LVL26
 4714 0132 0100     		.2byte	0x1
 4715 0134 50       		.byte	0x50
 4716 0135 04000000 		.4byte	.LVL26
 4717 0139 14000000 		.4byte	.LFE20
 4718 013d 0400     		.2byte	0x4
 4719 013f F3       		.byte	0xf3
 4720 0140 01       		.uleb128 0x1
 4721 0141 50       		.byte	0x50
 4722 0142 9F       		.byte	0x9f
 4723 0143 00000000 		.4byte	0
 4724 0147 00000000 		.4byte	0
 4725              	.LLST11:
 4726 014b 00000000 		.4byte	.LVL27
 4727 014f 08000000 		.4byte	.LVL28
 4728 0153 0100     		.2byte	0x1
 4729 0155 50       		.byte	0x50
 4730 0156 08000000 		.4byte	.LVL28
 4731 015a 18000000 		.4byte	.LFE21
 4732 015e 0400     		.2byte	0x4
 4733 0160 F3       		.byte	0xf3
 4734 0161 01       		.uleb128 0x1
 4735 0162 50       		.byte	0x50
 4736 0163 9F       		.byte	0x9f
 4737 0164 00000000 		.4byte	0
 4738 0168 00000000 		.4byte	0
 4739              	.LLST12:
 4740 016c 00000000 		.4byte	.LVL29
 4741 0170 04000000 		.4byte	.LVL30
 4742 0174 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 143


 4743 0176 50       		.byte	0x50
 4744 0177 04000000 		.4byte	.LVL30
 4745 017b 14000000 		.4byte	.LFE22
 4746 017f 0400     		.2byte	0x4
 4747 0181 F3       		.byte	0xf3
 4748 0182 01       		.uleb128 0x1
 4749 0183 50       		.byte	0x50
 4750 0184 9F       		.byte	0x9f
 4751 0185 00000000 		.4byte	0
 4752 0189 00000000 		.4byte	0
 4753              	.LLST13:
 4754 018d 00000000 		.4byte	.LVL31
 4755 0191 04000000 		.4byte	.LVL32
 4756 0195 0100     		.2byte	0x1
 4757 0197 50       		.byte	0x50
 4758 0198 04000000 		.4byte	.LVL32
 4759 019c 14000000 		.4byte	.LFE23
 4760 01a0 0400     		.2byte	0x4
 4761 01a2 F3       		.byte	0xf3
 4762 01a3 01       		.uleb128 0x1
 4763 01a4 50       		.byte	0x50
 4764 01a5 9F       		.byte	0x9f
 4765 01a6 00000000 		.4byte	0
 4766 01aa 00000000 		.4byte	0
 4767              	.LLST14:
 4768 01ae 00000000 		.4byte	.LVL33
 4769 01b2 04000000 		.4byte	.LVL34
 4770 01b6 0100     		.2byte	0x1
 4771 01b8 50       		.byte	0x50
 4772 01b9 04000000 		.4byte	.LVL34
 4773 01bd 14000000 		.4byte	.LFE24
 4774 01c1 0400     		.2byte	0x4
 4775 01c3 F3       		.byte	0xf3
 4776 01c4 01       		.uleb128 0x1
 4777 01c5 50       		.byte	0x50
 4778 01c6 9F       		.byte	0x9f
 4779 01c7 00000000 		.4byte	0
 4780 01cb 00000000 		.4byte	0
 4781              	.LLST15:
 4782 01cf 00000000 		.4byte	.LVL36
 4783 01d3 0C000000 		.4byte	.LVL38
 4784 01d7 0100     		.2byte	0x1
 4785 01d9 50       		.byte	0x50
 4786 01da 0C000000 		.4byte	.LVL38
 4787 01de 20000000 		.4byte	.LFE14
 4788 01e2 0400     		.2byte	0x4
 4789 01e4 F3       		.byte	0xf3
 4790 01e5 01       		.uleb128 0x1
 4791 01e6 50       		.byte	0x50
 4792 01e7 9F       		.byte	0x9f
 4793 01e8 00000000 		.4byte	0
 4794 01ec 00000000 		.4byte	0
 4795              	.LLST16:
 4796 01f0 00000000 		.4byte	.LVL36
 4797 01f4 0F000000 		.4byte	.LVL39-1
 4798 01f8 0100     		.2byte	0x1
 4799 01fa 51       		.byte	0x51
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 144


 4800 01fb 0F000000 		.4byte	.LVL39-1
 4801 01ff 1E000000 		.4byte	.LVL41
 4802 0203 0100     		.2byte	0x1
 4803 0205 55       		.byte	0x55
 4804 0206 1E000000 		.4byte	.LVL41
 4805 020a 20000000 		.4byte	.LFE14
 4806 020e 0400     		.2byte	0x4
 4807 0210 F3       		.byte	0xf3
 4808 0211 01       		.uleb128 0x1
 4809 0212 51       		.byte	0x51
 4810 0213 9F       		.byte	0x9f
 4811 0214 00000000 		.4byte	0
 4812 0218 00000000 		.4byte	0
 4813              	.LLST17:
 4814 021c 00000000 		.4byte	.LVL42
 4815 0220 0A000000 		.4byte	.LVL44
 4816 0224 0100     		.2byte	0x1
 4817 0226 50       		.byte	0x50
 4818 0227 0A000000 		.4byte	.LVL44
 4819 022b 1C000000 		.4byte	.LFE15
 4820 022f 0400     		.2byte	0x4
 4821 0231 F3       		.byte	0xf3
 4822 0232 01       		.uleb128 0x1
 4823 0233 50       		.byte	0x50
 4824 0234 9F       		.byte	0x9f
 4825 0235 00000000 		.4byte	0
 4826 0239 00000000 		.4byte	0
 4827              	.LLST18:
 4828 023d 00000000 		.4byte	.LVL46
 4829 0241 0C000000 		.4byte	.LVL48
 4830 0245 0100     		.2byte	0x1
 4831 0247 50       		.byte	0x50
 4832 0248 0C000000 		.4byte	.LVL48
 4833 024c 24000000 		.4byte	.LFE16
 4834 0250 0400     		.2byte	0x4
 4835 0252 F3       		.byte	0xf3
 4836 0253 01       		.uleb128 0x1
 4837 0254 50       		.byte	0x50
 4838 0255 9F       		.byte	0x9f
 4839 0256 00000000 		.4byte	0
 4840 025a 00000000 		.4byte	0
 4841              	.LLST19:
 4842 025e 00000000 		.4byte	.LVL46
 4843 0262 0F000000 		.4byte	.LVL49-1
 4844 0266 0100     		.2byte	0x1
 4845 0268 51       		.byte	0x51
 4846 0269 0F000000 		.4byte	.LVL49-1
 4847 026d 1C000000 		.4byte	.LVL51
 4848 0271 0100     		.2byte	0x1
 4849 0273 55       		.byte	0x55
 4850 0274 1C000000 		.4byte	.LVL51
 4851 0278 24000000 		.4byte	.LFE16
 4852 027c 0400     		.2byte	0x4
 4853 027e F3       		.byte	0xf3
 4854 027f 01       		.uleb128 0x1
 4855 0280 51       		.byte	0x51
 4856 0281 9F       		.byte	0x9f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 145


 4857 0282 00000000 		.4byte	0
 4858 0286 00000000 		.4byte	0
 4859              	.LLST20:
 4860 028a 00000000 		.4byte	.LVL52
 4861 028e 0A000000 		.4byte	.LVL54
 4862 0292 0100     		.2byte	0x1
 4863 0294 50       		.byte	0x50
 4864 0295 0A000000 		.4byte	.LVL54
 4865 0299 20000000 		.4byte	.LFE17
 4866 029d 0400     		.2byte	0x4
 4867 029f F3       		.byte	0xf3
 4868 02a0 01       		.uleb128 0x1
 4869 02a1 50       		.byte	0x50
 4870 02a2 9F       		.byte	0x9f
 4871 02a3 00000000 		.4byte	0
 4872 02a7 00000000 		.4byte	0
 4873              	.LLST21:
 4874 02ab 00000000 		.4byte	.LVL56
 4875 02af 0C000000 		.4byte	.LVL57
 4876 02b3 0100     		.2byte	0x1
 4877 02b5 50       		.byte	0x50
 4878 02b6 0C000000 		.4byte	.LVL57
 4879 02ba 4C000000 		.4byte	.LFE18
 4880 02be 0400     		.2byte	0x4
 4881 02c0 F3       		.byte	0xf3
 4882 02c1 01       		.uleb128 0x1
 4883 02c2 50       		.byte	0x50
 4884 02c3 9F       		.byte	0x9f
 4885 02c4 00000000 		.4byte	0
 4886 02c8 00000000 		.4byte	0
 4887              	.LLST22:
 4888 02cc 00000000 		.4byte	.LVL56
 4889 02d0 0F000000 		.4byte	.LVL58-1
 4890 02d4 0100     		.2byte	0x1
 4891 02d6 51       		.byte	0x51
 4892 02d7 0F000000 		.4byte	.LVL58-1
 4893 02db 4C000000 		.4byte	.LFE18
 4894 02df 0400     		.2byte	0x4
 4895 02e1 F3       		.byte	0xf3
 4896 02e2 01       		.uleb128 0x1
 4897 02e3 51       		.byte	0x51
 4898 02e4 9F       		.byte	0x9f
 4899 02e5 00000000 		.4byte	0
 4900 02e9 00000000 		.4byte	0
 4901              	.LLST23:
 4902 02ed 26000000 		.4byte	.LVL61
 4903 02f1 43000000 		.4byte	.LVL66-1
 4904 02f5 0100     		.2byte	0x1
 4905 02f7 50       		.byte	0x50
 4906 02f8 00000000 		.4byte	0
 4907 02fc 00000000 		.4byte	0
 4908              	.LLST24:
 4909 0300 22000000 		.4byte	.LVL60
 4910 0304 3C000000 		.4byte	.LVL64
 4911 0308 0100     		.2byte	0x1
 4912 030a 55       		.byte	0x55
 4913 030b 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 146


 4914 030f 00000000 		.4byte	0
 4915              	.LLST25:
 4916 0313 32000000 		.4byte	.LVL62
 4917 0317 3E000000 		.4byte	.LVL65
 4918 031b 0100     		.2byte	0x1
 4919 031d 53       		.byte	0x53
 4920 031e 3E000000 		.4byte	.LVL65
 4921 0322 44000000 		.4byte	.LVL67
 4922 0326 0100     		.2byte	0x1
 4923 0328 55       		.byte	0x55
 4924 0329 00000000 		.4byte	0
 4925 032d 00000000 		.4byte	0
 4926              	.LLST26:
 4927 0331 00000000 		.4byte	.LVL68
 4928 0335 0A000000 		.4byte	.LVL69
 4929 0339 0100     		.2byte	0x1
 4930 033b 50       		.byte	0x50
 4931 033c 0A000000 		.4byte	.LVL69
 4932 0340 2C000000 		.4byte	.LFE19
 4933 0344 0400     		.2byte	0x4
 4934 0346 F3       		.byte	0xf3
 4935 0347 01       		.uleb128 0x1
 4936 0348 50       		.byte	0x50
 4937 0349 9F       		.byte	0x9f
 4938 034a 00000000 		.4byte	0
 4939 034e 00000000 		.4byte	0
 4940              	.LLST27:
 4941 0352 24000000 		.4byte	.LVL71
 4942 0356 26000000 		.4byte	.LVL72
 4943 035a 0100     		.2byte	0x1
 4944 035c 50       		.byte	0x50
 4945 035d 00000000 		.4byte	0
 4946 0361 00000000 		.4byte	0
 4947              	.LLST28:
 4948 0365 00000000 		.4byte	.LVL73
 4949 0369 06000000 		.4byte	.LVL74
 4950 036d 0100     		.2byte	0x1
 4951 036f 50       		.byte	0x50
 4952 0370 06000000 		.4byte	.LVL74
 4953 0374 26000000 		.4byte	.LVL78
 4954 0378 0100     		.2byte	0x1
 4955 037a 54       		.byte	0x54
 4956 037b 00000000 		.4byte	0
 4957 037f 00000000 		.4byte	0
 4958              	.LLST29:
 4959 0383 2C000000 		.4byte	.LVL83
 4960 0387 56000000 		.4byte	.LVL87
 4961 038b 0100     		.2byte	0x1
 4962 038d 52       		.byte	0x52
 4963 038e 5A000000 		.4byte	.LVL89
 4964 0392 62000000 		.4byte	.LVL90
 4965 0396 0100     		.2byte	0x1
 4966 0398 52       		.byte	0x52
 4967 0399 62000000 		.4byte	.LVL90
 4968 039d 72000000 		.4byte	.LVL94
 4969 03a1 0300     		.2byte	0x3
 4970 03a3 72       		.byte	0x72
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 147


 4971 03a4 1A       		.sleb128 26
 4972 03a5 9F       		.byte	0x9f
 4973 03a6 00000000 		.4byte	0
 4974 03aa 00000000 		.4byte	0
 4975              	.LLST30:
 4976 03ae 12000000 		.4byte	.LVL82
 4977 03b2 9E000000 		.4byte	.LVL99
 4978 03b6 0100     		.2byte	0x1
 4979 03b8 54       		.byte	0x54
 4980 03b9 00000000 		.4byte	0
 4981 03bd 00000000 		.4byte	0
 4982              	.LLST31:
 4983 03c1 34000000 		.4byte	.LVL84
 4984 03c5 4A000000 		.4byte	.LVL85
 4985 03c9 0100     		.2byte	0x1
 4986 03cb 51       		.byte	0x51
 4987 03cc 4A000000 		.4byte	.LVL85
 4988 03d0 50000000 		.4byte	.LVL86
 4989 03d4 0100     		.2byte	0x1
 4990 03d6 53       		.byte	0x53
 4991 03d7 50000000 		.4byte	.LVL86
 4992 03db 58000000 		.4byte	.LVL88
 4993 03df 0100     		.2byte	0x1
 4994 03e1 51       		.byte	0x51
 4995 03e2 58000000 		.4byte	.LVL88
 4996 03e6 5A000000 		.4byte	.LVL89
 4997 03ea 0100     		.2byte	0x1
 4998 03ec 53       		.byte	0x53
 4999 03ed 5A000000 		.4byte	.LVL89
 5000 03f1 72000000 		.4byte	.LVL94
 5001 03f5 0100     		.2byte	0x1
 5002 03f7 51       		.byte	0x51
 5003 03f8 72000000 		.4byte	.LVL94
 5004 03fc 7A000000 		.4byte	.LVL95
 5005 0400 0100     		.2byte	0x1
 5006 0402 53       		.byte	0x53
 5007 0403 7A000000 		.4byte	.LVL95
 5008 0407 7C000000 		.4byte	.LVL96
 5009 040b 0200     		.2byte	0x2
 5010 040d 72       		.byte	0x72
 5011 040e 00       		.sleb128 0
 5012 040f 00000000 		.4byte	0
 5013 0413 00000000 		.4byte	0
 5014              	.LLST32:
 5015 0417 04000000 		.4byte	.LVL79
 5016 041b 68000000 		.4byte	.LVL91
 5017 041f 0200     		.2byte	0x2
 5018 0421 30       		.byte	0x30
 5019 0422 9F       		.byte	0x9f
 5020 0423 6E000000 		.4byte	.LVL92
 5021 0427 70000000 		.4byte	.LVL93
 5022 042b 0100     		.2byte	0x1
 5023 042d 53       		.byte	0x53
 5024 042e 00000000 		.4byte	0
 5025 0432 00000000 		.4byte	0
 5026              	.LLST33:
 5027 0436 00000000 		.4byte	.LVL100
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 148


 5028 043a 25000000 		.4byte	.LVL102-1
 5029 043e 0100     		.2byte	0x1
 5030 0440 50       		.byte	0x50
 5031 0441 25000000 		.4byte	.LVL102-1
 5032 0445 A0000000 		.4byte	.LVL115
 5033 0449 0100     		.2byte	0x1
 5034 044b 54       		.byte	0x54
 5035 044c A0000000 		.4byte	.LVL115
 5036 0450 B6000000 		.4byte	.LVL118
 5037 0454 0400     		.2byte	0x4
 5038 0456 F3       		.byte	0xf3
 5039 0457 01       		.uleb128 0x1
 5040 0458 50       		.byte	0x50
 5041 0459 9F       		.byte	0x9f
 5042 045a B6000000 		.4byte	.LVL118
 5043 045e B8000000 		.4byte	.LVL119
 5044 0462 0100     		.2byte	0x1
 5045 0464 50       		.byte	0x50
 5046 0465 B8000000 		.4byte	.LVL119
 5047 0469 BC000000 		.4byte	.LVL120
 5048 046d 0100     		.2byte	0x1
 5049 046f 54       		.byte	0x54
 5050 0470 BC000000 		.4byte	.LVL120
 5051 0474 D8000000 		.4byte	.LFE9
 5052 0478 0400     		.2byte	0x4
 5053 047a F3       		.byte	0xf3
 5054 047b 01       		.uleb128 0x1
 5055 047c 50       		.byte	0x50
 5056 047d 9F       		.byte	0x9f
 5057 047e 00000000 		.4byte	0
 5058 0482 00000000 		.4byte	0
 5059              	.LLST34:
 5060 0486 28000000 		.4byte	.LVL103
 5061 048a 44000000 		.4byte	.LVL109
 5062 048e 0200     		.2byte	0x2
 5063 0490 91       		.byte	0x91
 5064 0491 64       		.sleb128 -28
 5065 0492 00000000 		.4byte	0
 5066 0496 00000000 		.4byte	0
 5067              	.LLST35:
 5068 049a 4C000000 		.4byte	.LVL110
 5069 049e 54000000 		.4byte	.LVL111
 5070 04a2 0100     		.2byte	0x1
 5071 04a4 53       		.byte	0x53
 5072 04a5 54000000 		.4byte	.LVL111
 5073 04a9 58000000 		.4byte	.LVL112
 5074 04ad 0700     		.2byte	0x7
 5075 04af 0C       		.byte	0xc
 5076 04b0 0C0F0340 		.4byte	0x40030f0c
 5077 04b4 06       		.byte	0x6
 5078 04b5 9F       		.byte	0x9f
 5079 04b6 00000000 		.4byte	0
 5080 04ba 00000000 		.4byte	0
 5081              	.LLST36:
 5082 04be 06000000 		.4byte	.LVL101
 5083 04c2 30000000 		.4byte	.LVL105
 5084 04c6 0200     		.2byte	0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 149


 5085 04c8 30       		.byte	0x30
 5086 04c9 9F       		.byte	0x9f
 5087 04ca 30000000 		.4byte	.LVL105
 5088 04ce 38000000 		.4byte	.LVL107
 5089 04d2 0200     		.2byte	0x2
 5090 04d4 31       		.byte	0x31
 5091 04d5 9F       		.byte	0x9f
 5092 04d6 38000000 		.4byte	.LVL107
 5093 04da 3A000000 		.4byte	.LVL108
 5094 04de 0200     		.2byte	0x2
 5095 04e0 30       		.byte	0x30
 5096 04e1 9F       		.byte	0x9f
 5097 04e2 3A000000 		.4byte	.LVL108
 5098 04e6 B6000000 		.4byte	.LVL118
 5099 04ea 0100     		.2byte	0x1
 5100 04ec 56       		.byte	0x56
 5101 04ed B6000000 		.4byte	.LVL118
 5102 04f1 BC000000 		.4byte	.LVL120
 5103 04f5 0200     		.2byte	0x2
 5104 04f7 30       		.byte	0x30
 5105 04f8 9F       		.byte	0x9f
 5106 04f9 00000000 		.4byte	0
 5107 04fd 00000000 		.4byte	0
 5108              	.LLST37:
 5109 0501 00000000 		.4byte	.LVL121
 5110 0505 08000000 		.4byte	.LVL122
 5111 0509 0100     		.2byte	0x1
 5112 050b 50       		.byte	0x50
 5113 050c 08000000 		.4byte	.LVL122
 5114 0510 14000000 		.4byte	.LFE28
 5115 0514 0400     		.2byte	0x4
 5116 0516 F3       		.byte	0xf3
 5117 0517 01       		.uleb128 0x1
 5118 0518 50       		.byte	0x50
 5119 0519 9F       		.byte	0x9f
 5120 051a 00000000 		.4byte	0
 5121 051e 00000000 		.4byte	0
 5122              	.LLST38:
 5123 0522 00000000 		.4byte	.LVL124
 5124 0526 1A000000 		.4byte	.LVL125
 5125 052a 0100     		.2byte	0x1
 5126 052c 50       		.byte	0x50
 5127 052d 1A000000 		.4byte	.LVL125
 5128 0531 4C000000 		.4byte	.LFE29
 5129 0535 0400     		.2byte	0x4
 5130 0537 F3       		.byte	0xf3
 5131 0538 01       		.uleb128 0x1
 5132 0539 50       		.byte	0x50
 5133 053a 9F       		.byte	0x9f
 5134 053b 00000000 		.4byte	0
 5135 053f 00000000 		.4byte	0
 5136              	.LLST39:
 5137 0543 00000000 		.4byte	.LVL129
 5138 0547 02000000 		.4byte	.LVL130
 5139 054b 0100     		.2byte	0x1
 5140 054d 50       		.byte	0x50
 5141 054e 02000000 		.4byte	.LVL130
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 150


 5142 0552 10000000 		.4byte	.LFE36
 5143 0556 0400     		.2byte	0x4
 5144 0558 F3       		.byte	0xf3
 5145 0559 01       		.uleb128 0x1
 5146 055a 50       		.byte	0x50
 5147 055b 9F       		.byte	0x9f
 5148 055c 00000000 		.4byte	0
 5149 0560 00000000 		.4byte	0
 5150              	.LLST40:
 5151 0564 0C000000 		.4byte	.LVL133
 5152 0568 1C000000 		.4byte	.LVL136
 5153 056c 0100     		.2byte	0x1
 5154 056e 54       		.byte	0x54
 5155 056f 1E000000 		.4byte	.LVL137
 5156 0573 22000000 		.4byte	.LVL138
 5157 0577 0100     		.2byte	0x1
 5158 0579 54       		.byte	0x54
 5159 057a 00000000 		.4byte	0
 5160 057e 00000000 		.4byte	0
 5161              	.LLST41:
 5162 0582 02000000 		.4byte	.LVL139
 5163 0586 06000000 		.4byte	.LVL140
 5164 058a 0200     		.2byte	0x2
 5165 058c 30       		.byte	0x30
 5166 058d 9F       		.byte	0x9f
 5167 058e 06000000 		.4byte	.LVL140
 5168 0592 1B000000 		.4byte	.LVL142-1
 5169 0596 0100     		.2byte	0x1
 5170 0598 53       		.byte	0x53
 5171 0599 00000000 		.4byte	0
 5172 059d 00000000 		.4byte	0
 5173              	.LLST42:
 5174 05a1 00000000 		.4byte	.LVL150
 5175 05a5 06000000 		.4byte	.LVL151
 5176 05a9 0100     		.2byte	0x1
 5177 05ab 50       		.byte	0x50
 5178 05ac 06000000 		.4byte	.LVL151
 5179 05b0 10000000 		.4byte	.LFE42
 5180 05b4 0400     		.2byte	0x4
 5181 05b6 F3       		.byte	0xf3
 5182 05b7 01       		.uleb128 0x1
 5183 05b8 50       		.byte	0x50
 5184 05b9 9F       		.byte	0x9f
 5185 05ba 00000000 		.4byte	0
 5186 05be 00000000 		.4byte	0
 5187              	.LLST43:
 5188 05c2 00000000 		.4byte	.LVL152
 5189 05c6 02000000 		.4byte	.LVL153
 5190 05ca 0100     		.2byte	0x1
 5191 05cc 50       		.byte	0x50
 5192 05cd 02000000 		.4byte	.LVL153
 5193 05d1 0C000000 		.4byte	.LFE43
 5194 05d5 0400     		.2byte	0x4
 5195 05d7 F3       		.byte	0xf3
 5196 05d8 01       		.uleb128 0x1
 5197 05d9 50       		.byte	0x50
 5198 05da 9F       		.byte	0x9f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 151


 5199 05db 00000000 		.4byte	0
 5200 05df 00000000 		.4byte	0
 5201              	.LLST44:
 5202 05e3 00000000 		.4byte	.LVL155
 5203 05e7 0A000000 		.4byte	.LVL157
 5204 05eb 0100     		.2byte	0x1
 5205 05ed 50       		.byte	0x50
 5206 05ee 0A000000 		.4byte	.LVL157
 5207 05f2 20000000 		.4byte	.LFE46
 5208 05f6 0400     		.2byte	0x4
 5209 05f8 F3       		.byte	0xf3
 5210 05f9 01       		.uleb128 0x1
 5211 05fa 50       		.byte	0x50
 5212 05fb 9F       		.byte	0x9f
 5213 05fc 00000000 		.4byte	0
 5214 0600 00000000 		.4byte	0
 5215              	.LLST45:
 5216 0604 08000000 		.4byte	.LVL156
 5217 0608 12000000 		.4byte	.LVL158
 5218 060c 0100     		.2byte	0x1
 5219 060e 53       		.byte	0x53
 5220 060f 12000000 		.4byte	.LVL158
 5221 0613 20000000 		.4byte	.LFE46
 5222 0617 0100     		.2byte	0x1
 5223 0619 50       		.byte	0x50
 5224 061a 00000000 		.4byte	0
 5225 061e 00000000 		.4byte	0
 5226              	.LLST46:
 5227 0622 00000000 		.4byte	.LVL159
 5228 0626 0A000000 		.4byte	.LVL161
 5229 062a 0100     		.2byte	0x1
 5230 062c 50       		.byte	0x50
 5231 062d 0A000000 		.4byte	.LVL161
 5232 0631 20000000 		.4byte	.LFE47
 5233 0635 0400     		.2byte	0x4
 5234 0637 F3       		.byte	0xf3
 5235 0638 01       		.uleb128 0x1
 5236 0639 50       		.byte	0x50
 5237 063a 9F       		.byte	0x9f
 5238 063b 00000000 		.4byte	0
 5239 063f 00000000 		.4byte	0
 5240              	.LLST47:
 5241 0643 08000000 		.4byte	.LVL160
 5242 0647 12000000 		.4byte	.LVL162
 5243 064b 0100     		.2byte	0x1
 5244 064d 53       		.byte	0x53
 5245 064e 12000000 		.4byte	.LVL162
 5246 0652 20000000 		.4byte	.LFE47
 5247 0656 0100     		.2byte	0x1
 5248 0658 50       		.byte	0x50
 5249 0659 00000000 		.4byte	0
 5250 065d 00000000 		.4byte	0
 5251              	.LLST48:
 5252 0661 00000000 		.4byte	.LVL163
 5253 0665 0A000000 		.4byte	.LVL165
 5254 0669 0100     		.2byte	0x1
 5255 066b 50       		.byte	0x50
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 152


 5256 066c 0A000000 		.4byte	.LVL165
 5257 0670 20000000 		.4byte	.LFE48
 5258 0674 0400     		.2byte	0x4
 5259 0676 F3       		.byte	0xf3
 5260 0677 01       		.uleb128 0x1
 5261 0678 50       		.byte	0x50
 5262 0679 9F       		.byte	0x9f
 5263 067a 00000000 		.4byte	0
 5264 067e 00000000 		.4byte	0
 5265              	.LLST49:
 5266 0682 08000000 		.4byte	.LVL164
 5267 0686 12000000 		.4byte	.LVL166
 5268 068a 0100     		.2byte	0x1
 5269 068c 53       		.byte	0x53
 5270 068d 12000000 		.4byte	.LVL166
 5271 0691 20000000 		.4byte	.LFE48
 5272 0695 0100     		.2byte	0x1
 5273 0697 50       		.byte	0x50
 5274 0698 00000000 		.4byte	0
 5275 069c 00000000 		.4byte	0
 5276              	.LLST50:
 5277 06a0 00000000 		.4byte	.LVL167
 5278 06a4 08000000 		.4byte	.LVL168
 5279 06a8 0100     		.2byte	0x1
 5280 06aa 50       		.byte	0x50
 5281 06ab 08000000 		.4byte	.LVL168
 5282 06af 1C000000 		.4byte	.LVL172
 5283 06b3 0400     		.2byte	0x4
 5284 06b5 F3       		.byte	0xf3
 5285 06b6 01       		.uleb128 0x1
 5286 06b7 50       		.byte	0x50
 5287 06b8 9F       		.byte	0x9f
 5288 06b9 1C000000 		.4byte	.LVL172
 5289 06bd 22000000 		.4byte	.LVL173
 5290 06c1 0100     		.2byte	0x1
 5291 06c3 50       		.byte	0x50
 5292 06c4 22000000 		.4byte	.LVL173
 5293 06c8 36000000 		.4byte	.LVL177
 5294 06cc 0400     		.2byte	0x4
 5295 06ce F3       		.byte	0xf3
 5296 06cf 01       		.uleb128 0x1
 5297 06d0 50       		.byte	0x50
 5298 06d1 9F       		.byte	0x9f
 5299 06d2 36000000 		.4byte	.LVL177
 5300 06d6 38000000 		.4byte	.LVL178
 5301 06da 0100     		.2byte	0x1
 5302 06dc 50       		.byte	0x50
 5303 06dd 38000000 		.4byte	.LVL178
 5304 06e1 4C000000 		.4byte	.LFE49
 5305 06e5 0400     		.2byte	0x4
 5306 06e7 F3       		.byte	0xf3
 5307 06e8 01       		.uleb128 0x1
 5308 06e9 50       		.byte	0x50
 5309 06ea 9F       		.byte	0x9f
 5310 06eb 00000000 		.4byte	0
 5311 06ef 00000000 		.4byte	0
 5312              	.LLST51:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 153


 5313 06f3 00000000 		.4byte	.LVL167
 5314 06f7 10000000 		.4byte	.LVL170
 5315 06fb 0100     		.2byte	0x1
 5316 06fd 51       		.byte	0x51
 5317 06fe 10000000 		.4byte	.LVL170
 5318 0702 1C000000 		.4byte	.LVL172
 5319 0706 0400     		.2byte	0x4
 5320 0708 F3       		.byte	0xf3
 5321 0709 01       		.uleb128 0x1
 5322 070a 51       		.byte	0x51
 5323 070b 9F       		.byte	0x9f
 5324 070c 1C000000 		.4byte	.LVL172
 5325 0710 2A000000 		.4byte	.LVL175
 5326 0714 0100     		.2byte	0x1
 5327 0716 51       		.byte	0x51
 5328 0717 2A000000 		.4byte	.LVL175
 5329 071b 36000000 		.4byte	.LVL177
 5330 071f 0400     		.2byte	0x4
 5331 0721 F3       		.byte	0xf3
 5332 0722 01       		.uleb128 0x1
 5333 0723 51       		.byte	0x51
 5334 0724 9F       		.byte	0x9f
 5335 0725 36000000 		.4byte	.LVL177
 5336 0729 3B000000 		.4byte	.LVL179-1
 5337 072d 0100     		.2byte	0x1
 5338 072f 51       		.byte	0x51
 5339 0730 3B000000 		.4byte	.LVL179-1
 5340 0734 4C000000 		.4byte	.LFE49
 5341 0738 0400     		.2byte	0x4
 5342 073a F3       		.byte	0xf3
 5343 073b 01       		.uleb128 0x1
 5344 073c 51       		.byte	0x51
 5345 073d 9F       		.byte	0x9f
 5346 073e 00000000 		.4byte	0
 5347 0742 00000000 		.4byte	0
 5348              	.LLST52:
 5349 0746 0E000000 		.4byte	.LVL169
 5350 074a 18000000 		.4byte	.LVL171
 5351 074e 0100     		.2byte	0x1
 5352 0750 53       		.byte	0x53
 5353 0751 18000000 		.4byte	.LVL171
 5354 0755 1C000000 		.4byte	.LVL172
 5355 0759 0100     		.2byte	0x1
 5356 075b 51       		.byte	0x51
 5357 075c 28000000 		.4byte	.LVL174
 5358 0760 32000000 		.4byte	.LVL176
 5359 0764 0100     		.2byte	0x1
 5360 0766 53       		.byte	0x53
 5361 0767 32000000 		.4byte	.LVL176
 5362 076b 36000000 		.4byte	.LVL177
 5363 076f 0100     		.2byte	0x1
 5364 0771 51       		.byte	0x51
 5365 0772 00000000 		.4byte	0
 5366 0776 00000000 		.4byte	0
 5367              	.LLST53:
 5368 077a 00000000 		.4byte	.LVL180
 5369 077e 08000000 		.4byte	.LVL181
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 154


 5370 0782 0100     		.2byte	0x1
 5371 0784 50       		.byte	0x50
 5372 0785 08000000 		.4byte	.LVL181
 5373 0789 0C000000 		.4byte	.LVL182
 5374 078d 0100     		.2byte	0x1
 5375 078f 53       		.byte	0x53
 5376 0790 0C000000 		.4byte	.LVL182
 5377 0794 18000000 		.4byte	.LFE50
 5378 0798 0400     		.2byte	0x4
 5379 079a F3       		.byte	0xf3
 5380 079b 01       		.uleb128 0x1
 5381 079c 50       		.byte	0x50
 5382 079d 9F       		.byte	0x9f
 5383 079e 00000000 		.4byte	0
 5384 07a2 00000000 		.4byte	0
 5385              	.LLST54:
 5386 07a6 00000000 		.4byte	.LVL183
 5387 07aa 0A000000 		.4byte	.LVL184
 5388 07ae 0100     		.2byte	0x1
 5389 07b0 50       		.byte	0x50
 5390 07b1 0A000000 		.4byte	.LVL184
 5391 07b5 14000000 		.4byte	.LFE51
 5392 07b9 0400     		.2byte	0x4
 5393 07bb F3       		.byte	0xf3
 5394 07bc 01       		.uleb128 0x1
 5395 07bd 50       		.byte	0x50
 5396 07be 9F       		.byte	0x9f
 5397 07bf 00000000 		.4byte	0
 5398 07c3 00000000 		.4byte	0
 5399              	.LLST55:
 5400 07c7 00000000 		.4byte	.LVL185
 5401 07cb 0C000000 		.4byte	.LVL186
 5402 07cf 0100     		.2byte	0x1
 5403 07d1 50       		.byte	0x50
 5404 07d2 0C000000 		.4byte	.LVL186
 5405 07d6 18000000 		.4byte	.LFE52
 5406 07da 0400     		.2byte	0x4
 5407 07dc F3       		.byte	0xf3
 5408 07dd 01       		.uleb128 0x1
 5409 07de 50       		.byte	0x50
 5410 07df 9F       		.byte	0x9f
 5411 07e0 00000000 		.4byte	0
 5412 07e4 00000000 		.4byte	0
 5413              	.LLST56:
 5414 07e8 00000000 		.4byte	.LVL187
 5415 07ec 0E000000 		.4byte	.LVL188
 5416 07f0 0100     		.2byte	0x1
 5417 07f2 50       		.byte	0x50
 5418 07f3 0E000000 		.4byte	.LVL188
 5419 07f7 14000000 		.4byte	.LVL189
 5420 07fb 0400     		.2byte	0x4
 5421 07fd F3       		.byte	0xf3
 5422 07fe 01       		.uleb128 0x1
 5423 07ff 50       		.byte	0x50
 5424 0800 9F       		.byte	0x9f
 5425 0801 14000000 		.4byte	.LVL189
 5426 0805 1E000000 		.4byte	.LVL190
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 155


 5427 0809 0100     		.2byte	0x1
 5428 080b 50       		.byte	0x50
 5429 080c 1E000000 		.4byte	.LVL190
 5430 0810 2C000000 		.4byte	.LFE57
 5431 0814 0400     		.2byte	0x4
 5432 0816 F3       		.byte	0xf3
 5433 0817 01       		.uleb128 0x1
 5434 0818 50       		.byte	0x50
 5435 0819 9F       		.byte	0x9f
 5436 081a 00000000 		.4byte	0
 5437 081e 00000000 		.4byte	0
 5438              	.LLST57:
 5439 0822 00000000 		.4byte	.LVL187
 5440 0826 14000000 		.4byte	.LVL189
 5441 082a 0200     		.2byte	0x2
 5442 082c 30       		.byte	0x30
 5443 082d 9F       		.byte	0x9f
 5444 082e 14000000 		.4byte	.LVL189
 5445 0832 1E000000 		.4byte	.LVL190
 5446 0836 0600     		.2byte	0x6
 5447 0838 70       		.byte	0x70
 5448 0839 00       		.sleb128 0
 5449 083a 08       		.byte	0x8
 5450 083b 20       		.byte	0x20
 5451 083c 21       		.byte	0x21
 5452 083d 9F       		.byte	0x9f
 5453 083e 00000000 		.4byte	0
 5454 0842 00000000 		.4byte	0
 5455              	.LLST58:
 5456 0846 0A000000 		.4byte	.LVL191
 5457 084a 10000000 		.4byte	.LVL192
 5458 084e 0100     		.2byte	0x1
 5459 0850 50       		.byte	0x50
 5460 0851 10000000 		.4byte	.LVL192
 5461 0855 12000000 		.4byte	.LVL193
 5462 0859 0400     		.2byte	0x4
 5463 085b 70       		.byte	0x70
 5464 085c 00       		.sleb128 0
 5465 085d 1F       		.byte	0x1f
 5466 085e 9F       		.byte	0x9f
 5467 085f 12000000 		.4byte	.LVL193
 5468 0863 14000000 		.4byte	.LVL194
 5469 0867 0100     		.2byte	0x1
 5470 0869 50       		.byte	0x50
 5471 086a 00000000 		.4byte	0
 5472 086e 00000000 		.4byte	0
 5473              		.section	.debug_aranges,"",%progbits
 5474 0000 E4010000 		.4byte	0x1e4
 5475 0004 0200     		.2byte	0x2
 5476 0006 00000000 		.4byte	.Ldebug_info0
 5477 000a 04       		.byte	0x4
 5478 000b 00       		.byte	0
 5479 000c 0000     		.2byte	0
 5480 000e 0000     		.2byte	0
 5481 0010 00000000 		.4byte	.LFB1
 5482 0014 14000000 		.4byte	.LFE1-.LFB1
 5483 0018 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 156


 5484 001c 14000000 		.4byte	.LFE4-.LFB4
 5485 0020 00000000 		.4byte	.LFB2
 5486 0024 18000000 		.4byte	.LFE2-.LFB2
 5487 0028 00000000 		.4byte	.LFB5
 5488 002c 14000000 		.4byte	.LFE5-.LFB5
 5489 0030 00000000 		.4byte	.LFB6
 5490 0034 20000000 		.4byte	.LFE6-.LFB6
 5491 0038 00000000 		.4byte	.LFB7
 5492 003c 1C000000 		.4byte	.LFE7-.LFB7
 5493 0040 00000000 		.4byte	.LFB8
 5494 0044 24000000 		.4byte	.LFE8-.LFB8
 5495 0048 00000000 		.4byte	.LFB10
 5496 004c 24000000 		.4byte	.LFE10-.LFB10
 5497 0050 00000000 		.4byte	.LFB11
 5498 0054 14000000 		.4byte	.LFE11-.LFB11
 5499 0058 00000000 		.4byte	.LFB12
 5500 005c 10000000 		.4byte	.LFE12-.LFB12
 5501 0060 00000000 		.4byte	.LFB13
 5502 0064 0C000000 		.4byte	.LFE13-.LFB13
 5503 0068 00000000 		.4byte	.LFB20
 5504 006c 14000000 		.4byte	.LFE20-.LFB20
 5505 0070 00000000 		.4byte	.LFB21
 5506 0074 18000000 		.4byte	.LFE21-.LFB21
 5507 0078 00000000 		.4byte	.LFB22
 5508 007c 14000000 		.4byte	.LFE22-.LFB22
 5509 0080 00000000 		.4byte	.LFB23
 5510 0084 14000000 		.4byte	.LFE23-.LFB23
 5511 0088 00000000 		.4byte	.LFB24
 5512 008c 14000000 		.4byte	.LFE24-.LFB24
 5513 0090 00000000 		.4byte	.LFB25
 5514 0094 04000000 		.4byte	.LFE25-.LFB25
 5515 0098 00000000 		.4byte	.LFB14
 5516 009c 20000000 		.4byte	.LFE14-.LFB14
 5517 00a0 00000000 		.4byte	.LFB15
 5518 00a4 1C000000 		.4byte	.LFE15-.LFB15
 5519 00a8 00000000 		.4byte	.LFB16
 5520 00ac 24000000 		.4byte	.LFE16-.LFB16
 5521 00b0 00000000 		.4byte	.LFB17
 5522 00b4 20000000 		.4byte	.LFE17-.LFB17
 5523 00b8 00000000 		.4byte	.LFB18
 5524 00bc 4C000000 		.4byte	.LFE18-.LFB18
 5525 00c0 00000000 		.4byte	.LFB19
 5526 00c4 2C000000 		.4byte	.LFE19-.LFB19
 5527 00c8 00000000 		.4byte	.LFB26
 5528 00cc 18000000 		.4byte	.LFE26-.LFB26
 5529 00d0 00000000 		.4byte	.LFB27
 5530 00d4 30000000 		.4byte	.LFE27-.LFB27
 5531 00d8 00000000 		.4byte	.LFB3
 5532 00dc CC000000 		.4byte	.LFE3-.LFB3
 5533 00e0 00000000 		.4byte	.LFB9
 5534 00e4 D8000000 		.4byte	.LFE9-.LFB9
 5535 00e8 00000000 		.4byte	.LFB28
 5536 00ec 14000000 		.4byte	.LFE28-.LFB28
 5537 00f0 00000000 		.4byte	.LFB29
 5538 00f4 4C000000 		.4byte	.LFE29-.LFB29
 5539 00f8 00000000 		.4byte	.LFB33
 5540 00fc 10000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 157


 5541 0100 00000000 		.4byte	.LFB34
 5542 0104 10000000 		.4byte	.LFE34-.LFB34
 5543 0108 00000000 		.4byte	.LFB32
 5544 010c 18000000 		.4byte	.LFE32-.LFB32
 5545 0110 00000000 		.4byte	.LFB35
 5546 0114 10000000 		.4byte	.LFE35-.LFB35
 5547 0118 00000000 		.4byte	.LFB36
 5548 011c 10000000 		.4byte	.LFE36-.LFB36
 5549 0120 00000000 		.4byte	.LFB37
 5550 0124 10000000 		.4byte	.LFE37-.LFB37
 5551 0128 00000000 		.4byte	.LFB38
 5552 012c 10000000 		.4byte	.LFE38-.LFB38
 5553 0130 00000000 		.4byte	.LFB39
 5554 0134 20000000 		.4byte	.LFE39-.LFB39
 5555 0138 00000000 		.4byte	.LFB40
 5556 013c 10000000 		.4byte	.LFE40-.LFB40
 5557 0140 00000000 		.4byte	.LFB44
 5558 0144 28000000 		.4byte	.LFE44-.LFB44
 5559 0148 00000000 		.4byte	.LFB41
 5560 014c 0C000000 		.4byte	.LFE41-.LFB41
 5561 0150 00000000 		.4byte	.LFB31
 5562 0154 4C000000 		.4byte	.LFE31-.LFB31
 5563 0158 00000000 		.4byte	.LFB30
 5564 015c 20000000 		.4byte	.LFE30-.LFB30
 5565 0160 00000000 		.4byte	.LFB42
 5566 0164 10000000 		.4byte	.LFE42-.LFB42
 5567 0168 00000000 		.4byte	.LFB43
 5568 016c 0C000000 		.4byte	.LFE43-.LFB43
 5569 0170 00000000 		.4byte	.LFB45
 5570 0174 70000000 		.4byte	.LFE45-.LFB45
 5571 0178 00000000 		.4byte	.LFB46
 5572 017c 20000000 		.4byte	.LFE46-.LFB46
 5573 0180 00000000 		.4byte	.LFB47
 5574 0184 20000000 		.4byte	.LFE47-.LFB47
 5575 0188 00000000 		.4byte	.LFB48
 5576 018c 20000000 		.4byte	.LFE48-.LFB48
 5577 0190 00000000 		.4byte	.LFB49
 5578 0194 4C000000 		.4byte	.LFE49-.LFB49
 5579 0198 00000000 		.4byte	.LFB50
 5580 019c 18000000 		.4byte	.LFE50-.LFB50
 5581 01a0 00000000 		.4byte	.LFB51
 5582 01a4 14000000 		.4byte	.LFE51-.LFB51
 5583 01a8 00000000 		.4byte	.LFB52
 5584 01ac 18000000 		.4byte	.LFE52-.LFB52
 5585 01b0 00000000 		.4byte	.LFB53
 5586 01b4 14000000 		.4byte	.LFE53-.LFB53
 5587 01b8 00000000 		.4byte	.LFB54
 5588 01bc 14000000 		.4byte	.LFE54-.LFB54
 5589 01c0 00000000 		.4byte	.LFB55
 5590 01c4 10000000 		.4byte	.LFE55-.LFB55
 5591 01c8 00000000 		.4byte	.LFB56
 5592 01cc 10000000 		.4byte	.LFE56-.LFB56
 5593 01d0 00000000 		.4byte	.LFB57
 5594 01d4 2C000000 		.4byte	.LFE57-.LFB57
 5595 01d8 00000000 		.4byte	.LFB58
 5596 01dc 1C000000 		.4byte	.LFE58-.LFB58
 5597 01e0 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 158


 5598 01e4 00000000 		.4byte	0
 5599              		.section	.debug_ranges,"",%progbits
 5600              	.Ldebug_ranges0:
 5601 0000 00000000 		.4byte	.LFB1
 5602 0004 14000000 		.4byte	.LFE1
 5603 0008 00000000 		.4byte	.LFB4
 5604 000c 14000000 		.4byte	.LFE4
 5605 0010 00000000 		.4byte	.LFB2
 5606 0014 18000000 		.4byte	.LFE2
 5607 0018 00000000 		.4byte	.LFB5
 5608 001c 14000000 		.4byte	.LFE5
 5609 0020 00000000 		.4byte	.LFB6
 5610 0024 20000000 		.4byte	.LFE6
 5611 0028 00000000 		.4byte	.LFB7
 5612 002c 1C000000 		.4byte	.LFE7
 5613 0030 00000000 		.4byte	.LFB8
 5614 0034 24000000 		.4byte	.LFE8
 5615 0038 00000000 		.4byte	.LFB10
 5616 003c 24000000 		.4byte	.LFE10
 5617 0040 00000000 		.4byte	.LFB11
 5618 0044 14000000 		.4byte	.LFE11
 5619 0048 00000000 		.4byte	.LFB12
 5620 004c 10000000 		.4byte	.LFE12
 5621 0050 00000000 		.4byte	.LFB13
 5622 0054 0C000000 		.4byte	.LFE13
 5623 0058 00000000 		.4byte	.LFB20
 5624 005c 14000000 		.4byte	.LFE20
 5625 0060 00000000 		.4byte	.LFB21
 5626 0064 18000000 		.4byte	.LFE21
 5627 0068 00000000 		.4byte	.LFB22
 5628 006c 14000000 		.4byte	.LFE22
 5629 0070 00000000 		.4byte	.LFB23
 5630 0074 14000000 		.4byte	.LFE23
 5631 0078 00000000 		.4byte	.LFB24
 5632 007c 14000000 		.4byte	.LFE24
 5633 0080 00000000 		.4byte	.LFB25
 5634 0084 04000000 		.4byte	.LFE25
 5635 0088 00000000 		.4byte	.LFB14
 5636 008c 20000000 		.4byte	.LFE14
 5637 0090 00000000 		.4byte	.LFB15
 5638 0094 1C000000 		.4byte	.LFE15
 5639 0098 00000000 		.4byte	.LFB16
 5640 009c 24000000 		.4byte	.LFE16
 5641 00a0 00000000 		.4byte	.LFB17
 5642 00a4 20000000 		.4byte	.LFE17
 5643 00a8 00000000 		.4byte	.LFB18
 5644 00ac 4C000000 		.4byte	.LFE18
 5645 00b0 00000000 		.4byte	.LFB19
 5646 00b4 2C000000 		.4byte	.LFE19
 5647 00b8 00000000 		.4byte	.LFB26
 5648 00bc 18000000 		.4byte	.LFE26
 5649 00c0 00000000 		.4byte	.LFB27
 5650 00c4 30000000 		.4byte	.LFE27
 5651 00c8 00000000 		.4byte	.LFB3
 5652 00cc CC000000 		.4byte	.LFE3
 5653 00d0 00000000 		.4byte	.LFB9
 5654 00d4 D8000000 		.4byte	.LFE9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 159


 5655 00d8 00000000 		.4byte	.LFB28
 5656 00dc 14000000 		.4byte	.LFE28
 5657 00e0 00000000 		.4byte	.LFB29
 5658 00e4 4C000000 		.4byte	.LFE29
 5659 00e8 00000000 		.4byte	.LFB33
 5660 00ec 10000000 		.4byte	.LFE33
 5661 00f0 00000000 		.4byte	.LFB34
 5662 00f4 10000000 		.4byte	.LFE34
 5663 00f8 00000000 		.4byte	.LFB32
 5664 00fc 18000000 		.4byte	.LFE32
 5665 0100 00000000 		.4byte	.LFB35
 5666 0104 10000000 		.4byte	.LFE35
 5667 0108 00000000 		.4byte	.LFB36
 5668 010c 10000000 		.4byte	.LFE36
 5669 0110 00000000 		.4byte	.LFB37
 5670 0114 10000000 		.4byte	.LFE37
 5671 0118 00000000 		.4byte	.LFB38
 5672 011c 10000000 		.4byte	.LFE38
 5673 0120 00000000 		.4byte	.LFB39
 5674 0124 20000000 		.4byte	.LFE39
 5675 0128 00000000 		.4byte	.LFB40
 5676 012c 10000000 		.4byte	.LFE40
 5677 0130 00000000 		.4byte	.LFB44
 5678 0134 28000000 		.4byte	.LFE44
 5679 0138 00000000 		.4byte	.LFB41
 5680 013c 0C000000 		.4byte	.LFE41
 5681 0140 00000000 		.4byte	.LFB31
 5682 0144 4C000000 		.4byte	.LFE31
 5683 0148 00000000 		.4byte	.LFB30
 5684 014c 20000000 		.4byte	.LFE30
 5685 0150 00000000 		.4byte	.LFB42
 5686 0154 10000000 		.4byte	.LFE42
 5687 0158 00000000 		.4byte	.LFB43
 5688 015c 0C000000 		.4byte	.LFE43
 5689 0160 00000000 		.4byte	.LFB45
 5690 0164 70000000 		.4byte	.LFE45
 5691 0168 00000000 		.4byte	.LFB46
 5692 016c 20000000 		.4byte	.LFE46
 5693 0170 00000000 		.4byte	.LFB47
 5694 0174 20000000 		.4byte	.LFE47
 5695 0178 00000000 		.4byte	.LFB48
 5696 017c 20000000 		.4byte	.LFE48
 5697 0180 00000000 		.4byte	.LFB49
 5698 0184 4C000000 		.4byte	.LFE49
 5699 0188 00000000 		.4byte	.LFB50
 5700 018c 18000000 		.4byte	.LFE50
 5701 0190 00000000 		.4byte	.LFB51
 5702 0194 14000000 		.4byte	.LFE51
 5703 0198 00000000 		.4byte	.LFB52
 5704 019c 18000000 		.4byte	.LFE52
 5705 01a0 00000000 		.4byte	.LFB53
 5706 01a4 14000000 		.4byte	.LFE53
 5707 01a8 00000000 		.4byte	.LFB54
 5708 01ac 14000000 		.4byte	.LFE54
 5709 01b0 00000000 		.4byte	.LFB55
 5710 01b4 10000000 		.4byte	.LFE55
 5711 01b8 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 160


 5712 01bc 10000000 		.4byte	.LFE56
 5713 01c0 00000000 		.4byte	.LFB57
 5714 01c4 2C000000 		.4byte	.LFE57
 5715 01c8 00000000 		.4byte	.LFB58
 5716 01cc 1C000000 		.4byte	.LFE58
 5717 01d0 00000000 		.4byte	0
 5718 01d4 00000000 		.4byte	0
 5719              		.section	.debug_line,"",%progbits
 5720              	.Ldebug_line0:
 5721 0000 9F050000 		.section	.debug_str,"MS",%progbits,1
 5721      02006900 
 5721      00000201 
 5721      FB0E0D00 
 5721      01010101 
 5722              	.LASF51:
 5723 0000 72616D56 		.ascii	"ramVectorTable\000"
 5723      6563746F 
 5723      72546162 
 5723      6C6500
 5724              	.LASF10:
 5725 000f 75696E74 		.ascii	"uint16\000"
 5725      313600
 5726              	.LASF38:
 5727 0016 696E7453 		.ascii	"intState\000"
 5727      74617465 
 5727      00
 5728              	.LASF25:
 5729 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5729      73436C6B 
 5729      57726974 
 5729      65486663 
 5729      6C6B4469 
 5730              	.LASF111:
 5731 0038 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 5731      73507262 
 5731      47657442 
 5731      67427566 
 5731      66657254 
 5732              	.LASF50:
 5733 0050 6F6C6449 		.ascii	"oldIsr\000"
 5733      737200
 5734              	.LASF90:
 5735 0057 72657456 		.ascii	"retVal\000"
 5735      616C00
 5736              	.LASF37:
 5737 005e 43794469 		.ascii	"CyDisableInts\000"
 5737      7361626C 
 5737      65496E74 
 5737      7300
 5738              	.LASF7:
 5739 006c 6C6F6E67 		.ascii	"long long unsigned int\000"
 5739      206C6F6E 
 5739      6720756E 
 5739      7369676E 
 5739      65642069 
 5740              	.LASF118:
 5741 0083 43795379 		.ascii	"CySysTickInitVar\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 161


 5741      73546963 
 5741      6B496E69 
 5741      74566172 
 5741      00
 5742              	.LASF39:
 5743 0094 4379456E 		.ascii	"CyEnableInts\000"
 5743      61626C65 
 5743      496E7473 
 5743      00
 5744              	.LASF99:
 5745 00a1 696E7465 		.ascii	"interfaceNumber\000"
 5745      72666163 
 5745      654E756D 
 5745      62657200 
 5746              	.LASF60:
 5747 00b1 4379536F 		.ascii	"CySoftwareReset\000"
 5747      66747761 
 5747      72655265 
 5747      73657400 
 5748              	.LASF75:
 5749 00c1 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5749      73546963 
 5749      6B456E61 
 5749      626C6549 
 5749      6E746572 
 5750              	.LASF43:
 5751 00da 4379496E 		.ascii	"CyIntGetState\000"
 5751      74476574 
 5751      53746174 
 5751      6500
 5752              	.LASF6:
 5753 00e8 6C6F6E67 		.ascii	"long long int\000"
 5753      206C6F6E 
 5753      6720696E 
 5753      7400
 5754              	.LASF0:
 5755 00f6 7369676E 		.ascii	"signed char\000"
 5755      65642063 
 5755      68617200 
 5756              	.LASF64:
 5757 0102 66726571 		.ascii	"freq\000"
 5757      00
 5758              	.LASF73:
 5759 0107 43794465 		.ascii	"CyDelayFreq\000"
 5759      6C617946 
 5759      72657100 
 5760              	.LASF26:
 5761 0113 696E7465 		.ascii	"interruptState\000"
 5761      72727570 
 5761      74537461 
 5761      746500
 5762              	.LASF13:
 5763 0122 696E7433 		.ascii	"int32\000"
 5763      3200
 5764              	.LASF80:
 5765 0128 43795379 		.ascii	"CySysTickGetReload\000"
 5765      73546963 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 162


 5765      6B476574 
 5765      52656C6F 
 5765      616400
 5766              	.LASF104:
 5767 013b 766F6C74 		.ascii	"voltageTap\000"
 5767      61676554 
 5767      617000
 5768              	.LASF79:
 5769 0146 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5769      73436C6B 
 5769      496D6F47 
 5769      65745763 
 5769      6F4C6F63 
 5770              	.LASF70:
 5771 015c 77636F4C 		.ascii	"wcoLock\000"
 5771      6F636B00 
 5772              	.LASF4:
 5773 0164 6C6F6E67 		.ascii	"long int\000"
 5773      20696E74 
 5773      00
 5774              	.LASF44:
 5775 016d 4379496E 		.ascii	"CyIntDisable\000"
 5775      74446973 
 5775      61626C65 
 5775      00
 5776              	.LASF106:
 5777 017a 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 5777      73507262 
 5777      44697361 
 5777      626C6544 
 5777      65657073 
 5778              	.LASF91:
 5779 019a 43795379 		.ascii	"CySysTickGetCallback\000"
 5779      73546963 
 5779      6B476574 
 5779      43616C6C 
 5779      6261636B 
 5780              	.LASF126:
 5781 01af 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\WA-101\\Proj"
 5781      564E5C61 
 5781      7070735C 
 5781      7472756E 
 5781      6B5C4379 
 5782 01dc 65637473 		.ascii	"ects\\PSoC\\CE211321_Temperature_Sensing\\CE211321_"
 5782      5C50536F 
 5782      435C4345 
 5782      32313133 
 5782      32315F54 
 5783 020c 54656D70 		.ascii	"Temperature_Sensing.cydsn\000"
 5783      65726174 
 5783      7572655F 
 5783      53656E73 
 5783      696E672E 
 5784              	.LASF115:
 5785 0226 63796465 		.ascii	"cydelayFreqKhz\000"
 5785      6C617946 
 5785      7265714B 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 163


 5785      687A00
 5786              	.LASF71:
 5787 0235 43794465 		.ascii	"CyDelayUs\000"
 5787      6C617955 
 5787      7300
 5788              	.LASF15:
 5789 023f 646F7562 		.ascii	"double\000"
 5789      6C6500
 5790              	.LASF57:
 5791 0246 73686966 		.ascii	"shift\000"
 5791      7400
 5792              	.LASF11:
 5793 024c 75696E74 		.ascii	"uint32\000"
 5793      333200
 5794              	.LASF53:
 5795 0253 4379496E 		.ascii	"CyIntSetVector\000"
 5795      74536574 
 5795      56656374 
 5795      6F7200
 5796              	.LASF42:
 5797 0262 6E756D62 		.ascii	"number\000"
 5797      657200
 5798              	.LASF40:
 5799 0269 6D61736B 		.ascii	"mask\000"
 5799      00
 5800              	.LASF33:
 5801 026e 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5801      73436C6B 
 5801      47657453 
 5801      7973636C 
 5801      6B536F75 
 5802              	.LASF63:
 5803 0286 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5803      73436C6B 
 5803      496D6F45 
 5803      6E61626C 
 5803      6557636F 
 5804              	.LASF59:
 5805 029f 4379496E 		.ascii	"CyIntGetPriority\000"
 5805      74476574 
 5805      5072696F 
 5805      72697479 
 5805      00
 5806              	.LASF117:
 5807 02b0 63796465 		.ascii	"cydelay32kMs\000"
 5807      6C617933 
 5807      326B4D73 
 5807      00
 5808              	.LASF109:
 5809 02bd 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
 5809      73507262 
 5809      53657442 
 5809      67427566 
 5809      66657254 
 5810              	.LASF86:
 5811 02d5 43795379 		.ascii	"CySysTickInit\000"
 5811      73546963 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 164


 5811      6B496E69 
 5811      7400
 5812              	.LASF58:
 5813 02e3 76616C75 		.ascii	"value\000"
 5813      6500
 5814              	.LASF83:
 5815 02e9 636C6F63 		.ascii	"clockSource\000"
 5815      6B536F75 
 5815      72636500 
 5816              	.LASF92:
 5817 02f5 43794765 		.ascii	"CyGetUniqueId\000"
 5817      74556E69 
 5817      71756549 
 5817      6400
 5818              	.LASF84:
 5819 0303 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5819      73546963 
 5819      6B476574 
 5819      436F756E 
 5819      74466C61 
 5820              	.LASF8:
 5821 0319 756E7369 		.ascii	"unsigned int\000"
 5821      676E6564 
 5821      20696E74 
 5821      00
 5822              	.LASF107:
 5823 0326 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 5823      73507262 
 5823      456E6162 
 5823      6C655664 
 5823      64615265 
 5824              	.LASF85:
 5825 033c 43795379 		.ascii	"CySysTickClear\000"
 5825      73546963 
 5825      6B436C65 
 5825      617200
 5826              	.LASF5:
 5827 034b 6C6F6E67 		.ascii	"long unsigned int\000"
 5827      20756E73 
 5827      69676E65 
 5827      6420696E 
 5827      7400
 5828              	.LASF110:
 5829 035d 62675472 		.ascii	"bgTrim\000"
 5829      696D00
 5830              	.LASF24:
 5831 0364 43795379 		.ascii	"CySysClkImoStop\000"
 5831      73436C6B 
 5831      496D6F53 
 5831      746F7000 
 5832              	.LASF122:
 5833 0374 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5833      74657243 
 5833      72697469 
 5833      63616C53 
 5833      65637469 
 5834              	.LASF45:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 165


 5835 038b 4379496E 		.ascii	"CyIntSetPending\000"
 5835      74536574 
 5835      50656E64 
 5835      696E6700 
 5836              	.LASF9:
 5837 039b 75696E74 		.ascii	"uint8\000"
 5837      3800
 5838              	.LASF34:
 5839 03a1 43795379 		.ascii	"CySysGetResetReason\000"
 5839      73476574 
 5839      52657365 
 5839      74526561 
 5839      736F6E00 
 5840              	.LASF3:
 5841 03b5 73686F72 		.ascii	"short unsigned int\000"
 5841      7420756E 
 5841      7369676E 
 5841      65642069 
 5841      6E7400
 5842              	.LASF65:
 5843 03c8 72656754 		.ascii	"regTmp\000"
 5843      6D7000
 5844              	.LASF108:
 5845 03cf 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 5845      73507262 
 5845      44697361 
 5845      626C6556 
 5845      64646152 
 5846              	.LASF82:
 5847 03e6 43795379 		.ascii	"CySysTickSetClockSource\000"
 5847      73546963 
 5847      6B536574 
 5847      436C6F63 
 5847      6B536F75 
 5848              	.LASF12:
 5849 03fe 696E7438 		.ascii	"int8\000"
 5849      00
 5850              	.LASF125:
 5851 0403 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 5851      6E657261 
 5851      7465645F 
 5851      536F7572 
 5851      63655C50 
 5852              	.LASF56:
 5853 0424 7072696F 		.ascii	"priority\000"
 5853      72697479 
 5853      00
 5854              	.LASF68:
 5855 042d 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5855      73436C6B 
 5855      57726974 
 5855      65496D6F 
 5855      46726571 
 5856              	.LASF96:
 5857 0442 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5857      73536574 
 5857      466C6173 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 166


 5857      68416363 
 5857      65737341 
 5858              	.LASF48:
 5859 0461 4379496E 		.ascii	"CyIntSetSysVector\000"
 5859      74536574 
 5859      53797356 
 5859      6563746F 
 5859      7200
 5860              	.LASF23:
 5861 0473 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5861      73436C6B 
 5861      496D6F44 
 5861      69736162 
 5861      6C655763 
 5862              	.LASF18:
 5863 048d 72656733 		.ascii	"reg32\000"
 5863      3200
 5864              	.LASF87:
 5865 0493 43795379 		.ascii	"CySysTickStart\000"
 5865      73546963 
 5865      6B537461 
 5865      727400
 5866              	.LASF36:
 5867 04a2 72657475 		.ascii	"returnStatus\000"
 5867      726E5374 
 5867      61747573 
 5867      00
 5868              	.LASF95:
 5869 04af 736F7572 		.ascii	"source\000"
 5869      636500
 5870              	.LASF20:
 5871 04b6 73697A65 		.ascii	"sizetype\000"
 5871      74797065 
 5871      00
 5872              	.LASF98:
 5873 04bf 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5873      73536574 
 5873      50657269 
 5873      70686572 
 5873      616C4163 
 5874              	.LASF46:
 5875 04e3 4379496E 		.ascii	"CyIntClearPending\000"
 5875      74436C65 
 5875      61725065 
 5875      6E64696E 
 5875      6700
 5876              	.LASF49:
 5877 04f5 61646472 		.ascii	"address\000"
 5877      65737300 
 5878              	.LASF28:
 5879 04fd 73797363 		.ascii	"sysclkSource\000"
 5879      6C6B536F 
 5879      75726365 
 5879      00
 5880              	.LASF89:
 5881 050a 66756E63 		.ascii	"function\000"
 5881      74696F6E 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 167


 5881      00
 5882              	.LASF81:
 5883 0513 43795379 		.ascii	"CySysTickGetValue\000"
 5883      73546963 
 5883      6B476574 
 5883      56616C75 
 5883      6500
 5884              	.LASF114:
 5885 0525 63796465 		.ascii	"cydelayFreqHz\000"
 5885      6C617946 
 5885      72657148 
 5885      7A00
 5886              	.LASF55:
 5887 0533 4379496E 		.ascii	"CyIntSetPriority\000"
 5887      74536574 
 5887      5072696F 
 5887      72697479 
 5887      00
 5888              	.LASF102:
 5889 0544 6761696E 		.ascii	"gain\000"
 5889      00
 5890              	.LASF66:
 5891 0549 6C664C69 		.ascii	"lfLimit\000"
 5891      6D697400 
 5892              	.LASF14:
 5893 0551 666C6F61 		.ascii	"float\000"
 5893      7400
 5894              	.LASF120:
 5895 0557 43794578 		.ascii	"CyExitCriticalSection\000"
 5895      69744372 
 5895      69746963 
 5895      616C5365 
 5895      6374696F 
 5896              	.LASF21:
 5897 056d 63795379 		.ascii	"cySysTickCallback\000"
 5897      73546963 
 5897      6B43616C 
 5897      6C626163 
 5897      6B00
 5898              	.LASF54:
 5899 057f 4379496E 		.ascii	"CyIntGetVector\000"
 5899      74476574 
 5899      56656374 
 5899      6F7200
 5900              	.LASF62:
 5901 058e 6D696C6C 		.ascii	"milliseconds\000"
 5901      69736563 
 5901      6F6E6473 
 5901      00
 5902              	.LASF100:
 5903 059b 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 5903      73507262 
 5903      53657447 
 5903      6C6F6261 
 5903      6C567265 
 5904              	.LASF121:
 5905 05b7 43794465 		.ascii	"CyDelayCycles\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 168


 5905      6C617943 
 5905      79636C65 
 5905      7300
 5906              	.LASF17:
 5907 05c5 72656738 		.ascii	"reg8\000"
 5907      00
 5908              	.LASF47:
 5909 05ca 43794861 		.ascii	"CyHalt\000"
 5909      6C7400
 5910              	.LASF94:
 5911 05d1 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5911      73536574 
 5911      52616D41 
 5911      63636573 
 5911      73417262 
 5912              	.LASF1:
 5913 05ee 756E7369 		.ascii	"unsigned char\000"
 5913      676E6564 
 5913      20636861 
 5913      7200
 5914              	.LASF2:
 5915 05fc 73686F72 		.ascii	"short int\000"
 5915      7420696E 
 5915      7400
 5916              	.LASF41:
 5917 0606 4379496E 		.ascii	"CyIntEnable\000"
 5917      74456E61 
 5917      626C6500 
 5918              	.LASF52:
 5919 0612 4379496E 		.ascii	"CyIntGetSysVector\000"
 5919      74476574 
 5919      53797356 
 5919      6563746F 
 5919      7200
 5920              	.LASF30:
 5921 0624 636C6B53 		.ascii	"clkSelect\000"
 5921      656C6563 
 5921      7400
 5922              	.LASF35:
 5923 062e 72656173 		.ascii	"reason\000"
 5923      6F6E00
 5924              	.LASF103:
 5925 0635 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 5925      73507262 
 5925      53657447 
 5925      6C6F6261 
 5925      6C567265 
 5926              	.LASF16:
 5927 0652 63686172 		.ascii	"char\000"
 5927      00
 5928              	.LASF119:
 5929 0657 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5929      6F467265 
 5929      714D687A 
 5929      3244706C 
 5929      6C4F6666 
 5930              	.LASF19:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 169


 5931 066f 63796973 		.ascii	"cyisraddress\000"
 5931      72616464 
 5931      72657373 
 5931      00
 5932              	.LASF76:
 5933 067c 43795379 		.ascii	"CySysTickEnable\000"
 5933      73546963 
 5933      6B456E61 
 5933      626C6500 
 5934              	.LASF32:
 5935 068c 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5935      73436C6B 
 5935      57726974 
 5935      65486663 
 5935      6C6B4469 
 5936              	.LASF29:
 5937 06a2 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5937      73436C6B 
 5937      57726974 
 5937      65537973 
 5937      636C6B44 
 5938              	.LASF88:
 5939 06b9 43795379 		.ascii	"CySysTickSetCallback\000"
 5939      73546963 
 5939      6B536574 
 5939      43616C6C 
 5939      6261636B 
 5940              	.LASF113:
 5941 06ce 43795379 		.ascii	"CySysTickCallbacks\000"
 5941      73546963 
 5941      6B43616C 
 5941      6C626163 
 5941      6B7300
 5942              	.LASF69:
 5943 06e1 696D6F54 		.ascii	"imoTrim1Value\000"
 5943      72696D31 
 5943      56616C75 
 5943      6500
 5944              	.LASF93:
 5945 06ef 756E6971 		.ascii	"uniqueId\000"
 5945      75654964 
 5945      00
 5946              	.LASF67:
 5947 06f8 666C6173 		.ascii	"flashCtlReg\000"
 5947      6843746C 
 5947      52656700 
 5948              	.LASF61:
 5949 0704 43794465 		.ascii	"CyDelay\000"
 5949      6C617900 
 5950              	.LASF77:
 5951 070c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5951      73546963 
 5951      6B446973 
 5951      61626C65 
 5951      496E7465 
 5952              	.LASF116:
 5953 0726 63796465 		.ascii	"cydelayFreqMhz\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 170


 5953      6C617946 
 5953      7265714D 
 5953      687A00
 5954              	.LASF123:
 5955 0735 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5955      73436C6B 
 5955      57636F45 
 5955      6E61626C 
 5955      656400
 5956              	.LASF97:
 5957 0748 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5957      73536574 
 5957      446D6163 
 5957      41636365 
 5957      73734172 
 5958              	.LASF74:
 5959 0766 43795379 		.ascii	"CySysTickStop\000"
 5959      73546963 
 5959      6B53746F 
 5959      7000
 5960              	.LASF31:
 5961 0774 64697669 		.ascii	"divider\000"
 5961      64657200 
 5962              	.LASF22:
 5963 077c 43795379 		.ascii	"CySysClkImoStart\000"
 5963      73436C6B 
 5963      496D6F53 
 5963      74617274 
 5963      00
 5964              	.LASF128:
 5965 078d 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5965      73466C61 
 5965      73685365 
 5965      74576169 
 5965      74437963 
 5966              	.LASF105:
 5967 07a5 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 5967      73507262 
 5967      456E6162 
 5967      6C654465 
 5967      6570736C 
 5968              	.LASF101:
 5969 07c4 43795379 		.ascii	"CySysPrbSetBgGain\000"
 5969      73507262 
 5969      53657442 
 5969      67476169 
 5969      6E00
 5970              	.LASF72:
 5971 07d6 6D696372 		.ascii	"microseconds\000"
 5971      6F736563 
 5971      6F6E6473 
 5971      00
 5972              	.LASF27:
 5973 07e3 746D7052 		.ascii	"tmpReg\000"
 5973      656700
 5974              	.LASF78:
 5975 07ea 43795379 		.ascii	"CySysTickSetReload\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\cc2AcIsa.s 			page 171


 5975      73546963 
 5975      6B536574 
 5975      52656C6F 
 5975      616400
 5976              	.LASF127:
 5977 07fd 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5977      73546963 
 5977      6B536572 
 5977      76696365 
 5977      43616C6C 
 5978              	.LASF112:
 5979 0817 72657475 		.ascii	"returnValue\000"
 5979      726E5661 
 5979      6C756500 
 5980              	.LASF124:
 5981 0823 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5981      4320342E 
 5981      392E3320 
 5981      32303135 
 5981      30333033 
 5982 0856 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 5982      20726576 
 5982      6973696F 
 5982      6E203232 
 5982      31323230 
 5983 0889 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5983      67202D66 
 5983      66756E63 
 5983      74696F6E 
 5983      2D736563 
 5984              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
