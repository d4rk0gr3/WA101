ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_IsChannelSigned,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	ADC_IsChannelSigned, %function
  22              	ADC_IsChannelSigned:
  23              	.LFB12:
  24              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC.c **** * \file     ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * \version  1.20
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * \brief
   6:Generated_Source\PSoC4/ADC.c **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC4/ADC.c **** *
   8:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC.c **** * \copyright
  10:Generated_Source\PSoC4/ADC.c **** * (c) 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC4/ADC.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC.c **** * failure of the Cypress product may reasonably be expected to result in
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 2


  34:Generated_Source\PSoC4/ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  40:Generated_Source\PSoC4/ADC.c **** 
  41:Generated_Source\PSoC4/ADC.c **** #include <stdlib.h>
  42:Generated_Source\PSoC4/ADC.c **** 
  43:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan);
  44:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  45:Generated_Source\PSoC4/ADC.c **** static void ADC_SetupComparatorTrim(void);
  46:Generated_Source\PSoC4/ADC.c **** static void ADC_UndoComparatorTrimSetup(void);
  47:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim);
  51:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  52:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampTrim(uint32 opampTrim);
  53:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetAgndTrim(uint32 agndTrim);
  54:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecOpampTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecAgndTrim(uint32 trim);
  58:Generated_Source\PSoC4/ADC.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC.c **** #endif
  60:Generated_Source\PSoC4/ADC.c **** 
  61:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u; 
  62:Generated_Source\PSoC4/ADC.c **** 
  63:Generated_Source\PSoC4/ADC.c **** uint8 ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM]; 
  65:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM]; 
  66:Generated_Source\PSoC4/ADC.c **** 
  67:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC.c **** 
  69:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100UL, 0x00001100UL,  };
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  77:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
  79:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
  80:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
  81:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_A_FILTER_initPairs[ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE
  82:Generated_Source\PSoC4/ADC.c ****         {
  83:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
  84:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
  85:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
  86:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
  87:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
  88:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
  89:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_A_STARTUP_DELAY)}
  90:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 3


  91:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
  92:Generated_Source\PSoC4/ADC.c ****             
  93:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
  94:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
  95:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
  96:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
  97:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
  98:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
  99:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 100:Generated_Source\PSoC4/ADC.c **** 
 101:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 102:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 103:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 104:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 105:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 106:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 107:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 108:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 109:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 110:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 111:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 112:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 113:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 114:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 115:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 116:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 117:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 118:Generated_Source\PSoC4/ADC.c **** 
 119:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 120:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 121:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 122:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 123:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 124:Generated_Source\PSoC4/ADC.c ****         };
 125:Generated_Source\PSoC4/ADC.c **** 
 126:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
 127:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 128:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 129:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_B_FILTER_initPairs[ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE
 130:Generated_Source\PSoC4/ADC.c ****         {
 131:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 132:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 133:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 134:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 135:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 136:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 137:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_B_STARTUP_DELAY)}
 138:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 139:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 140:Generated_Source\PSoC4/ADC.c ****             
 141:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 142:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 143:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 144:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 145:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 146:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 147:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 4


 148:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 149:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 150:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 151:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 152:Generated_Source\PSoC4/ADC.c ****                 
 153:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 154:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 155:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 156:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 157:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 158:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 159:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 160:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 161:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 162:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 163:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 164:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 165:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 166:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 167:Generated_Source\PSoC4/ADC.c ****                 
 168:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 169:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 170:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 171:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 172:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 173:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 174:Generated_Source\PSoC4/ADC.c ****         };
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_A_FILTER_config = {
 177:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 178:Generated_Source\PSoC4/ADC.c ****             ADC_CFG0_UABH_A_FILTER_initPairs,
 179:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 180:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 181:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 182:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG0_UABH_A_FILTER_initPairs))
 183:Generated_Source\PSoC4/ADC.c ****         };
 184:Generated_Source\PSoC4/ADC.c **** 
 185:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_B_FILTER_config = {
 186:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 187:Generated_Source\PSoC4/ADC.c ****         ADC_CFG0_UABH_B_FILTER_initPairs,
 188:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 189:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 190:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 191:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG0_UABH_B_FILTER_initPairs))
 192:Generated_Source\PSoC4/ADC.c ****     };
 193:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG0_FILTER_PRESENT) */
 194:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG1_FILTER_PRESENT)
 195:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 196:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 197:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 198:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_A_FILTER_initPairs[ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE
 199:Generated_Source\PSoC4/ADC.c ****         {
 200:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 201:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 202:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 203:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 204:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 5


 205:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 206:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_A_STARTUP_DELAY)}
 207:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 208:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 209:Generated_Source\PSoC4/ADC.c ****             
 210:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 211:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 212:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 213:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 214:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 215:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 216:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 217:Generated_Source\PSoC4/ADC.c **** 
 218:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 219:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 220:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 221:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 222:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 223:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 224:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 225:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 226:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 227:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 228:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 229:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 230:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 231:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 232:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 233:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 234:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 235:Generated_Source\PSoC4/ADC.c **** 
 236:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 237:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 238:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 239:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 240:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 241:Generated_Source\PSoC4/ADC.c ****         };
 242:Generated_Source\PSoC4/ADC.c **** 
 243:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 244:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 245:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 246:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_B_FILTER_initPairs[ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE
 247:Generated_Source\PSoC4/ADC.c ****         {
 248:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 249:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 250:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 251:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 252:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 253:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 254:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_B_STARTUP_DELAY)}
 255:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 256:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 257:Generated_Source\PSoC4/ADC.c ****             
 258:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 259:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 260:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 261:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 6


 262:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 263:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 264:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 265:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 266:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 267:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 268:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 269:Generated_Source\PSoC4/ADC.c ****                 
 270:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 271:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 272:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 273:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 274:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 275:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 276:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 277:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 278:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 279:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 280:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 281:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 282:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 283:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 284:Generated_Source\PSoC4/ADC.c ****                 
 285:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 286:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 287:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 288:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 289:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 290:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 291:Generated_Source\PSoC4/ADC.c ****         };
 292:Generated_Source\PSoC4/ADC.c **** 
 293:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_A_FILTER_config = {
 294:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 295:Generated_Source\PSoC4/ADC.c ****             ADC_CFG1_UABH_A_FILTER_initPairs,
 296:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 297:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 298:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 299:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG1_UABH_A_FILTER_initPairs))
 300:Generated_Source\PSoC4/ADC.c ****         };
 301:Generated_Source\PSoC4/ADC.c **** 
 302:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_B_FILTER_config = {
 303:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 304:Generated_Source\PSoC4/ADC.c ****         ADC_CFG1_UABH_B_FILTER_initPairs,
 305:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 306:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 307:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 308:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG1_UABH_B_FILTER_initPairs))
 309:Generated_Source\PSoC4/ADC.c ****     };
 310:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG1_FILTER_PRESENT) */
 311:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG2_FILTER_PRESENT)
 312:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 313:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 314:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 315:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_A_FILTER_initPairs[ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE
 316:Generated_Source\PSoC4/ADC.c ****         {
 317:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 318:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 7


 319:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 320:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 321:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 322:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 323:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_A_STARTUP_DELAY)}
 324:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 325:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 326:Generated_Source\PSoC4/ADC.c ****             
 327:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 328:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 329:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 330:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 331:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 332:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 333:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 334:Generated_Source\PSoC4/ADC.c **** 
 335:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 336:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 337:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 338:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 339:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 340:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 341:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 342:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 343:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 344:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 345:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 346:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 347:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 348:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 349:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 350:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 351:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 352:Generated_Source\PSoC4/ADC.c **** 
 353:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 354:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 355:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 356:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 357:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 358:Generated_Source\PSoC4/ADC.c ****         };
 359:Generated_Source\PSoC4/ADC.c **** 
 360:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 361:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 362:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 363:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_B_FILTER_initPairs[ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE
 364:Generated_Source\PSoC4/ADC.c ****         {
 365:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 366:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 367:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 368:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 369:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 370:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 371:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_B_STARTUP_DELAY)}
 372:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 373:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 374:Generated_Source\PSoC4/ADC.c ****             
 375:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 8


 376:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 377:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 378:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 379:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 380:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 381:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 382:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 383:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 384:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 385:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 386:Generated_Source\PSoC4/ADC.c ****                 
 387:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 388:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 389:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 390:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 391:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 392:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 393:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 394:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 395:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 396:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 397:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 398:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 399:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 400:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 401:Generated_Source\PSoC4/ADC.c ****                 
 402:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 403:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 404:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 405:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 406:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 407:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 408:Generated_Source\PSoC4/ADC.c ****         };
 409:Generated_Source\PSoC4/ADC.c **** 
 410:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_A_FILTER_config = {
 411:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 412:Generated_Source\PSoC4/ADC.c ****             ADC_CFG2_UABH_A_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG2_UABH_A_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC.c ****         };
 418:Generated_Source\PSoC4/ADC.c **** 
 419:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_B_FILTER_config = {
 420:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 421:Generated_Source\PSoC4/ADC.c ****         ADC_CFG2_UABH_B_FILTER_initPairs,
 422:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 423:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 424:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 425:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG2_UABH_B_FILTER_initPairs))
 426:Generated_Source\PSoC4/ADC.c ****     };
 427:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG2_FILTER_PRESENT) */
 428:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG3_FILTER_PRESENT)
 429:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 430:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 431:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 432:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_A_FILTER_initPairs[ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 9


 433:Generated_Source\PSoC4/ADC.c ****         {
 434:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 435:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 436:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 437:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 438:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 439:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 440:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_A_STARTUP_DELAY)}
 441:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 442:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 443:Generated_Source\PSoC4/ADC.c ****             
 444:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 445:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 446:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 447:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 448:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 449:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 450:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 451:Generated_Source\PSoC4/ADC.c **** 
 452:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 453:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 454:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 455:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 456:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 457:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 459:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 460:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 461:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 462:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 463:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 464:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 465:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 466:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 467:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 468:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 469:Generated_Source\PSoC4/ADC.c **** 
 470:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 471:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 472:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 473:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 474:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 475:Generated_Source\PSoC4/ADC.c ****         };
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 478:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 479:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 480:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_B_FILTER_initPairs[ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE
 481:Generated_Source\PSoC4/ADC.c ****         {
 482:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 483:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 484:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 485:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 486:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 487:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 488:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_B_STARTUP_DELAY)}
 489:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 10


 490:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 491:Generated_Source\PSoC4/ADC.c ****             
 492:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 493:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 494:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 495:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 496:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 497:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 498:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 499:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 500:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 501:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 502:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 503:Generated_Source\PSoC4/ADC.c ****                 
 504:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 505:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 506:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 507:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 508:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 509:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 510:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 511:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 512:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 513:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 514:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 515:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 516:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 517:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 518:Generated_Source\PSoC4/ADC.c ****                 
 519:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 520:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 521:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 522:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 523:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 524:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 525:Generated_Source\PSoC4/ADC.c ****         };
 526:Generated_Source\PSoC4/ADC.c **** 
 527:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_A_FILTER_config = {
 528:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 529:Generated_Source\PSoC4/ADC.c ****             ADC_CFG3_UABH_A_FILTER_initPairs,
 530:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 531:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 532:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 533:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG3_UABH_A_FILTER_initPairs))
 534:Generated_Source\PSoC4/ADC.c ****         };
 535:Generated_Source\PSoC4/ADC.c **** 
 536:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_B_FILTER_config = {
 537:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 538:Generated_Source\PSoC4/ADC.c ****         ADC_CFG3_UABH_B_FILTER_initPairs,
 539:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 540:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 541:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 542:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG3_UABH_B_FILTER_initPairs))
 543:Generated_Source\PSoC4/ADC.c ****     };
 544:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG3_FILTER_PRESENT) */
 545:Generated_Source\PSoC4/ADC.c ****     
 546:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 11


 547:Generated_Source\PSoC4/ADC.c **** #endif /* (ADC_ANY_CONFIG_USES_FILTER	!= 0u)	*/
 548:Generated_Source\PSoC4/ADC.c **** 
 549:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 550:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
 551:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 552:Generated_Source\PSoC4/ADC.c **** *
 553:Generated_Source\PSoC4/ADC.c **** * \brief Performs all required initialization for this component and enables the 
 554:Generated_Source\PSoC4/ADC.c **** *  power. The power will be set to the appropriate power based on the clock 
 555:Generated_Source\PSoC4/ADC.c **** *  frequency.
 556:Generated_Source\PSoC4/ADC.c **** * 
 557:Generated_Source\PSoC4/ADC.c **** * \param None
 558:Generated_Source\PSoC4/ADC.c **** * 
 559:Generated_Source\PSoC4/ADC.c **** * \return None
 560:Generated_Source\PSoC4/ADC.c **** * 
 561:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 562:Generated_Source\PSoC4/ADC.c **** *
 563:Generated_Source\PSoC4/ADC.c **** * \globalvars
 564:Generated_Source\PSoC4/ADC.c **** *  \ref ADC_initVar (RW)
 565:Generated_Source\PSoC4/ADC.c **** *
 566:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 567:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Start
 568:Generated_Source\PSoC4/ADC.c **** *
 569:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
 571:Generated_Source\PSoC4/ADC.c **** {
 572:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 573:Generated_Source\PSoC4/ADC.c ****     {
 574:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 575:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 576:Generated_Source\PSoC4/ADC.c ****     }
 577:Generated_Source\PSoC4/ADC.c ****     
 578:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 579:Generated_Source\PSoC4/ADC.c ****     
 580:Generated_Source\PSoC4/ADC.c ****     return;
 581:Generated_Source\PSoC4/ADC.c **** }
 582:Generated_Source\PSoC4/ADC.c **** 
 583:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 584:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartEx
 585:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 586:Generated_Source\PSoC4/ADC.c **** *
 587:Generated_Source\PSoC4/ADC.c **** * \brief This function starts the ADC and sets the Interrupt 
 588:Generated_Source\PSoC4/ADC.c **** * Service Routine to the provided address using the 
 589:Generated_Source\PSoC4/ADC.c **** * ADC_IRQ_StartEx() function. Refer to the Interrupt component 
 590:Generated_Source\PSoC4/ADC.c **** * datasheet for more information on the ADC_IRQ_StartEx() function.
 591:Generated_Source\PSoC4/ADC.c **** * 
 592:Generated_Source\PSoC4/ADC.c **** * \param address This is the address of a user defined function for the ISR.
 593:Generated_Source\PSoC4/ADC.c **** * 
 594:Generated_Source\PSoC4/ADC.c **** * \return None
 595:Generated_Source\PSoC4/ADC.c **** * 
 596:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 597:Generated_Source\PSoC4/ADC.c **** *
 598:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 599:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartEx
 600:Generated_Source\PSoC4/ADC.c **** *
 601:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/ADC.c **** void ADC_StartEx(cyisraddress address)
 603:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 12


 604:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 605:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 606:Generated_Source\PSoC4/ADC.c ****     return;
 607:Generated_Source\PSoC4/ADC.c **** }
 608:Generated_Source\PSoC4/ADC.c **** 
 609:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 611:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest 
 614:Generated_Source\PSoC4/ADC.c **** * power mode.
 615:Generated_Source\PSoC4/ADC.c **** * 
 616:Generated_Source\PSoC4/ADC.c **** * \param None
 617:Generated_Source\PSoC4/ADC.c **** * 
 618:Generated_Source\PSoC4/ADC.c **** * \return None
 619:Generated_Source\PSoC4/ADC.c **** * 
 620:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 621:Generated_Source\PSoC4/ADC.c **** * Do not use the ADC_Stop() API to halt conversions. Instead use the 
 622:Generated_Source\PSoC4/ADC.c **** * ADC_StopConvert() API. If you use the ADC_Stop() API 
 623:Generated_Source\PSoC4/ADC.c **** * to halt conversions then later use the ADC_Start() and 
 624:Generated_Source\PSoC4/ADC.c **** * ADC_StartConvert() APIs to resume conversions, the first channel 
 625:Generated_Source\PSoC4/ADC.c **** * of the scan may be corrupt. The ADC_StopConvert() API will enable 
 626:Generated_Source\PSoC4/ADC.c **** * the ADC to complete the current scan of channels. After the 
 627:Generated_Source\PSoC4/ADC.c **** * channel scan is complete, the ADC will stop all conversions, which 
 628:Generated_Source\PSoC4/ADC.c **** * can be detected by the use of an ISR or the ADC_IsEndConversion() 
 629:Generated_Source\PSoC4/ADC.c **** * flag.
 630:Generated_Source\PSoC4/ADC.c **** *
 631:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 632:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Stop
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 636:Generated_Source\PSoC4/ADC.c **** {	
 637:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 638:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 639:Generated_Source\PSoC4/ADC.c ****     	   & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 640:Generated_Source\PSoC4/ADC.c ****     	   == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 641:Generated_Source\PSoC4/ADC.c ****     	{
 642:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Stop();
 643:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Stop();
 644:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Stop();
 645:Generated_Source\PSoC4/ADC.c ****     	}
 646:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 647:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_SAR_CTRL_ENABLED_MSK;
 648:Generated_Source\PSoC4/ADC.c ****     return;
 649:Generated_Source\PSoC4/ADC.c **** }
 650:Generated_Source\PSoC4/ADC.c **** 
 651:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 652:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_InitConfig
 653:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 654:Generated_Source\PSoC4/ADC.c **** *
 655:Generated_Source\PSoC4/ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * \param scan Number of scan defined in the ADC.
 658:Generated_Source\PSoC4/ADC.c **** *
 659:Generated_Source\PSoC4/ADC.c **** * \return None
 660:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 13


 661:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 662:Generated_Source\PSoC4/ADC.c **** *
 663:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 664:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_InitConfig
 665:Generated_Source\PSoC4/ADC.c **** *
 666:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 667:Generated_Source\PSoC4/ADC.c **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config)
 668:Generated_Source\PSoC4/ADC.c **** {
 669:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 670:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
 671:Generated_Source\PSoC4/ADC.c **** 	
 672:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	        
 673:Generated_Source\PSoC4/ADC.c ****     	if((config->miscConfig & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 674:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 675:Generated_Source\PSoC4/ADC.c ****     	{
 676:Generated_Source\PSoC4/ADC.c ****             ADC_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 677:Generated_Source\PSoC4/ADC.c ****             
 678:Generated_Source\PSoC4/ADC.c ****     	}
 679:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 680:Generated_Source\PSoC4/ADC.c ****     #if (ADC_CLOCK_INTERNAL)
 681:Generated_Source\PSoC4/ADC.c ****         ADC_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 682:Generated_Source\PSoC4/ADC.c ****         
 683:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_CLOCK_INTERNAL */
 684:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 685:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_CTRL_REG = config->ctrl
 686:Generated_Source\PSoC4/ADC.c ****    
 687:Generated_Source\PSoC4/ADC.c **** 	/* Enable the SAR internal pump when global pump is enabled */
 688:Generated_Source\PSoC4/ADC.c ****     | (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) 
 689:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 690:Generated_Source\PSoC4/ADC.c **** 	
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 695:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 696:Generated_Source\PSoC4/ADC.c ****     
 697:Generated_Source\PSoC4/ADC.c **** 	/* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured */
 698:Generated_Source\PSoC4/ADC.c **** 	if(1u == ADC_MUX_SWITCH0_INIT)
 699:Generated_Source\PSoC4/ADC.c **** 	{
 700:Generated_Source\PSoC4/ADC.c **** 		ADC_MUX_SWITCH0_REG |= ADC_MUX_FW_VSSA_VMINUS;
 701:Generated_Source\PSoC4/ADC.c **** 		/* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 702:Generated_Source\PSoC4/ADC.c **** 		if(1ul < config->numChannels)
 703:Generated_Source\PSoC4/ADC.c **** 		{
 704:Generated_Source\PSoC4/ADC.c **** 			ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_MUX_FW_VSSA_VMINUS;
 705:Generated_Source\PSoC4/ADC.c **** 		}
 706:Generated_Source\PSoC4/ADC.c **** 	}
 707:Generated_Source\PSoC4/ADC.c ****     
 708:Generated_Source\PSoC4/ADC.c **** 	/* Clear and set interrupt masks */
 709:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 710:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 713:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 714:Generated_Source\PSoC4/ADC.c ****     
 715:Generated_Source\PSoC4/ADC.c **** 	/* Double the non-overlap delay and latch enable time when using */
 716:Generated_Source\PSoC4/ADC.c ****     /* internal reference without bypass cap */
 717:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 14


 718:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 719:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 720:Generated_Source\PSoC4/ADC.c **** 	    || ((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 721:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 722:Generated_Source\PSoC4/ADC.c **** 	{
 723:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= ~ADC_SAR_DFT_CTRL_DCEN_MSK;
 724:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 725:Generated_Source\PSoC4/ADC.c **** 	}
 726:Generated_Source\PSoC4/ADC.c **** 	else
 727:Generated_Source\PSoC4/ADC.c **** 	{
 728:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DCEN_MSK;
 729:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 730:Generated_Source\PSoC4/ADC.c **** 	}	
 731:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 732:Generated_Source\PSoC4/ADC.c **** 	
 733:Generated_Source\PSoC4/ADC.c **** 	for(chNum = 0u; chNum < config->numChannels; chNum++)
 734:Generated_Source\PSoC4/ADC.c ****     {
 735:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal = (ADC_channelsConfig[config->channelBase + chNum] 
 736:Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 737:Generated_Source\PSoC4/ADC.c ****         
 738:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1)
 739:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[config->channelBase + chNum];
 740:Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 741:Generated_Source\PSoC4/ADC.c ****             if(0u != (ADC_InputsPlacement[config->channelBase + chNum] & ADC_CHANNEL_CONFIG_NEG_ADD
 742:Generated_Source\PSoC4/ADC.c ****             {
 743:Generated_Source\PSoC4/ADC.c ****                 tmpRegVal &= ~ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 744:Generated_Source\PSoC4/ADC.c ****             }
 745:Generated_Source\PSoC4/ADC.c ****         #endif
 746:Generated_Source\PSoC4/ADC.c ****         
 747:Generated_Source\PSoC4/ADC.c **** 		CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 748:Generated_Source\PSoC4/ADC.c **** 	}
 749:Generated_Source\PSoC4/ADC.c **** 	
 750:Generated_Source\PSoC4/ADC.c ****     return;
 751:Generated_Source\PSoC4/ADC.c **** }
 752:Generated_Source\PSoC4/ADC.c **** 
 753:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 754:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SelectConfig
 755:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 756:Generated_Source\PSoC4/ADC.c **** *
 757:Generated_Source\PSoC4/ADC.c **** * \brief Selects the predefined configuration for scanning. Disables
 758:Generated_Source\PSoC4/ADC.c **** * and re-enables the SAR and filter (if filter used).
 759:Generated_Source\PSoC4/ADC.c **** * 
 760:Generated_Source\PSoC4/ADC.c **** * \param config Number of configuration  in the ADC.
 761:Generated_Source\PSoC4/ADC.c **** * 
 762:Generated_Source\PSoC4/ADC.c **** * \param restart Determines if the ADC should be  restarted after 
 763:Generated_Source\PSoC4/ADC.c **** * selecting the configuration.
 764:Generated_Source\PSoC4/ADC.c **** **
 765:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 766:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SelectConfig
 767:Generated_Source\PSoC4/ADC.c **** *
 768:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 769:Generated_Source\PSoC4/ADC.c **** void ADC_SelectConfig(uint32 config, uint32 restart)
 770:Generated_Source\PSoC4/ADC.c **** {
 771:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 772:Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CONFIGS > config)
 773:Generated_Source\PSoC4/ADC.c ****     {        
 774:Generated_Source\PSoC4/ADC.c ****         /* Stop the ADC before changing configurations */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 15


 775:Generated_Source\PSoC4/ADC.c **** 	    ADC_Stop();
 776:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 777:Generated_Source\PSoC4/ADC.c ****         
 778:Generated_Source\PSoC4/ADC.c ****     	if(0u == ADC_initVar)
 779:Generated_Source\PSoC4/ADC.c ****     	{
 780:Generated_Source\PSoC4/ADC.c ****             ADC_Init();
 781:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 782:Generated_Source\PSoC4/ADC.c ****     	}
 783:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 784:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_DisconnectAll();
 785:Generated_Source\PSoC4/ADC.c ****         #endif
 786:Generated_Source\PSoC4/ADC.c ****     	ADC_InitConfig(&ADC_allConfigs[config]);
 787:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 788:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_Select((uint8)config);
 789:Generated_Source\PSoC4/ADC.c ****         #endif
 790:Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 791:Generated_Source\PSoC4/ADC.c ****             ADC_filterVinMux_Select((uint8)config);
 792:Generated_Source\PSoC4/ADC.c ****             ADC_filterInit(config);
 793:Generated_Source\PSoC4/ADC.c ****         #endif
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_CHAN_EN_REG = ADC_allConfigs[config].chanEn;
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 797:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 798:Generated_Source\PSoC4/ADC.c ****         
 799:Generated_Source\PSoC4/ADC.c ****         if(1u == restart)
 800:Generated_Source\PSoC4/ADC.c ****         {
 801:Generated_Source\PSoC4/ADC.c ****             /* Restart the ADC */    
 802:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 803:Generated_Source\PSoC4/ADC.c ****             
 804:Generated_Source\PSoC4/ADC.c ****             /* Restart the scan */
 805:Generated_Source\PSoC4/ADC.c ****             ADC_StartConvert();
 806:Generated_Source\PSoC4/ADC.c ****         }
 807:Generated_Source\PSoC4/ADC.c ****     }
 808:Generated_Source\PSoC4/ADC.c ****     return;
 809:Generated_Source\PSoC4/ADC.c **** }
 810:Generated_Source\PSoC4/ADC.c **** 
 811:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 812:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 813:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 814:Generated_Source\PSoC4/ADC.c **** *
 815:Generated_Source\PSoC4/ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs 
 816:Generated_Source\PSoC4/ADC.c **** * continuously. 
 817:Generated_Source\PSoC4/ADC.c **** 
 818:Generated_Source\PSoC4/ADC.c **** * In Single Shot mode, the function triggers a single scan and 
 819:Generated_Source\PSoC4/ADC.c **** * every scan requires a call of this function. The mode is set with the 
 820:Generated_Source\PSoC4/ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be 
 821:Generated_Source\PSoC4/ADC.c **** * overridden at run time with the ADC_SetConvertMode() function.
 822:Generated_Source\PSoC4/ADC.c **** * 
 823:Generated_Source\PSoC4/ADC.c **** * \param None
 824:Generated_Source\PSoC4/ADC.c **** * 
 825:Generated_Source\PSoC4/ADC.c **** * \return None
 826:Generated_Source\PSoC4/ADC.c **** * 
 827:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 828:Generated_Source\PSoC4/ADC.c **** *
 829:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 830:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartConvert
 831:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 16


 832:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 833:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 834:Generated_Source\PSoC4/ADC.c **** {
 835:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 836:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 837:Generated_Source\PSoC4/ADC.c ****         ADC_Stop();
 838:Generated_Source\PSoC4/ADC.c ****         ADC_Start();
 839:Generated_Source\PSoC4/ADC.c ****     #endif
 840:Generated_Source\PSoC4/ADC.c ****     
 841:Generated_Source\PSoC4/ADC.c **** 	/* Freerunning mode */
 842:Generated_Source\PSoC4/ADC.c **** 	if((ADC_SAR_SAMPLE_CTRL_REG 
 843:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 844:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 845:Generated_Source\PSoC4/ADC.c ****     {
 846:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 847:Generated_Source\PSoC4/ADC.c **** 	}
 848:Generated_Source\PSoC4/ADC.c **** 	else /* Firmware trigger */
 849:Generated_Source\PSoC4/ADC.c **** 	{
 850:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_START_CTRL_REG = ADC_SAR_START_CTRL_FW_TRIGGER_MSK;
 851:Generated_Source\PSoC4/ADC.c **** 	}
 852:Generated_Source\PSoC4/ADC.c ****     
 853:Generated_Source\PSoC4/ADC.c ****     return;
 854:Generated_Source\PSoC4/ADC.c **** }
 855:Generated_Source\PSoC4/ADC.c **** 
 856:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 858:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 859:Generated_Source\PSoC4/ADC.c **** *
 860:Generated_Source\PSoC4/ADC.c **** * \brief Forces the ADC to stop conversions. If a conversion is 
 861:Generated_Source\PSoC4/ADC.c **** * currently executing, that conversion will complete, but no further conversions 
 862:Generated_Source\PSoC4/ADC.c **** * will occur.
 863:Generated_Source\PSoC4/ADC.c **** * 
 864:Generated_Source\PSoC4/ADC.c **** * \param None
 865:Generated_Source\PSoC4/ADC.c **** *
 866:Generated_Source\PSoC4/ADC.c **** * \return None
 867:Generated_Source\PSoC4/ADC.c **** *
 868:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 869:Generated_Source\PSoC4/ADC.c **** *
 870:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 871:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StopConvert
 872:Generated_Source\PSoC4/ADC.c **** *
 873:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 874:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 875:Generated_Source\PSoC4/ADC.c **** {
 876:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 877:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 878:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 879:Generated_Source\PSoC4/ADC.c **** 	{
 880:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 881:Generated_Source\PSoC4/ADC.c ****         
 882:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 883:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 884:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 885:Generated_Source\PSoC4/ADC.c ****         {
 886:Generated_Source\PSoC4/ADC.c ****             /* Re-synchronize the Filter if a filter is present */
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Stop();
 888:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 17


 889:Generated_Source\PSoC4/ADC.c ****         }
 890:Generated_Source\PSoC4/ADC.c **** 	}
 891:Generated_Source\PSoC4/ADC.c ****     
 892:Generated_Source\PSoC4/ADC.c ****     return;
 893:Generated_Source\PSoC4/ADC.c **** }
 894:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 895:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetConvertMode
 896:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 897:Generated_Source\PSoC4/ADC.c **** *
 898:Generated_Source\PSoC4/ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This 
 899:Generated_Source\PSoC4/ADC.c **** * function overrides the settings applied in the customizer. Changing 
 900:Generated_Source\PSoC4/ADC.c **** * configurations will restore the values set in the customizer.
 901:Generated_Source\PSoC4/ADC.c **** *
 902:Generated_Source\PSoC4/ADC.c **** * \param mode Sets the conversion mode. See table below for details.
 903:Generated_Source\PSoC4/ADC.c **** * | Options                          | Description                             |
 904:Generated_Source\PSoC4/ADC.c **** * | :------------------------------- | :-------------------------------------- |
 905:Generated_Source\PSoC4/ADC.c **** * | ADC_SINGLE_SHOT     | Calling the ADC_StartConvert() function after setting mode this will trig
 906:Generated_Source\PSoC4/ADC.c **** * | ADC_CONTINUOUS      | Calling the ADC_StartConvert() function after setting this mode trigger c
 907:Generated_Source\PSoC4/ADC.c **** *
 908:Generated_Source\PSoC4/ADC.c **** * \return None
 909:Generated_Source\PSoC4/ADC.c **** * 
 910:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 911:Generated_Source\PSoC4/ADC.c **** *
 912:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 913:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetConvertMode
 914:Generated_Source\PSoC4/ADC.c **** *
 915:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 916:Generated_Source\PSoC4/ADC.c **** void ADC_SetConvertMode(uint32 mode)
 917:Generated_Source\PSoC4/ADC.c **** {
 918:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 919:Generated_Source\PSoC4/ADC.c ****     {
 920:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 921:Generated_Source\PSoC4/ADC.c ****     }
 922:Generated_Source\PSoC4/ADC.c ****     else
 923:Generated_Source\PSoC4/ADC.c ****     {
 924:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 925:Generated_Source\PSoC4/ADC.c ****     }
 926:Generated_Source\PSoC4/ADC.c **** }
 927:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 928:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Enable
 929:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 930:Generated_Source\PSoC4/ADC.c **** *
 931:Generated_Source\PSoC4/ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global 
 932:Generated_Source\PSoC4/ADC.c **** * interrupts must also be enabled for the ADC interrupts to occur.
 933:Generated_Source\PSoC4/ADC.c **** *
 934:Generated_Source\PSoC4/ADC.c **** * \param None
 935:Generated_Source\PSoC4/ADC.c **** *
 936:Generated_Source\PSoC4/ADC.c **** * \return None
 937:Generated_Source\PSoC4/ADC.c **** *
 938:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 939:Generated_Source\PSoC4/ADC.c **** *
 940:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 941:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Enable
 942:Generated_Source\PSoC4/ADC.c **** *
 943:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 944:Generated_Source\PSoC4/ADC.c **** 
 945:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 18


 946:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 947:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Disable
 948:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 949:Generated_Source\PSoC4/ADC.c **** *
 950:Generated_Source\PSoC4/ADC.c **** * \brief Disables end of conversion interrupts. 
 951:Generated_Source\PSoC4/ADC.c **** *
 952:Generated_Source\PSoC4/ADC.c **** * \param None
 953:Generated_Source\PSoC4/ADC.c **** * 
 954:Generated_Source\PSoC4/ADC.c **** * \return None
 955:Generated_Source\PSoC4/ADC.c **** * 
 956:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 957:Generated_Source\PSoC4/ADC.c **** *
 958:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 959:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Disable
 960:Generated_Source\PSoC4/ADC.c **** *
 961:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/ADC.c **** 
 963:Generated_Source\PSoC4/ADC.c **** 
 964:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 965:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetEosMask
 966:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 967:Generated_Source\PSoC4/ADC.c **** *
 968:Generated_Source\PSoC4/ADC.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask. 
 969:Generated_Source\PSoC4/ADC.c **** *
 970:Generated_Source\PSoC4/ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 971:Generated_Source\PSoC4/ADC.c **** *
 972:Generated_Source\PSoC4/ADC.c **** * \return None
 973:Generated_Source\PSoC4/ADC.c **** * 
 974:Generated_Source\PSoC4/ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 975:Generated_Source\PSoC4/ADC.c **** *
 976:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 977:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetEosMask
 978:Generated_Source\PSoC4/ADC.c **** *
 979:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 980:Generated_Source\PSoC4/ADC.c **** void ADC_SetEosMask(uint32 mask)
 981:Generated_Source\PSoC4/ADC.c **** {
 982:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 983:Generated_Source\PSoC4/ADC.c ****     
 984:Generated_Source\PSoC4/ADC.c ****     return;
 985:Generated_Source\PSoC4/ADC.c **** }
 986:Generated_Source\PSoC4/ADC.c **** 
 987:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 988:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 989:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 990:Generated_Source\PSoC4/ADC.c **** *
 991:Generated_Source\PSoC4/ADC.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 992:Generated_Source\PSoC4/ADC.c **** *
 993:Generated_Source\PSoC4/ADC.c **** *
 994:Generated_Source\PSoC4/ADC.c **** * \param enableMask
 995:Generated_Source\PSoC4/ADC.c **** *  Channel enable/disable mask.
 996:Generated_Source\PSoC4/ADC.c **** *
 997:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 998:Generated_Source\PSoC4/ADC.c **** *  None.
 999:Generated_Source\PSoC4/ADC.c **** *
1000:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1001:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetChanMask
1002:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 19


1003:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1004:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 enableMask)
1005:Generated_Source\PSoC4/ADC.c **** {
1006:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
1007:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1008:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
1009:Generated_Source\PSoC4/ADC.c ****     return;
1010:Generated_Source\PSoC4/ADC.c **** }
1011:Generated_Source\PSoC4/ADC.c **** 
1012:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1013:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
1014:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1015:Generated_Source\PSoC4/ADC.c **** *
1016:Generated_Source\PSoC4/ADC.c **** * \brief Immediately returns the status of the conversion or does not return 
1017:Generated_Source\PSoC4/ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
1018:Generated_Source\PSoC4/ADC.c **** *
1019:Generated_Source\PSoC4/ADC.c **** * \param retMode Check conversion return mode. See the following table for 
1020:Generated_Source\PSoC4/ADC.c **** * options.
1021:Generated_Source\PSoC4/ADC.c **** * | Options                              | Description                             |
1022:Generated_Source\PSoC4/ADC.c **** * | :-------------------------------     | :-------------------------------------- |
1023:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. If
1024:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT     | Does not return a result until the ADC conversion of all sequential c
1025:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS_INJ   | Immediately returns the conversion status for the injection channel. 
1026:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT_INJ | Does not return a result until the ADC completes injection channel co
1027:Generated_Source\PSoC4/ADC.c **** * 
1028:Generated_Source\PSoC4/ADC.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete. 
1029:Generated_Source\PSoC4/ADC.c **** * If the returned value is zero, the ADC is still calculating the last result.
1030:Generated_Source\PSoC4/ADC.c **** *
1031:Generated_Source\PSoC4/ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1032:Generated_Source\PSoC4/ADC.c **** * 
1033:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1034:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IsEndConversion
1035:Generated_Source\PSoC4/ADC.c **** *
1036:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1037:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
1038:Generated_Source\PSoC4/ADC.c **** {
1039:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
1040:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1041:Generated_Source\PSoC4/ADC.c ****     if((ADC_RETURN_STATUS == retMode) || (ADC_WAIT_FOR_RESULT == retMode))
1042:Generated_Source\PSoC4/ADC.c ****     {
1043:Generated_Source\PSoC4/ADC.c ****         do
1044:Generated_Source\PSoC4/ADC.c ****         {
1045:Generated_Source\PSoC4/ADC.c ****             endOfConversion = ADC_SAR_INTR_REG & ADC_EOS_MASK;
1046:Generated_Source\PSoC4/ADC.c ****             wdt--;
1047:Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
1048:Generated_Source\PSoC4/ADC.c ****             && (((uint32) retMode & ADC_WAIT_FOR_RESULT) != 0u))
1049:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
1050:Generated_Source\PSoC4/ADC.c **** 
1051:Generated_Source\PSoC4/ADC.c ****         if(0u != endOfConversion)
1052:Generated_Source\PSoC4/ADC.c ****         {
1053:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
1054:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
1055:Generated_Source\PSoC4/ADC.c ****         }
1056:Generated_Source\PSoC4/ADC.c ****     }
1057:Generated_Source\PSoC4/ADC.c ****     
1058:Generated_Source\PSoC4/ADC.c ****     return endOfConversion;
1059:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 20


1060:Generated_Source\PSoC4/ADC.c ****  
1061:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1062:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsChannelSigned(uint32 chan)
1063:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1064:Generated_Source\PSoC4/ADC.c **** *
1065:Generated_Source\PSoC4/ADC.c **** * Determines if the provided channel is in signed format. 
1066:Generated_Source\PSoC4/ADC.c **** *
1067:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to check. 
1068:Generated_Source\PSoC4/ADC.c **** *
1069:Generated_Source\PSoC4/ADC.c **** * \return None
1070:Generated_Source\PSoC4/ADC.c **** * 
1071:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1072:Generated_Source\PSoC4/ADC.c **** *
1073:Generated_Source\PSoC4/ADC.c **** *
1074:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1075:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan)
1076:Generated_Source\PSoC4/ADC.c **** {
  25              		.loc 1 1076 0
  26              		.cfi_startproc
  27              	.LVL0:
1077:Generated_Source\PSoC4/ADC.c ****     int32 isSigned = 0;
1078:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
1079:Generated_Source\PSoC4/ADC.c ****     
1080:Generated_Source\PSoC4/ADC.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  28              		.loc 1 1080 0
  29 0000 8000     		lsl	r0, r0, #2
  30              	.LVL1:
  31 0002 114B     		ldr	r3, .L6
  32 0004 9C46     		mov	ip, r3
  33 0006 6044     		add	r0, r0, ip
  34 0008 0268     		ldr	r2, [r0]
  35              	.LVL2:
1081:Generated_Source\PSoC4/ADC.c ****     /* If differential mode */
1082:Generated_Source\PSoC4/ADC.c ****     if(0u != (chanConfig & ADC_CHANNEL_CONFIG_DIFF_ALL_MSK))
  36              		.loc 1 1082 0
  37 000a 104B     		ldr	r3, .L6+4
  38 000c 1A42     		tst	r2, r3
  39 000e 0BD0     		beq	.L2
1083:Generated_Source\PSoC4/ADC.c ****     {
1084:Generated_Source\PSoC4/ADC.c ****         /*If signed differential */
1085:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
  40              		.loc 1 1085 0
  41 0010 0F4B     		ldr	r3, .L6+8
  42 0012 1A68     		ldr	r2, [r3]
  43              	.LVL3:
  44 0014 D300     		lsl	r3, r2, #3
  45 0016 9B1A     		sub	r3, r3, r2
  46 0018 DB00     		lsl	r3, r3, #3
  47 001a 0E4A     		ldr	r2, .L6+12
  48 001c D318     		add	r3, r2, r3
  49 001e DB68     		ldr	r3, [r3, #12]
  50 0020 1B07     		lsl	r3, r3, #28
  51 0022 0DD4     		bmi	.L4
1077:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  52              		.loc 1 1077 0
  53 0024 0020     		mov	r0, #0
  54 0026 0EE0     		b	.L3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 21


  55              	.LVL4:
  56              	.L2:
1086:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1087:Generated_Source\PSoC4/ADC.c ****         {
1088:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
1089:Generated_Source\PSoC4/ADC.c ****         }
1090:Generated_Source\PSoC4/ADC.c ****     }
1091:Generated_Source\PSoC4/ADC.c ****     else
1092:Generated_Source\PSoC4/ADC.c ****     {
1093:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl
  57              		.loc 1 1093 0
  58 0028 094B     		ldr	r3, .L6+8
  59 002a 1A68     		ldr	r2, [r3]
  60              	.LVL5:
  61 002c D300     		lsl	r3, r2, #3
  62 002e 9B1A     		sub	r3, r3, r2
  63 0030 DB00     		lsl	r3, r3, #3
  64 0032 084A     		ldr	r2, .L6+12
  65 0034 D318     		add	r3, r2, r3
  66 0036 DB68     		ldr	r3, [r3, #12]
  67 0038 5B07     		lsl	r3, r3, #29
  68 003a 03D4     		bmi	.L5
1077:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  69              		.loc 1 1077 0
  70 003c 0020     		mov	r0, #0
  71 003e 02E0     		b	.L3
  72              	.L4:
1088:Generated_Source\PSoC4/ADC.c ****         }
  73              		.loc 1 1088 0
  74 0040 0120     		mov	r0, #1
  75 0042 00E0     		b	.L3
  76              	.L5:
1094:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1095:Generated_Source\PSoC4/ADC.c ****         {
1096:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
  77              		.loc 1 1096 0
  78 0044 0120     		mov	r0, #1
  79              	.L3:
  80              	.LVL6:
1097:Generated_Source\PSoC4/ADC.c ****         }
1098:Generated_Source\PSoC4/ADC.c ****     }
1099:Generated_Source\PSoC4/ADC.c ****     return isSigned;
1100:Generated_Source\PSoC4/ADC.c **** }
  81              		.loc 1 1100 0
  82              		@ sp needed
  83 0046 7047     		bx	lr
  84              	.L7:
  85              		.align	2
  86              	.L6:
  87 0048 80003A40 		.word	1077543040
  88 004c 00010001 		.word	16777472
  89 0050 00000000 		.word	.LANCHOR0
  90 0054 00000000 		.word	ADC_allConfigs
  91              		.cfi_endproc
  92              	.LFE12:
  93              		.size	ADC_IsChannelSigned, .-ADC_IsChannelSigned
  94              		.section	.text.ADC_Stop,"ax",%progbits
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 22


  95              		.align	2
  96              		.global	ADC_Stop
  97              		.code	16
  98              		.thumb_func
  99              		.type	ADC_Stop, %function
 100              	ADC_Stop:
 101              	.LFB3:
 636:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 102              		.loc 1 636 0
 103              		.cfi_startproc
 647:Generated_Source\PSoC4/ADC.c ****     return;
 104              		.loc 1 647 0
 105 0000 024A     		ldr	r2, .L9
 106 0002 1368     		ldr	r3, [r2]
 107 0004 5B00     		lsl	r3, r3, #1
 108 0006 5B08     		lsr	r3, r3, #1
 109 0008 1360     		str	r3, [r2]
 649:Generated_Source\PSoC4/ADC.c **** 
 110              		.loc 1 649 0
 111              		@ sp needed
 112 000a 7047     		bx	lr
 113              	.L10:
 114              		.align	2
 115              	.L9:
 116 000c 00003A40 		.word	1077542912
 117              		.cfi_endproc
 118              	.LFE3:
 119              		.size	ADC_Stop, .-ADC_Stop
 120              		.section	.text.ADC_InitConfig,"ax",%progbits
 121              		.align	2
 122              		.global	ADC_InitConfig
 123              		.code	16
 124              		.thumb_func
 125              		.type	ADC_InitConfig, %function
 126              	ADC_InitConfig:
 127              	.LFB4:
 668:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 128              		.loc 1 668 0
 129              		.cfi_startproc
 130              	.LVL7:
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 135 0002 041C     		mov	r4, r0
 681:Generated_Source\PSoC4/ADC.c ****         
 136              		.loc 1 681 0
 137 0004 808E     		ldrh	r0, [r0, #52]
 138              	.LVL8:
 139 0006 0021     		mov	r1, #0
 140 0008 FFF7FEFF 		bl	ADC_intSarClock_SetFractionalDividerRegister
 141              	.LVL9:
 685:Generated_Source\PSoC4/ADC.c ****    
 142              		.loc 1 685 0
 143 000c A268     		ldr	r2, [r4, #8]
 688:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 144              		.loc 1 688 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 23


 145 000e 2A4B     		ldr	r3, .L20
 146 0010 1B68     		ldr	r3, [r3]
 147 0012 002B     		cmp	r3, #0
 148 0014 02DA     		bge	.L19
 149 0016 8023     		mov	r3, #128
 150 0018 5B03     		lsl	r3, r3, #13
 151 001a 00E0     		b	.L12
 152              	.L19:
 153 001c 0023     		mov	r3, #0
 154              	.L12:
 688:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 155              		.loc 1 688 0 is_stmt 0 discriminator 4
 156 001e 1343     		orr	r3, r2
 685:Generated_Source\PSoC4/ADC.c ****    
 157              		.loc 1 685 0 is_stmt 1 discriminator 4
 158 0020 264A     		ldr	r2, .L20+4
 159 0022 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 160              		.loc 1 691 0 discriminator 4
 161 0024 264B     		ldr	r3, .L20+8
 162 0026 E268     		ldr	r2, [r4, #12]
 163 0028 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 164              		.loc 1 692 0 discriminator 4
 165 002a 264B     		ldr	r3, .L20+12
 166 002c A269     		ldr	r2, [r4, #24]
 167 002e 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 168              		.loc 1 693 0 discriminator 4
 169 0030 254B     		ldr	r3, .L20+16
 170 0032 E269     		ldr	r2, [r4, #28]
 171 0034 1A60     		str	r2, [r3]
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 172              		.loc 1 694 0 discriminator 4
 173 0036 254B     		ldr	r3, .L20+20
 174 0038 2269     		ldr	r2, [r4, #16]
 175 003a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC4/ADC.c ****     
 176              		.loc 1 695 0 discriminator 4
 177 003c 244B     		ldr	r3, .L20+24
 178 003e 6269     		ldr	r2, [r4, #20]
 179 0040 1A60     		str	r2, [r3]
 709:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 180              		.loc 1 709 0 discriminator 4
 181 0042 244A     		ldr	r2, .L20+28
 182 0044 0021     		mov	r1, #0
 183 0046 1160     		str	r1, [r2]
 710:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 184              		.loc 1 710 0 discriminator 4
 185 0048 234B     		ldr	r3, .L20+32
 186 004a 1960     		str	r1, [r3]
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 187              		.loc 1 711 0 discriminator 4
 188 004c A16A     		ldr	r1, [r4, #40]
 189 004e 1160     		str	r1, [r2]
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 190              		.loc 1 712 0 discriminator 4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 24


 191 0050 626A     		ldr	r2, [r4, #36]
 192 0052 1A60     		str	r2, [r3]
 713:Generated_Source\PSoC4/ADC.c ****     
 193              		.loc 1 713 0 discriminator 4
 194 0054 0122     		mov	r2, #1
 195 0056 214B     		ldr	r3, .L20+36
 196 0058 1A60     		str	r2, [r3]
 717:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 197              		.loc 1 717 0 discriminator 4
 198 005a 214B     		ldr	r3, .L20+40
 199 005c 1B68     		ldr	r3, [r3]
 200              	.LVL10:
 718:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 201              		.loc 1 718 0 discriminator 4
 202 005e EF32     		add	r2, r2, #239
 203 0060 A168     		ldr	r1, [r4, #8]
 204 0062 0A40     		and	r2, r1
 205 0064 402A     		cmp	r2, #64
 206 0066 01D0     		beq	.L13
 720:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 207              		.loc 1 720 0
 208 0068 002A     		cmp	r2, #0
 209 006a 04D1     		bne	.L14
 210              	.L13:
 723:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 211              		.loc 1 723 0
 212 006c 1D4A     		ldr	r2, .L20+44
 213 006e 1340     		and	r3, r2
 214              	.LVL11:
 724:Generated_Source\PSoC4/ADC.c **** 	}
 215              		.loc 1 724 0
 216 0070 0122     		mov	r2, #1
 217 0072 1343     		orr	r3, r2
 218              	.LVL12:
 219 0074 04E0     		b	.L15
 220              	.L14:
 221              	.LVL13:
 729:Generated_Source\PSoC4/ADC.c **** 	}	
 222              		.loc 1 729 0
 223 0076 0122     		mov	r2, #1
 224 0078 9343     		bic	r3, r2
 225              	.LVL14:
 226 007a 8022     		mov	r2, #128
 227 007c 9205     		lsl	r2, r2, #22
 228 007e 1343     		orr	r3, r2
 229              	.LVL15:
 230              	.L15:
 731:Generated_Source\PSoC4/ADC.c **** 	
 231              		.loc 1 731 0
 232 0080 174A     		ldr	r2, .L20+40
 233 0082 1360     		str	r3, [r2]
 234              	.LVL16:
 733:Generated_Source\PSoC4/ADC.c ****     {
 235              		.loc 1 733 0
 236 0084 0021     		mov	r1, #0
 237 0086 13E0     		b	.L16
 238              	.LVL17:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 25


 239              	.L18:
 735:Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 240              		.loc 1 735 0
 241 0088 2368     		ldr	r3, [r4]
 242 008a 5A18     		add	r2, r3, r1
 243 008c 9200     		lsl	r2, r2, #2
 244 008e 164B     		ldr	r3, .L20+48
 245 0090 D058     		ldr	r0, [r2, r3]
 246 0092 164B     		ldr	r3, .L20+52
 247 0094 0340     		and	r3, r0
 248              	.LVL18:
 739:Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 249              		.loc 1 739 0
 250 0096 1648     		ldr	r0, .L20+56
 251 0098 1258     		ldr	r2, [r2, r0]
 252 009a 1343     		orr	r3, r2
 253              	.LVL19:
 741:Generated_Source\PSoC4/ADC.c ****             {
 254              		.loc 1 741 0
 255 009c D201     		lsl	r2, r2, #7
 256 009e 01D5     		bpl	.L17
 743:Generated_Source\PSoC4/ADC.c ****             }
 257              		.loc 1 743 0
 258 00a0 144A     		ldr	r2, .L20+60
 259 00a2 1340     		and	r3, r2
 260              	.LVL20:
 261              	.L17:
 747:Generated_Source\PSoC4/ADC.c **** 	}
 262              		.loc 1 747 0 discriminator 2
 263 00a4 8A00     		lsl	r2, r1, #2
 264 00a6 1448     		ldr	r0, .L20+64
 265 00a8 8446     		mov	ip, r0
 266 00aa 6244     		add	r2, r2, ip
 267 00ac 1360     		str	r3, [r2]
 733:Generated_Source\PSoC4/ADC.c ****     {
 268              		.loc 1 733 0 discriminator 2
 269 00ae 0131     		add	r1, r1, #1
 270              	.LVL21:
 271              	.L16:
 733:Generated_Source\PSoC4/ADC.c ****     {
 272              		.loc 1 733 0 is_stmt 0 discriminator 1
 273 00b0 6368     		ldr	r3, [r4, #4]
 274              	.LVL22:
 275 00b2 8B42     		cmp	r3, r1
 276 00b4 E8D8     		bhi	.L18
 751:Generated_Source\PSoC4/ADC.c **** 
 277              		.loc 1 751 0 is_stmt 1
 278              		@ sp needed
 279              	.LVL23:
 280 00b6 10BD     		pop	{r4, pc}
 281              	.L21:
 282              		.align	2
 283              	.L20:
 284 00b8 80033A40 		.word	1077543808
 285 00bc 00003A40 		.word	1077542912
 286 00c0 04003A40 		.word	1077542916
 287 00c4 18003A40 		.word	1077542936
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 26


 288 00c8 1C003A40 		.word	1077542940
 289 00cc 10003A40 		.word	1077542928
 290 00d0 14003A40 		.word	1077542932
 291 00d4 28023A40 		.word	1077543464
 292 00d8 38023A40 		.word	1077543480
 293 00dc 18023A40 		.word	1077543448
 294 00e0 30003A40 		.word	1077542960
 295 00e4 FFFFFFDF 		.word	-536870913
 296 00e8 00000000 		.word	.LANCHOR1
 297 00ec 00370080 		.word	-2147469568
 298 00f0 00000000 		.word	ADC_InputsPlacement
 299 00f4 FFFEFFFF 		.word	-257
 300 00f8 80003A40 		.word	1077543040
 301              		.cfi_endproc
 302              	.LFE4:
 303              		.size	ADC_InitConfig, .-ADC_InitConfig
 304              		.section	.text.ADC_StartConvert,"ax",%progbits
 305              		.align	2
 306              		.global	ADC_StartConvert
 307              		.code	16
 308              		.thumb_func
 309              		.type	ADC_StartConvert, %function
 310              	ADC_StartConvert:
 311              	.LFB6:
 834:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 312              		.loc 1 834 0
 313              		.cfi_startproc
 842:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 314              		.loc 1 842 0
 315 0000 074B     		ldr	r3, .L25
 316 0002 1B68     		ldr	r3, [r3]
 317 0004 5B03     		lsl	r3, r3, #13
 318 0006 06D5     		bpl	.L23
 846:Generated_Source\PSoC4/ADC.c **** 	}
 319              		.loc 1 846 0
 320 0008 054A     		ldr	r2, .L25
 321 000a 1368     		ldr	r3, [r2]
 322 000c 8021     		mov	r1, #128
 323 000e 4902     		lsl	r1, r1, #9
 324 0010 0B43     		orr	r3, r1
 325 0012 1360     		str	r3, [r2]
 326 0014 02E0     		b	.L22
 327              	.L23:
 850:Generated_Source\PSoC4/ADC.c **** 	}
 328              		.loc 1 850 0
 329 0016 0122     		mov	r2, #1
 330 0018 024B     		ldr	r3, .L25+4
 331 001a 1A60     		str	r2, [r3]
 332              	.L22:
 854:Generated_Source\PSoC4/ADC.c **** 
 333              		.loc 1 854 0
 334              		@ sp needed
 335 001c 7047     		bx	lr
 336              	.L26:
 337 001e C046     		.align	2
 338              	.L25:
 339 0020 04003A40 		.word	1077542916
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 27


 340 0024 24003A40 		.word	1077542948
 341              		.cfi_endproc
 342              	.LFE6:
 343              		.size	ADC_StartConvert, .-ADC_StartConvert
 344              		.section	.text.ADC_SetConvertMode,"ax",%progbits
 345              		.align	2
 346              		.global	ADC_SetConvertMode
 347              		.code	16
 348              		.thumb_func
 349              		.type	ADC_SetConvertMode, %function
 350              	ADC_SetConvertMode:
 351              	.LFB8:
 917:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 352              		.loc 1 917 0
 353              		.cfi_startproc
 354              	.LVL24:
 918:Generated_Source\PSoC4/ADC.c ****     {
 355              		.loc 1 918 0
 356 0000 0128     		cmp	r0, #1
 357 0002 06D1     		bne	.L28
 920:Generated_Source\PSoC4/ADC.c ****     }
 358              		.loc 1 920 0
 359 0004 064A     		ldr	r2, .L30
 360 0006 1368     		ldr	r3, [r2]
 361 0008 8021     		mov	r1, #128
 362 000a C902     		lsl	r1, r1, #11
 363 000c 0B43     		orr	r3, r1
 364 000e 1360     		str	r3, [r2]
 365 0010 04E0     		b	.L27
 366              	.L28:
 924:Generated_Source\PSoC4/ADC.c ****     }
 367              		.loc 1 924 0
 368 0012 034A     		ldr	r2, .L30
 369 0014 1168     		ldr	r1, [r2]
 370 0016 034B     		ldr	r3, .L30+4
 371 0018 0B40     		and	r3, r1
 372 001a 1360     		str	r3, [r2]
 373              	.L27:
 926:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 374              		.loc 1 926 0
 375              		@ sp needed
 376 001c 7047     		bx	lr
 377              	.L31:
 378 001e C046     		.align	2
 379              	.L30:
 380 0020 04003A40 		.word	1077542916
 381 0024 FFFFFBFF 		.word	-262145
 382              		.cfi_endproc
 383              	.LFE8:
 384              		.size	ADC_SetConvertMode, .-ADC_SetConvertMode
 385              		.section	.text.ADC_SetEosMask,"ax",%progbits
 386              		.align	2
 387              		.global	ADC_SetEosMask
 388              		.code	16
 389              		.thumb_func
 390              		.type	ADC_SetEosMask, %function
 391              	ADC_SetEosMask:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 28


 392              	.LFB9:
 981:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 393              		.loc 1 981 0
 394              		.cfi_startproc
 395              	.LVL25:
 982:Generated_Source\PSoC4/ADC.c ****     
 396              		.loc 1 982 0
 397 0000 0123     		mov	r3, #1
 398 0002 1840     		and	r0, r3
 399              	.LVL26:
 400 0004 014B     		ldr	r3, .L33
 401 0006 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC.c **** 
 402              		.loc 1 985 0
 403              		@ sp needed
 404 0008 7047     		bx	lr
 405              	.L34:
 406 000a C046     		.align	2
 407              	.L33:
 408 000c 18023A40 		.word	1077543448
 409              		.cfi_endproc
 410              	.LFE9:
 411              		.size	ADC_SetEosMask, .-ADC_SetEosMask
 412              		.section	.text.ADC_SetChanMask,"ax",%progbits
 413              		.align	2
 414              		.global	ADC_SetChanMask
 415              		.code	16
 416              		.thumb_func
 417              		.type	ADC_SetChanMask, %function
 418              	ADC_SetChanMask:
 419              	.LFB10:
1005:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 420              		.loc 1 1005 0
 421              		.cfi_startproc
 422              	.LVL27:
1006:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 423              		.loc 1 1006 0
 424 0000 074B     		ldr	r3, .L36
 425 0002 1A68     		ldr	r2, [r3]
 426 0004 D300     		lsl	r3, r2, #3
 427 0006 9B1A     		sub	r3, r3, r2
 428 0008 DB00     		lsl	r3, r3, #3
 429 000a 064A     		ldr	r2, .L36+4
 430 000c D318     		add	r3, r2, r3
 431 000e 5A68     		ldr	r2, [r3, #4]
 432              	.LVL28:
1007:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
 433              		.loc 1 1007 0
 434 0010 0123     		mov	r3, #1
 435 0012 9340     		lsl	r3, r3, r2
 436 0014 013B     		sub	r3, r3, #1
 437 0016 1840     		and	r0, r3
 438              	.LVL29:
1008:Generated_Source\PSoC4/ADC.c ****     return;
 439              		.loc 1 1008 0
 440 0018 034B     		ldr	r3, .L36+8
 441 001a 1860     		str	r0, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 29


1010:Generated_Source\PSoC4/ADC.c **** 
 442              		.loc 1 1010 0
 443              		@ sp needed
 444 001c 7047     		bx	lr
 445              	.L37:
 446 001e C046     		.align	2
 447              	.L36:
 448 0020 00000000 		.word	.LANCHOR0
 449 0024 00000000 		.word	ADC_allConfigs
 450 0028 20003A40 		.word	1077542944
 451              		.cfi_endproc
 452              	.LFE10:
 453              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 454              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 455              		.align	2
 456              		.global	ADC_IsEndConversion
 457              		.code	16
 458              		.thumb_func
 459              		.type	ADC_IsEndConversion, %function
 460              	ADC_IsEndConversion:
 461              	.LFB11:
1038:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 462              		.loc 1 1038 0
 463              		.cfi_startproc
 464              	.LVL30:
 465 0000 011C     		mov	r1, r0
 466              	.LVL31:
1041:Generated_Source\PSoC4/ADC.c ****     {
 467              		.loc 1 1041 0
 468 0002 431E     		sub	r3, r0, #1
 469 0004 012B     		cmp	r3, #1
 470 0006 11D8     		bhi	.L42
 471 0008 094A     		ldr	r2, .L43
 472              	.LVL32:
 473              	.L41:
1045:Generated_Source\PSoC4/ADC.c ****             wdt--;
 474              		.loc 1 1045 0 discriminator 1
 475 000a 0A4B     		ldr	r3, .L43+4
 476 000c 1B68     		ldr	r3, [r3]
 477 000e 0120     		mov	r0, #1
 478 0010 1840     		and	r0, r3
 479              	.LVL33:
1046:Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
 480              		.loc 1 1046 0 discriminator 1
 481 0012 013A     		sub	r2, r2, #1
 482              	.LVL34:
1049:Generated_Source\PSoC4/ADC.c **** 
 483              		.loc 1 1049 0 discriminator 1
 484 0014 0028     		cmp	r0, #0
 485 0016 03D1     		bne	.L40
1048:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
 486              		.loc 1 1048 0
 487 0018 8B07     		lsl	r3, r1, #30
 488 001a 01D5     		bpl	.L40
1049:Generated_Source\PSoC4/ADC.c **** 
 489              		.loc 1 1049 0
 490 001c 002A     		cmp	r2, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 30


 491 001e F4D1     		bne	.L41
 492              	.L40:
1051:Generated_Source\PSoC4/ADC.c ****         {
 493              		.loc 1 1051 0
 494 0020 0028     		cmp	r0, #0
 495 0022 04D0     		beq	.L39
1054:Generated_Source\PSoC4/ADC.c ****         }
 496              		.loc 1 1054 0
 497 0024 0122     		mov	r2, #1
 498              	.LVL35:
 499 0026 034B     		ldr	r3, .L43+4
 500 0028 1A60     		str	r2, [r3]
 501 002a 00E0     		b	.L39
 502              	.LVL36:
 503              	.L42:
1039:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 504              		.loc 1 1039 0
 505 002c 0020     		mov	r0, #0
 506              	.LVL37:
 507              	.L39:
1059:Generated_Source\PSoC4/ADC.c ****  
 508              		.loc 1 1059 0
 509              		@ sp needed
 510 002e 7047     		bx	lr
 511              	.L44:
 512              		.align	2
 513              	.L43:
 514 0030 FFFFFF03 		.word	67108863
 515 0034 10023A40 		.word	1077543440
 516              		.cfi_endproc
 517              	.LFE11:
 518              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 519              		.section	.text.ADC_GetResult16,"ax",%progbits
 520              		.align	2
 521              		.global	ADC_GetResult16
 522              		.code	16
 523              		.thumb_func
 524              		.type	ADC_GetResult16, %function
 525              	ADC_GetResult16:
 526              	.LFB13:
1101:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1102:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
1103:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1104:Generated_Source\PSoC4/ADC.c **** *
1105:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register
1106:Generated_Source\PSoC4/ADC.c **** *
1107:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1108:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1109:Generated_Source\PSoC4/ADC.c **** * channels.
1110:Generated_Source\PSoC4/ADC.c **** *
1111:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 16-bit integer.
1112:Generated_Source\PSoC4/ADC.c **** * 
1113:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1114:Generated_Source\PSoC4/ADC.c **** * 
1115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult16
1117:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 31


1118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1119:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
1120:Generated_Source\PSoC4/ADC.c **** {
 527              		.loc 1 1120 0
 528              		.cfi_startproc
 529              	.LVL38:
 530 0000 10B5     		push	{r4, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
 534 0002 041C     		mov	r4, r0
1121:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1122:Generated_Source\PSoC4/ADC.c ****     
1123:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1124:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 535              		.loc 1 1124 0
 536 0004 104B     		ldr	r3, .L49
 537 0006 1A68     		ldr	r2, [r3]
 538 0008 D300     		lsl	r3, r2, #3
 539 000a 9B1A     		sub	r3, r3, r2
 540 000c DB00     		lsl	r3, r3, #3
 541 000e 0F4A     		ldr	r2, .L49+4
 542 0010 D318     		add	r3, r2, r3
 543 0012 5B68     		ldr	r3, [r3, #4]
 544 0014 8342     		cmp	r3, r0
 545 0016 02D8     		bhi	.L46
 546              		.loc 1 1124 0 is_stmt 0 discriminator 1
 547 0018 0020     		mov	r0, #0
 548              	.LVL39:
 549 001a FFF7FEFF 		bl	CyHalt
 550              	.LVL40:
 551              	.L46:
1125:Generated_Source\PSoC4/ADC.c **** 
1126:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 552              		.loc 1 1126 0 is_stmt 1
 553 001e 0A4B     		ldr	r3, .L49
 554 0020 1A68     		ldr	r2, [r3]
 555 0022 D300     		lsl	r3, r2, #3
 556 0024 9B1A     		sub	r3, r3, r2
 557 0026 DB00     		lsl	r3, r3, #3
 558 0028 084A     		ldr	r2, .L49+4
 559 002a D318     		add	r3, r2, r3
 560 002c 5B68     		ldr	r3, [r3, #4]
 561 002e A342     		cmp	r3, r4
 562 0030 07D9     		bls	.L48
1127:Generated_Source\PSoC4/ADC.c ****     {   
1128:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 563              		.loc 1 1128 0
 564 0032 A400     		lsl	r4, r4, #2
 565              	.LVL41:
 566 0034 064B     		ldr	r3, .L49+8
 567 0036 9C46     		mov	ip, r3
 568 0038 6444     		add	r4, r4, ip
 569 003a 2068     		ldr	r0, [r4]
 570 003c 0004     		lsl	r0, r0, #16
 571 003e 000C     		lsr	r0, r0, #16
 572              	.LVL42:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 32


 573 0040 00E0     		b	.L47
 574              	.LVL43:
 575              	.L48:
1129:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK; 
1130:Generated_Source\PSoC4/ADC.c ****     }
1131:Generated_Source\PSoC4/ADC.c ****     else
1132:Generated_Source\PSoC4/ADC.c ****     {
1133:Generated_Source\PSoC4/ADC.c **** 		adcResult = 0u;
 576              		.loc 1 1133 0
 577 0042 0020     		mov	r0, #0
 578              	.LVL44:
 579              	.L47:
1134:Generated_Source\PSoC4/ADC.c ****     }
1135:Generated_Source\PSoC4/ADC.c ****     
1136:Generated_Source\PSoC4/ADC.c ****     return (int16) adcResult;
 580              		.loc 1 1136 0
 581 0044 00B2     		sxth	r0, r0
 582              	.LVL45:
1137:Generated_Source\PSoC4/ADC.c **** }
 583              		.loc 1 1137 0
 584              		@ sp needed
 585 0046 10BD     		pop	{r4, pc}
 586              	.L50:
 587              		.align	2
 588              	.L49:
 589 0048 00000000 		.word	.LANCHOR0
 590 004c 00000000 		.word	ADC_allConfigs
 591 0050 80013A40 		.word	1077543296
 592              		.cfi_endproc
 593              	.LFE13:
 594              		.size	ADC_GetResult16, .-ADC_GetResult16
 595              		.section	.text.ADC_GetResult32,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_GetResult32
 598              		.code	16
 599              		.thumb_func
 600              		.type	ADC_GetResult32, %function
 601              	ADC_GetResult32:
 602              	.LFB14:
1138:Generated_Source\PSoC4/ADC.c **** 
1139:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1140:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult32
1141:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1142:Generated_Source\PSoC4/ADC.c **** *
1143:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register. 
1144:Generated_Source\PSoC4/ADC.c **** *
1145:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1146:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1147:Generated_Source\PSoC4/ADC.c **** * channels.
1148:Generated_Source\PSoC4/ADC.c **** *
1149:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 32-bit integer.
1150:Generated_Source\PSoC4/ADC.c **** * 
1151:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1152:Generated_Source\PSoC4/ADC.c **** *
1153:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1154:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult32
1155:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 33


1156:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1157:Generated_Source\PSoC4/ADC.c **** int32 ADC_GetResult32(uint32 chan)
1158:Generated_Source\PSoC4/ADC.c **** {
 603              		.loc 1 1158 0
 604              		.cfi_startproc
 605              	.LVL46:
 606 0000 38B5     		push	{r3, r4, r5, lr}
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 3, -16
 609              		.cfi_offset 4, -12
 610              		.cfi_offset 5, -8
 611              		.cfi_offset 14, -4
 612 0002 051C     		mov	r5, r0
1159:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1160:Generated_Source\PSoC4/ADC.c ****     int16 adcResult16;
1161:Generated_Source\PSoC4/ADC.c ****     int32 finalResult;
1162:Generated_Source\PSoC4/ADC.c ****     
1163:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1164:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 613              		.loc 1 1164 0
 614 0004 144B     		ldr	r3, .L57
 615 0006 1A68     		ldr	r2, [r3]
 616 0008 D300     		lsl	r3, r2, #3
 617 000a 9B1A     		sub	r3, r3, r2
 618 000c DB00     		lsl	r3, r3, #3
 619 000e 134A     		ldr	r2, .L57+4
 620 0010 D318     		add	r3, r2, r3
 621 0012 5B68     		ldr	r3, [r3, #4]
 622 0014 8342     		cmp	r3, r0
 623 0016 02D8     		bhi	.L52
 624              		.loc 1 1164 0 is_stmt 0 discriminator 1
 625 0018 0020     		mov	r0, #0
 626              	.LVL47:
 627 001a FFF7FEFF 		bl	CyHalt
 628              	.LVL48:
 629              	.L52:
1165:Generated_Source\PSoC4/ADC.c **** 
1166:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 630              		.loc 1 1166 0 is_stmt 1
 631 001e 0E4B     		ldr	r3, .L57
 632 0020 1A68     		ldr	r2, [r3]
 633 0022 D300     		lsl	r3, r2, #3
 634 0024 9B1A     		sub	r3, r3, r2
 635 0026 DB00     		lsl	r3, r3, #3
 636 0028 0C4A     		ldr	r2, .L57+4
 637 002a D318     		add	r3, r2, r3
 638 002c 5B68     		ldr	r3, [r3, #4]
 639 002e AB42     		cmp	r3, r5
 640 0030 07D9     		bls	.L56
1167:Generated_Source\PSoC4/ADC.c ****     {
1168:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 641              		.loc 1 1168 0
 642 0032 AB00     		lsl	r3, r5, #2
 643 0034 0A4A     		ldr	r2, .L57+8
 644 0036 9446     		mov	ip, r2
 645 0038 6344     		add	r3, r3, ip
 646 003a 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 34


 647 003c 2404     		lsl	r4, r4, #16
 648 003e 240C     		lsr	r4, r4, #16
 649              	.LVL49:
 650 0040 00E0     		b	.L53
 651              	.LVL50:
 652              	.L56:
1169:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK;
1170:Generated_Source\PSoC4/ADC.c ****     }
1171:Generated_Source\PSoC4/ADC.c ****     else
1172:Generated_Source\PSoC4/ADC.c ****     {
1173:Generated_Source\PSoC4/ADC.c ****         adcResult = 0u;
 653              		.loc 1 1173 0
 654 0042 0024     		mov	r4, #0
 655              	.L53:
 656              	.LVL51:
1174:Generated_Source\PSoC4/ADC.c ****     }
1175:Generated_Source\PSoC4/ADC.c ****     /* Sign extend if channel is signed format */
1176:Generated_Source\PSoC4/ADC.c ****     if(ADC_IsChannelSigned(chan) == 1)
 657              		.loc 1 1176 0
 658 0044 281C     		mov	r0, r5
 659 0046 FFF7FEFF 		bl	ADC_IsChannelSigned
 660              	.LVL52:
 661 004a 0128     		cmp	r0, #1
 662 004c 01D1     		bne	.L54
 663              	.LVL53:
1177:Generated_Source\PSoC4/ADC.c ****     {
1178:Generated_Source\PSoC4/ADC.c ****         adcResult16 = (int16) adcResult;
1179:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult16;
 664              		.loc 1 1179 0
 665 004e 20B2     		sxth	r0, r4
 666              	.LVL54:
 667 0050 00E0     		b	.L55
 668              	.LVL55:
 669              	.L54:
1180:Generated_Source\PSoC4/ADC.c ****     }
1181:Generated_Source\PSoC4/ADC.c ****     else
1182:Generated_Source\PSoC4/ADC.c ****     {
1183:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult;
 670              		.loc 1 1183 0
 671 0052 201C     		mov	r0, r4
 672              	.LVL56:
 673              	.L55:
1184:Generated_Source\PSoC4/ADC.c ****     }
1185:Generated_Source\PSoC4/ADC.c ****     return finalResult;
1186:Generated_Source\PSoC4/ADC.c **** }
 674              		.loc 1 1186 0
 675              		@ sp needed
 676              	.LVL57:
 677              	.LVL58:
 678 0054 38BD     		pop	{r3, r4, r5, pc}
 679              	.L58:
 680 0056 C046     		.align	2
 681              	.L57:
 682 0058 00000000 		.word	.LANCHOR0
 683 005c 00000000 		.word	ADC_allConfigs
 684 0060 80013A40 		.word	1077543296
 685              		.cfi_endproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 35


 686              	.LFE14:
 687              		.size	ADC_GetResult32, .-ADC_GetResult32
 688              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 689              		.align	2
 690              		.global	ADC_SetLowLimit
 691              		.code	16
 692              		.thumb_func
 693              		.type	ADC_SetLowLimit, %function
 694              	ADC_SetLowLimit:
 695              	.LFB15:
1187:Generated_Source\PSoC4/ADC.c **** 
1188:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1189:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
1190:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1191:Generated_Source\PSoC4/ADC.c **** *
1192:Generated_Source\PSoC4/ADC.c **** * \brief Sets the low limit parameter for a limit condition.
1193:Generated_Source\PSoC4/ADC.c **** *
1194:Generated_Source\PSoC4/ADC.c **** * \param lowLimit The low limit for a limit condition.
1195:Generated_Source\PSoC4/ADC.c **** *
1196:Generated_Source\PSoC4/ADC.c **** * \return None
1197:Generated_Source\PSoC4/ADC.c **** * 
1198:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1199:Generated_Source\PSoC4/ADC.c **** *
1200:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1201:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLowLimit
1202:Generated_Source\PSoC4/ADC.c **** *
1203:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1204:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
1205:Generated_Source\PSoC4/ADC.c **** {   
 696              		.loc 1 1205 0
 697              		.cfi_startproc
 698              	.LVL59:
1206:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_LOW_MSK);
 699              		.loc 1 1206 0
 700 0000 054A     		ldr	r2, .L60
 701 0002 1368     		ldr	r3, [r2]
 702 0004 1B0C     		lsr	r3, r3, #16
 703 0006 1B04     		lsl	r3, r3, #16
 704 0008 1360     		str	r3, [r2]
1207:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
 705              		.loc 1 1207 0
 706 000a 1368     		ldr	r3, [r2]
 707 000c 0004     		lsl	r0, r0, #16
 708              	.LVL60:
 709 000e 000C     		lsr	r0, r0, #16
 710 0010 1843     		orr	r0, r3
 711 0012 1060     		str	r0, [r2]
1208:Generated_Source\PSoC4/ADC.c ****     return;
1209:Generated_Source\PSoC4/ADC.c **** }
 712              		.loc 1 1209 0
 713              		@ sp needed
 714 0014 7047     		bx	lr
 715              	.L61:
 716 0016 C046     		.align	2
 717              	.L60:
 718 0018 18003A40 		.word	1077542936
 719              		.cfi_endproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 36


 720              	.LFE15:
 721              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 722              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 723              		.align	2
 724              		.global	ADC_SetHighLimit
 725              		.code	16
 726              		.thumb_func
 727              		.type	ADC_SetHighLimit, %function
 728              	ADC_SetHighLimit:
 729              	.LFB16:
1210:Generated_Source\PSoC4/ADC.c **** 
1211:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1212:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
1213:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1214:Generated_Source\PSoC4/ADC.c **** *
1215:Generated_Source\PSoC4/ADC.c **** * \brief Sets the high limit parameter for a limit condition.
1216:Generated_Source\PSoC4/ADC.c **** *
1217:Generated_Source\PSoC4/ADC.c **** * \param highLimit The high limit for a limit condition.
1218:Generated_Source\PSoC4/ADC.c **** *
1219:Generated_Source\PSoC4/ADC.c **** * \return None
1220:Generated_Source\PSoC4/ADC.c **** * 
1221:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1222:Generated_Source\PSoC4/ADC.c **** * 
1223:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1224:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetHighLimit
1225:Generated_Source\PSoC4/ADC.c **** *
1226:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1227:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
1228:Generated_Source\PSoC4/ADC.c **** {   
 730              		.loc 1 1228 0
 731              		.cfi_startproc
 732              	.LVL61:
1229:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 733              		.loc 1 1229 0
 734 0000 044A     		ldr	r2, .L63
 735 0002 1368     		ldr	r3, [r2]
 736 0004 1B04     		lsl	r3, r3, #16
 737 0006 1B0C     		lsr	r3, r3, #16
 738 0008 1360     		str	r3, [r2]
1230:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 739              		.loc 1 1230 0
 740 000a 1368     		ldr	r3, [r2]
 741 000c 0004     		lsl	r0, r0, #16
 742              	.LVL62:
 743 000e 1843     		orr	r0, r3
 744 0010 1060     		str	r0, [r2]
1231:Generated_Source\PSoC4/ADC.c ****     return;
1232:Generated_Source\PSoC4/ADC.c **** }
 745              		.loc 1 1232 0
 746              		@ sp needed
 747 0012 7047     		bx	lr
 748              	.L64:
 749              		.align	2
 750              	.L63:
 751 0014 18003A40 		.word	1077542936
 752              		.cfi_endproc
 753              	.LFE16:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 37


 754              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 755              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 756              		.align	2
 757              		.global	ADC_SetLimitMask
 758              		.code	16
 759              		.thumb_func
 760              		.type	ADC_SetLimitMask, %function
 761              	ADC_SetLimitMask:
 762              	.LFB17:
1233:Generated_Source\PSoC4/ADC.c **** 
1234:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1235:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
1236:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1237:Generated_Source\PSoC4/ADC.c **** *
1238:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel limit condition mask.
1239:Generated_Source\PSoC4/ADC.c **** *
1240:Generated_Source\PSoC4/ADC.c **** *
1241:Generated_Source\PSoC4/ADC.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt. 
1242:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1243:Generated_Source\PSoC4/ADC.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable 
1244:Generated_Source\PSoC4/ADC.c **** * the last two channels (0 and 1).
1245:Generated_Source\PSoC4/ADC.c **** *
1246:Generated_Source\PSoC4/ADC.c **** * \return None
1247:Generated_Source\PSoC4/ADC.c **** * 
1248:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1249:Generated_Source\PSoC4/ADC.c **** *
1250:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1251:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLimitMask
1252:Generated_Source\PSoC4/ADC.c **** *
1253:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1254:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 limitMask)
1255:Generated_Source\PSoC4/ADC.c **** {   
 763              		.loc 1 1255 0
 764              		.cfi_startproc
 765              	.LVL63:
1256:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 766              		.loc 1 1256 0
 767 0000 074B     		ldr	r3, .L66
 768 0002 1A68     		ldr	r2, [r3]
 769 0004 D300     		lsl	r3, r2, #3
 770 0006 9B1A     		sub	r3, r3, r2
 771 0008 DB00     		lsl	r3, r3, #3
 772 000a 064A     		ldr	r2, .L66+4
 773 000c D318     		add	r3, r2, r3
 774 000e 5A68     		ldr	r2, [r3, #4]
 775              	.LVL64:
1257:Generated_Source\PSoC4/ADC.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 776              		.loc 1 1257 0
 777 0010 0123     		mov	r3, #1
 778 0012 9340     		lsl	r3, r3, r2
 779 0014 013B     		sub	r3, r3, #1
 780 0016 1840     		and	r0, r3
 781              	.LVL65:
1258:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = limitMask;
 782              		.loc 1 1258 0
 783 0018 034B     		ldr	r3, .L66+8
 784 001a 1860     		str	r0, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 38


1259:Generated_Source\PSoC4/ADC.c ****     return;
1260:Generated_Source\PSoC4/ADC.c **** }
 785              		.loc 1 1260 0
 786              		@ sp needed
 787 001c 7047     		bx	lr
 788              	.L67:
 789 001e C046     		.align	2
 790              	.L66:
 791 0020 00000000 		.word	.LANCHOR0
 792 0024 00000000 		.word	ADC_allConfigs
 793 0028 38023A40 		.word	1077543480
 794              		.cfi_endproc
 795              	.LFE17:
 796              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 797              		.section	.text.ADC_SetSatMask,"ax",%progbits
 798              		.align	2
 799              		.global	ADC_SetSatMask
 800              		.code	16
 801              		.thumb_func
 802              		.type	ADC_SetSatMask, %function
 803              	ADC_SetSatMask:
 804              	.LFB18:
1261:Generated_Source\PSoC4/ADC.c **** 
1262:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1263:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
1264:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1265:Generated_Source\PSoC4/ADC.c **** *
1266:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel saturation event mask.
1267:Generated_Source\PSoC4/ADC.c **** *
1268:Generated_Source\PSoC4/ADC.c **** * \param satMask Sets which channels that may cause a saturation event interrupt. 
1269:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1270:Generated_Source\PSoC4/ADC.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two 
1271:Generated_Source\PSoC4/ADC.c **** * channels (6 and 7).
1272:Generated_Source\PSoC4/ADC.c **** *
1273:Generated_Source\PSoC4/ADC.c **** * \return None
1274:Generated_Source\PSoC4/ADC.c **** * 
1275:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1276:Generated_Source\PSoC4/ADC.c **** *
1277:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1278:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetSatMask
1279:Generated_Source\PSoC4/ADC.c **** *
1280:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1281:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 satMask)
1282:Generated_Source\PSoC4/ADC.c **** {   
 805              		.loc 1 1282 0
 806              		.cfi_startproc
 807              	.LVL66:
1283:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 808              		.loc 1 1283 0
 809 0000 074B     		ldr	r3, .L69
 810 0002 1A68     		ldr	r2, [r3]
 811 0004 D300     		lsl	r3, r2, #3
 812 0006 9B1A     		sub	r3, r3, r2
 813 0008 DB00     		lsl	r3, r3, #3
 814 000a 064A     		ldr	r2, .L69+4
 815 000c D318     		add	r3, r2, r3
 816 000e 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 39


 817              	.LVL67:
1284:Generated_Source\PSoC4/ADC.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 818              		.loc 1 1284 0
 819 0010 0123     		mov	r3, #1
 820 0012 9340     		lsl	r3, r3, r2
 821 0014 013B     		sub	r3, r3, #1
 822 0016 1840     		and	r0, r3
 823              	.LVL68:
1285:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = satMask;    
 824              		.loc 1 1285 0
 825 0018 034B     		ldr	r3, .L69+8
 826 001a 1860     		str	r0, [r3]
1286:Generated_Source\PSoC4/ADC.c ****     return;
1287:Generated_Source\PSoC4/ADC.c **** }
 827              		.loc 1 1287 0
 828              		@ sp needed
 829 001c 7047     		bx	lr
 830              	.L70:
 831 001e C046     		.align	2
 832              	.L69:
 833 0020 00000000 		.word	.LANCHOR0
 834 0024 00000000 		.word	ADC_allConfigs
 835 0028 28023A40 		.word	1077543464
 836              		.cfi_endproc
 837              	.LFE18:
 838              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 839              		.section	.text.ADC_SetOffset,"ax",%progbits
 840              		.align	2
 841              		.global	ADC_SetOffset
 842              		.code	16
 843              		.thumb_func
 844              		.type	ADC_SetOffset, %function
 845              	ADC_SetOffset:
 846              	.LFB19:
1288:Generated_Source\PSoC4/ADC.c **** 
1289:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
1291:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1292:Generated_Source\PSoC4/ADC.c **** *
1293:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts, 
1294:Generated_Source\PSoC4/ADC.c **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1295:Generated_Source\PSoC4/ADC.c **** * 
1296:Generated_Source\PSoC4/ADC.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1297:Generated_Source\PSoC4/ADC.c **** * functions use the following equation:
1298:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1299:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1300:Generated_Source\PSoC4/ADC.c **** * 
1301:Generated_Source\PSoC4/ADC.c **** * To set channel 0's offset based on known V_offset_mV, use:
1302:Generated_Source\PSoC4/ADC.c **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1303:Generated_Source\PSoC4/ADC.c **** *
1304:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1305:Generated_Source\PSoC4/ADC.c **** * 
1306:Generated_Source\PSoC4/ADC.c **** * \param offset This value is a measured value when the inputs are shorted or 
1307:Generated_Source\PSoC4/ADC.c **** * connected to the same input voltage.
1308:Generated_Source\PSoC4/ADC.c **** *
1309:Generated_Source\PSoC4/ADC.c **** * \return None
1310:Generated_Source\PSoC4/ADC.c **** * 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 40


1311:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1312:Generated_Source\PSoC4/ADC.c **** *
1313:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1314:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetOffset
1315:Generated_Source\PSoC4/ADC.c **** *
1316:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1317:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
1318:Generated_Source\PSoC4/ADC.c **** {   
 847              		.loc 1 1318 0
 848              		.cfi_startproc
 849              	.LVL69:
 850 0000 38B5     		push	{r3, r4, r5, lr}
 851              		.cfi_def_cfa_offset 16
 852              		.cfi_offset 3, -16
 853              		.cfi_offset 4, -12
 854              		.cfi_offset 5, -8
 855              		.cfi_offset 14, -4
 856 0002 041C     		mov	r4, r0
 857 0004 0D1C     		mov	r5, r1
1319:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1320:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 858              		.loc 1 1320 0
 859 0006 0C4B     		ldr	r3, .L73
 860 0008 1A68     		ldr	r2, [r3]
 861 000a D300     		lsl	r3, r2, #3
 862 000c 9B1A     		sub	r3, r3, r2
 863 000e DB00     		lsl	r3, r3, #3
 864 0010 0A4A     		ldr	r2, .L73+4
 865 0012 D318     		add	r3, r2, r3
 866 0014 5B68     		ldr	r3, [r3, #4]
 867 0016 8342     		cmp	r3, r0
 868 0018 02D8     		bhi	.L72
 869              		.loc 1 1320 0 is_stmt 0 discriminator 1
 870 001a 0020     		mov	r0, #0
 871              	.LVL70:
 872 001c FFF7FEFF 		bl	CyHalt
 873              	.LVL71:
 874              	.L72:
1321:Generated_Source\PSoC4/ADC.c **** 
1322:Generated_Source\PSoC4/ADC.c ****     ADC_offset[ADC_allConfigs[ADC_currentConfig].channelBase + chan] = offset;
 875              		.loc 1 1322 0 is_stmt 1
 876 0020 054B     		ldr	r3, .L73
 877 0022 1A68     		ldr	r2, [r3]
 878 0024 D300     		lsl	r3, r2, #3
 879 0026 9B1A     		sub	r3, r3, r2
 880 0028 DB00     		lsl	r3, r3, #3
 881 002a 044A     		ldr	r2, .L73+4
 882 002c 9B58     		ldr	r3, [r3, r2]
 883 002e 1C19     		add	r4, r3, r4
 884              	.LVL72:
 885 0030 6400     		lsl	r4, r4, #1
 886 0032 034B     		ldr	r3, .L73+8
 887 0034 E552     		strh	r5, [r4, r3]
1323:Generated_Source\PSoC4/ADC.c ****     return;
1324:Generated_Source\PSoC4/ADC.c **** }
 888              		.loc 1 1324 0
 889              		@ sp needed
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 41


 890 0036 38BD     		pop	{r3, r4, r5, pc}
 891              	.L74:
 892              		.align	2
 893              	.L73:
 894 0038 00000000 		.word	.LANCHOR0
 895 003c 00000000 		.word	ADC_allConfigs
 896 0040 00000000 		.word	ADC_offset
 897              		.cfi_endproc
 898              	.LFE19:
 899              		.size	ADC_SetOffset, .-ADC_SetOffset
 900              		.section	.text.ADC_SetGain,"ax",%progbits
 901              		.align	2
 902              		.global	ADC_SetGain
 903              		.code	16
 904              		.thumb_func
 905              		.type	ADC_SetGain, %function
 906              	ADC_SetGain:
 907              	.LFB20:
1325:Generated_Source\PSoC4/ADC.c **** 
1326:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1327:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
1328:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1329:Generated_Source\PSoC4/ADC.c **** *
1330:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC gain in counts per 10 volt for the voltage 
1331:Generated_Source\PSoC4/ADC.c **** * conversion functions. This value is set by default by the reference and 
1332:Generated_Source\PSoC4/ADC.c **** * input range settings. Gain is applied after offset and unit scaling.  All 
1333:Generated_Source\PSoC4/ADC.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1334:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1335:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1336:Generated_Source\PSoC4/ADC.c **** * 
1337:Generated_Source\PSoC4/ADC.c **** * To set channel 0's gain based on known V_ref_mV, use:
1338:Generated_Source\PSoC4/ADC.c **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1339:Generated_Source\PSoC4/ADC.c **** *  
1340:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.
1341:Generated_Source\PSoC4/ADC.c **** * 
1342:Generated_Source\PSoC4/ADC.c **** * \param adcGain ADC gain in counts per 10 volt.
1343:Generated_Source\PSoC4/ADC.c **** *
1344:Generated_Source\PSoC4/ADC.c **** * \return None
1345:Generated_Source\PSoC4/ADC.c **** * 
1346:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1347:Generated_Source\PSoC4/ADC.c **** *
1348:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1349:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetGain
1350:Generated_Source\PSoC4/ADC.c **** *
1351:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1352:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
1353:Generated_Source\PSoC4/ADC.c **** {   
 908              		.loc 1 1353 0
 909              		.cfi_startproc
 910              	.LVL73:
 911 0000 38B5     		push	{r3, r4, r5, lr}
 912              		.cfi_def_cfa_offset 16
 913              		.cfi_offset 3, -16
 914              		.cfi_offset 4, -12
 915              		.cfi_offset 5, -8
 916              		.cfi_offset 14, -4
 917 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 42


 918 0004 0D1C     		mov	r5, r1
1354:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1355:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 919              		.loc 1 1355 0
 920 0006 0C4B     		ldr	r3, .L77
 921 0008 1A68     		ldr	r2, [r3]
 922 000a D300     		lsl	r3, r2, #3
 923 000c 9B1A     		sub	r3, r3, r2
 924 000e DB00     		lsl	r3, r3, #3
 925 0010 0A4A     		ldr	r2, .L77+4
 926 0012 D318     		add	r3, r2, r3
 927 0014 5B68     		ldr	r3, [r3, #4]
 928 0016 8342     		cmp	r3, r0
 929 0018 02D8     		bhi	.L76
 930              		.loc 1 1355 0 is_stmt 0 discriminator 1
 931 001a 0020     		mov	r0, #0
 932              	.LVL74:
 933 001c FFF7FEFF 		bl	CyHalt
 934              	.LVL75:
 935              	.L76:
1356:Generated_Source\PSoC4/ADC.c **** 
1357:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[ADC_allConfigs[ADC_currentConfig].channelBase + chan]
 936              		.loc 1 1357 0 is_stmt 1
 937 0020 054B     		ldr	r3, .L77
 938 0022 1A68     		ldr	r2, [r3]
 939 0024 D300     		lsl	r3, r2, #3
 940 0026 9B1A     		sub	r3, r3, r2
 941 0028 DB00     		lsl	r3, r3, #3
 942 002a 044A     		ldr	r2, .L77+4
 943 002c 9B58     		ldr	r3, [r3, r2]
 944 002e 1C19     		add	r4, r3, r4
 945              	.LVL76:
1358:Generated_Source\PSoC4/ADC.c **** 	= adcGain;
 946              		.loc 1 1358 0
 947 0030 A400     		lsl	r4, r4, #2
 948 0032 034B     		ldr	r3, .L77+8
 949 0034 E550     		str	r5, [r4, r3]
1359:Generated_Source\PSoC4/ADC.c ****     return;
1360:Generated_Source\PSoC4/ADC.c **** }
 950              		.loc 1 1360 0
 951              		@ sp needed
 952              	.LVL77:
 953 0036 38BD     		pop	{r3, r4, r5, pc}
 954              	.L78:
 955              		.align	2
 956              	.L77:
 957 0038 00000000 		.word	.LANCHOR0
 958 003c 00000000 		.word	ADC_allConfigs
 959 0040 00000000 		.word	ADC_countsPer10Volt
 960              		.cfi_endproc
 961              	.LFE20:
 962              		.size	ADC_SetGain, .-ADC_SetGain
 963              		.global	__aeabi_uidiv
 964              		.global	__aeabi_idiv
 965              		.section	.text.ADC_RawCounts2Counts,"ax",%progbits
 966              		.align	2
 967              		.global	ADC_RawCounts2Counts
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 43


 968              		.code	16
 969              		.thumb_func
 970              		.type	ADC_RawCounts2Counts, %function
 971              	ADC_RawCounts2Counts:
 972              	.LFB21:
1361:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1362:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_RawCounts2Counts
1363:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1364:Generated_Source\PSoC4/ADC.c **** *
1365:Generated_Source\PSoC4/ADC.c **** * \brief Converts the output of the SAR to an idealized count value.
1366:Generated_Source\PSoC4/ADC.c **** *
1367:Generated_Source\PSoC4/ADC.c **** * Divides by averaging amount, if needed, and subtracts offset.
1368:Generated_Source\PSoC4/ADC.c **** *
1369:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1370:Generated_Source\PSoC4/ADC.c **** *
1371:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1372:Generated_Source\PSoC4/ADC.c **** *
1373:Generated_Source\PSoC4/ADC.c **** * \return Averaged and offset counts.
1374:Generated_Source\PSoC4/ADC.c **** * 
1375:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1376:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1377:Generated_Source\PSoC4/ADC.c **** int16 ADC_RawCounts2Counts(uint32 chan, int16 adcCounts)
1378:Generated_Source\PSoC4/ADC.c **** {
 973              		.loc 1 1378 0
 974              		.cfi_startproc
 975              	.LVL78:
 976 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 977              		.cfi_def_cfa_offset 24
 978              		.cfi_offset 3, -24
 979              		.cfi_offset 4, -20
 980              		.cfi_offset 5, -16
 981              		.cfi_offset 6, -12
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 061C     		mov	r6, r0
 985 0004 0C1C     		mov	r4, r1
1379:Generated_Source\PSoC4/ADC.c ****     uint32 temp;
1380:Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1381:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1382:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 986              		.loc 1 1382 0
 987 0006 1F4B     		ldr	r3, .L85
 988 0008 1968     		ldr	r1, [r3]
 989              	.LVL79:
 990 000a 1F4F     		ldr	r7, .L85+4
 991 000c CA00     		lsl	r2, r1, #3
 992 000e 501A     		sub	r0, r2, r1
 993              	.LVL80:
 994 0010 C000     		lsl	r0, r0, #3
 995 0012 C559     		ldr	r5, [r0, r7]
 996 0014 AD19     		add	r5, r5, r6
 997              	.LVL81:
1383:Generated_Source\PSoC4/ADC.c **** 	
1384:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1385:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 998              		.loc 1 1385 0
 999 0016 3B18     		add	r3, r7, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 44


 1000 0018 5B68     		ldr	r3, [r3, #4]
 1001 001a B342     		cmp	r3, r6
 1002 001c 02D8     		bhi	.L80
 1003              		.loc 1 1385 0 is_stmt 0 discriminator 1
 1004 001e 0020     		mov	r0, #0
 1005 0020 FFF7FEFF 		bl	CyHalt
 1006              	.LVL82:
 1007              	.L80:
1386:Generated_Source\PSoC4/ADC.c **** 
1387:Generated_Source\PSoC4/ADC.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1388:Generated_Source\PSoC4/ADC.c ****     /* If Average mode != fixed */
1389:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1008              		.loc 1 1389 0 is_stmt 1
 1009 0024 174B     		ldr	r3, .L85
 1010 0026 1A68     		ldr	r2, [r3]
 1011 0028 D300     		lsl	r3, r2, #3
 1012 002a 9B1A     		sub	r3, r3, r2
 1013 002c DB00     		lsl	r3, r3, #3
 1014 002e 164A     		ldr	r2, .L85+4
 1015 0030 D318     		add	r3, r2, r3
 1016 0032 DB68     		ldr	r3, [r3, #12]
 1017 0034 1A06     		lsl	r2, r3, #24
 1018 0036 1ED4     		bmi	.L81
1390:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1391:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1392:Generated_Source\PSoC4/ADC.c **** 	{
1393:Generated_Source\PSoC4/ADC.c ****         /* If Channel uses averaging */
1394:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[rawChannel] & ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 1019              		.loc 1 1394 0
 1020 0038 AA00     		lsl	r2, r5, #2
 1021 003a 1449     		ldr	r1, .L85+8
 1022 003c 5258     		ldr	r2, [r2, r1]
 1023 003e 5205     		lsl	r2, r2, #21
 1024 0040 19D5     		bpl	.L81
1395:Generated_Source\PSoC4/ADC.c ****         {
1396:Generated_Source\PSoC4/ADC.c ****             /* Divide by 2^(AVG_CNT + 1) */
1397:Generated_Source\PSoC4/ADC.c **** 			averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1398:Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1025              		.loc 1 1398 0
 1026 0042 5906     		lsl	r1, r3, #25
1397:Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1027              		.loc 1 1397 0
 1028 0044 490F     		lsr	r1, r1, #29
 1029              	.LVL83:
1399:Generated_Source\PSoC4/ADC.c **** 				>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1400:Generated_Source\PSoC4/ADC.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1030              		.loc 1 1400 0
 1031 0046 0131     		add	r1, r1, #1
 1032              	.LVL84:
 1033 0048 0127     		mov	r7, #1
 1034 004a 8F40     		lsl	r7, r7, r1
 1035              	.LVL85:
1401:Generated_Source\PSoC4/ADC.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1402:Generated_Source\PSoC4/ADC.c ****             /* If Mode is ACCUNDUMP */
1403:Generated_Source\PSoC4/ADC.c ****             if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1036              		.loc 1 1403 0
 1037 004c DB05     		lsl	r3, r3, #23
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 45


 1038 004e 02D4     		bmi	.L82
1404:Generated_Source\PSoC4/ADC.c ****     			& ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK) 
1405:Generated_Source\PSoC4/ADC.c ****     			!= ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1406:Generated_Source\PSoC4/ADC.c ****     		{
1407:Generated_Source\PSoC4/ADC.c ****                 if (averageAdcSamplesDiv > 16uL)
 1039              		.loc 1 1407 0
 1040 0050 102F     		cmp	r7, #16
 1041 0052 00D9     		bls	.L82
1408:Generated_Source\PSoC4/ADC.c ****                 {
1409:Generated_Source\PSoC4/ADC.c ****                     averageAdcSamplesDiv = 16uL;
 1042              		.loc 1 1409 0
 1043 0054 1027     		mov	r7, #16
 1044              	.LVL86:
 1045              	.L82:
1410:Generated_Source\PSoC4/ADC.c ****                 }
1411:Generated_Source\PSoC4/ADC.c ****             }
1412:Generated_Source\PSoC4/ADC.c ****             /* If unsigned format, prevent sign extension */
1413:Generated_Source\PSoC4/ADC.c ****             if(0 == ADC_IsChannelSigned(chan))
 1046              		.loc 1 1413 0
 1047 0056 301C     		mov	r0, r6
 1048 0058 FFF7FEFF 		bl	ADC_IsChannelSigned
 1049              	.LVL87:
 1050 005c 0028     		cmp	r0, #0
 1051 005e 05D1     		bne	.L83
1414:Generated_Source\PSoC4/ADC.c ****             {
1415:Generated_Source\PSoC4/ADC.c **** 				temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1052              		.loc 1 1415 0
 1053 0060 A0B2     		uxth	r0, r4
 1054 0062 391C     		mov	r1, r7
 1055 0064 FFF7FEFF 		bl	__aeabi_uidiv
 1056              	.LVL88:
1416:Generated_Source\PSoC4/ADC.c ****                 adcCounts = (int16) temp;
 1057              		.loc 1 1416 0
 1058 0068 04B2     		sxth	r4, r0
 1059              	.LVL89:
 1060 006a 04E0     		b	.L81
 1061              	.LVL90:
 1062              	.L83:
1417:Generated_Source\PSoC4/ADC.c ****             }
1418:Generated_Source\PSoC4/ADC.c ****             else
1419:Generated_Source\PSoC4/ADC.c ****             {
1420:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 1063              		.loc 1 1420 0
 1064 006c 39B2     		sxth	r1, r7
 1065 006e 201C     		mov	r0, r4
 1066 0070 FFF7FEFF 		bl	__aeabi_idiv
 1067              	.LVL91:
 1068 0074 04B2     		sxth	r4, r0
 1069              	.LVL92:
 1070              	.L81:
1421:Generated_Source\PSoC4/ADC.c ****             }
1422:Generated_Source\PSoC4/ADC.c ****         }
1423:Generated_Source\PSoC4/ADC.c ****     }
1424:Generated_Source\PSoC4/ADC.c ****     /* Subtract ADC offset */
1425:Generated_Source\PSoC4/ADC.c ****     adcCounts -= ADC_offset[rawChannel];
 1071              		.loc 1 1425 0
 1072 0076 6D00     		lsl	r5, r5, #1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 46


 1073              	.LVL93:
 1074 0078 054B     		ldr	r3, .L85+12
 1075 007a E85A     		ldrh	r0, [r5, r3]
 1076 007c 201A     		sub	r0, r4, r0
 1077 007e 00B2     		sxth	r0, r0
 1078              	.LVL94:
1426:Generated_Source\PSoC4/ADC.c ****     return adcCounts;
1427:Generated_Source\PSoC4/ADC.c **** }
 1079              		.loc 1 1427 0
 1080              		@ sp needed
 1081              	.LVL95:
 1082 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1083              	.L86:
 1084 0082 C046     		.align	2
 1085              	.L85:
 1086 0084 00000000 		.word	.LANCHOR0
 1087 0088 00000000 		.word	ADC_allConfigs
 1088 008c 00000000 		.word	.LANCHOR1
 1089 0090 00000000 		.word	ADC_offset
 1090              		.cfi_endproc
 1091              	.LFE21:
 1092              		.size	ADC_RawCounts2Counts, .-ADC_RawCounts2Counts
 1093              		.global	__aeabi_i2f
 1094              		.global	__aeabi_fmul
 1095              		.global	__aeabi_fdiv
 1096              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1097              		.align	2
 1098              		.global	ADC_CountsTo_Volts
 1099              		.code	16
 1100              		.thumb_func
 1101              		.type	ADC_CountsTo_Volts, %function
 1102              	ADC_CountsTo_Volts:
 1103              	.LFB22:
1428:Generated_Source\PSoC4/ADC.c **** 
1429:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1430:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_Volts
1431:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1432:Generated_Source\PSoC4/ADC.c **** *
1433:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC 
1434:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 0.534.
1435:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1436:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1437:Generated_Source\PSoC4/ADC.c **** * 
1438:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1439:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1440:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1441:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1442:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1443:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1444:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1445:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1446:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1447:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1448:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1449:Generated_Source\PSoC4/ADC.c **** * 
1450:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1451:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 47


1452:Generated_Source\PSoC4/ADC.c **** *
1453:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1454:Generated_Source\PSoC4/ADC.c **** *
1455:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1456:Generated_Source\PSoC4/ADC.c **** *
1457:Generated_Source\PSoC4/ADC.c **** * \return Result in Volts.
1458:Generated_Source\PSoC4/ADC.c **** * 
1459:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1460:Generated_Source\PSoC4/ADC.c **** *
1461:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1462:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_Volts
1463:Generated_Source\PSoC4/ADC.c **** *
1464:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1465:Generated_Source\PSoC4/ADC.c **** float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
1466:Generated_Source\PSoC4/ADC.c **** {   
 1104              		.loc 1 1466 0
 1105              		.cfi_startproc
 1106              	.LVL96:
 1107 0000 70B5     		push	{r4, r5, r6, lr}
 1108              		.cfi_def_cfa_offset 16
 1109              		.cfi_offset 4, -16
 1110              		.cfi_offset 5, -12
 1111              		.cfi_offset 6, -8
 1112              		.cfi_offset 14, -4
 1113              	.LVL97:
1467:Generated_Source\PSoC4/ADC.c ****     float32 result_Volts = 0.0f;
1468:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1469:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1114              		.loc 1 1469 0
 1115 0002 114B     		ldr	r3, .L90
 1116 0004 1D68     		ldr	r5, [r3]
 1117 0006 114E     		ldr	r6, .L90+4
 1118 0008 EA00     		lsl	r2, r5, #3
 1119 000a 541B     		sub	r4, r2, r5
 1120 000c E400     		lsl	r4, r4, #3
 1121 000e A459     		ldr	r4, [r4, r6]
 1122 0010 2418     		add	r4, r4, r0
 1123              	.LVL98:
1470:Generated_Source\PSoC4/ADC.c **** 	
1471:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1124              		.loc 1 1471 0
 1125 0012 531B     		sub	r3, r2, r5
 1126 0014 DB00     		lsl	r3, r3, #3
 1127 0016 F318     		add	r3, r6, r3
 1128 0018 DB68     		ldr	r3, [r3, #12]
 1129 001a 9B07     		lsl	r3, r3, #30
 1130 001c 11D4     		bmi	.L89
1472:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1473:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1474:Generated_Source\PSoC4/ADC.c **** 	{
1475:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1131              		.loc 1 1475 0
 1132 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1133              	.LVL99:
1476:Generated_Source\PSoC4/ADC.c **** 
1477:Generated_Source\PSoC4/ADC.c ****         result_Volts = ((float32)adcCounts * ADC_10V_COUNTS) 
 1134              		.loc 1 1477 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 48


 1135 0022 FFF7FEFF 		bl	__aeabi_i2f
 1136              	.LVL100:
 1137 0026 0A49     		ldr	r1, .L90+8
 1138 0028 FFF7FEFF 		bl	__aeabi_fmul
 1139              	.LVL101:
 1140 002c 051C     		add	r5, r0, #0
1478:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1141              		.loc 1 1478 0
 1142 002e A400     		lsl	r4, r4, #2
 1143              	.LVL102:
 1144 0030 084B     		ldr	r3, .L90+12
 1145 0032 E058     		ldr	r0, [r4, r3]
 1146 0034 FFF7FEFF 		bl	__aeabi_i2f
 1147              	.LVL103:
 1148 0038 011C     		add	r1, r0, #0
1477:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1149              		.loc 1 1477 0
 1150 003a 281C     		add	r0, r5, #0
 1151 003c FFF7FEFF 		bl	__aeabi_fdiv
 1152              	.LVL104:
 1153 0040 00E0     		b	.L88
 1154              	.LVL105:
 1155              	.L89:
1467:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1156              		.loc 1 1467 0
 1157 0042 0020     		mov	r0, #0
 1158              	.LVL106:
 1159              	.L88:
1479:Generated_Source\PSoC4/ADC.c **** 	}
1480:Generated_Source\PSoC4/ADC.c **** 	return result_Volts;
1481:Generated_Source\PSoC4/ADC.c **** }
 1160              		.loc 1 1481 0
 1161              		@ sp needed
 1162 0044 70BD     		pop	{r4, r5, r6, pc}
 1163              	.L91:
 1164 0046 C046     		.align	2
 1165              	.L90:
 1166 0048 00000000 		.word	.LANCHOR0
 1167 004c 00000000 		.word	ADC_allConfigs
 1168 0050 00002041 		.word	1092616192
 1169 0054 00000000 		.word	ADC_countsPer10Volt
 1170              		.cfi_endproc
 1171              	.LFE22:
 1172              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1173              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1174              		.align	2
 1175              		.global	ADC_CountsTo_mVolts
 1176              		.code	16
 1177              		.thumb_func
 1178              		.type	ADC_CountsTo_mVolts, %function
 1179              	ADC_CountsTo_mVolts:
 1180              	.LFB23:
1482:Generated_Source\PSoC4/ADC.c **** 
1483:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1484:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_mVolts
1485:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1486:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 49


1487:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC 
1488:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534.
1489:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1490:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1491:Generated_Source\PSoC4/ADC.c **** * 
1492:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1493:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1494:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1495:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1496:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1497:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1498:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1499:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1500:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1501:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1502:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1503:Generated_Source\PSoC4/ADC.c **** * 
1504:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1505:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1506:Generated_Source\PSoC4/ADC.c **** *
1507:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1508:Generated_Source\PSoC4/ADC.c **** *
1509:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1510:Generated_Source\PSoC4/ADC.c **** * 
1511:Generated_Source\PSoC4/ADC.c **** * \return Result in mV.
1512:Generated_Source\PSoC4/ADC.c **** * 
1513:Generated_Source\PSoC4/ADC.c **** * \sideeffect None.
1514:Generated_Source\PSoC4/ADC.c **** *
1515:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1516:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_mVolts
1517:Generated_Source\PSoC4/ADC.c **** *
1518:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1519:Generated_Source\PSoC4/ADC.c **** int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1520:Generated_Source\PSoC4/ADC.c **** {   
 1181              		.loc 1 1520 0
 1182              		.cfi_startproc
 1183              	.LVL107:
 1184 0000 70B5     		push	{r4, r5, r6, lr}
 1185              		.cfi_def_cfa_offset 16
 1186              		.cfi_offset 4, -16
 1187              		.cfi_offset 5, -12
 1188              		.cfi_offset 6, -8
 1189              		.cfi_offset 14, -4
 1190              	.LVL108:
1521:Generated_Source\PSoC4/ADC.c ****     int16 result_mVolts = 0;
1522:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1523:Generated_Source\PSoC4/ADC.c ****     
1524:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1191              		.loc 1 1524 0
 1192 0002 164B     		ldr	r3, .L97
 1193 0004 1D68     		ldr	r5, [r3]
 1194 0006 164E     		ldr	r6, .L97+4
 1195 0008 EA00     		lsl	r2, r5, #3
 1196 000a 541B     		sub	r4, r2, r5
 1197 000c E400     		lsl	r4, r4, #3
 1198 000e A459     		ldr	r4, [r4, r6]
 1199 0010 2418     		add	r4, r4, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 50


 1200              	.LVL109:
1525:Generated_Source\PSoC4/ADC.c **** 	
1526:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1201              		.loc 1 1526 0
 1202 0012 531B     		sub	r3, r2, r5
 1203 0014 DB00     		lsl	r3, r3, #3
 1204 0016 F318     		add	r3, r6, r3
 1205 0018 DB68     		ldr	r3, [r3, #12]
 1206 001a 9B07     		lsl	r3, r3, #30
 1207 001c 1BD4     		bmi	.L96
1527:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1528:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1529:Generated_Source\PSoC4/ADC.c **** 	{
1530:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1208              		.loc 1 1530 0
 1209 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1210              	.LVL110:
1531:Generated_Source\PSoC4/ADC.c **** 
1532:Generated_Source\PSoC4/ADC.c **** 	    result_mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1211              		.loc 1 1532 0
 1212 0022 1049     		ldr	r1, .L97+8
 1213 0024 4143     		mul	r1, r0
1533:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
1534:Generated_Source\PSoC4/ADC.c **** 				: (-(ADC_countsPer10Volt[rawChannel] / 2)) )) 
 1214              		.loc 1 1534 0
 1215 0026 0028     		cmp	r0, #0
 1216 0028 06DD     		ble	.L94
1533:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1217              		.loc 1 1533 0 discriminator 1
 1218 002a A300     		lsl	r3, r4, #2
 1219 002c 0E4A     		ldr	r2, .L97+12
 1220 002e 9B58     		ldr	r3, [r3, r2]
 1221              		.loc 1 1534 0 discriminator 1
 1222 0030 D80F     		lsr	r0, r3, #31
 1223              	.LVL111:
 1224 0032 C318     		add	r3, r0, r3
 1225 0034 5B10     		asr	r3, r3, #1
 1226 0036 06E0     		b	.L95
 1227              	.LVL112:
 1228              	.L94:
 1229              		.loc 1 1534 0 is_stmt 0 discriminator 2
 1230 0038 A300     		lsl	r3, r4, #2
 1231 003a 0B4A     		ldr	r2, .L97+12
 1232 003c 9A58     		ldr	r2, [r3, r2]
 1233 003e D30F     		lsr	r3, r2, #31
 1234 0040 9A18     		add	r2, r3, r2
 1235 0042 5210     		asr	r2, r2, #1
 1236 0044 5342     		neg	r3, r2
 1237              	.LVL113:
 1238              	.L95:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1239              		.loc 1 1532 0 is_stmt 1
 1240 0046 C818     		add	r0, r1, r3
1535:Generated_Source\PSoC4/ADC.c **** 	             / ADC_countsPer10Volt[rawChannel]);
 1241              		.loc 1 1535 0
 1242 0048 A400     		lsl	r4, r4, #2
 1243              	.LVL114:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 51


 1244 004a 074B     		ldr	r3, .L97+12
 1245 004c E158     		ldr	r1, [r4, r3]
 1246 004e FFF7FEFF 		bl	__aeabi_idiv
 1247              	.LVL115:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1248              		.loc 1 1532 0
 1249 0052 80B2     		uxth	r0, r0
 1250              	.LVL116:
 1251 0054 00E0     		b	.L93
 1252              	.LVL117:
 1253              	.L96:
1521:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1254              		.loc 1 1521 0
 1255 0056 0020     		mov	r0, #0
 1256              	.LVL118:
 1257              	.L93:
1536:Generated_Source\PSoC4/ADC.c **** 	}
1537:Generated_Source\PSoC4/ADC.c ****     return result_mVolts;
 1258              		.loc 1 1537 0
 1259 0058 00B2     		sxth	r0, r0
1538:Generated_Source\PSoC4/ADC.c **** }
 1260              		.loc 1 1538 0
 1261              		@ sp needed
 1262              	.LVL119:
 1263 005a 70BD     		pop	{r4, r5, r6, pc}
 1264              	.L98:
 1265              		.align	2
 1266              	.L97:
 1267 005c 00000000 		.word	.LANCHOR0
 1268 0060 00000000 		.word	ADC_allConfigs
 1269 0064 10270000 		.word	10000
 1270 0068 00000000 		.word	ADC_countsPer10Volt
 1271              		.cfi_endproc
 1272              	.LFE23:
 1273              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1274              		.global	__aeabi_lmul
 1275              		.global	__aeabi_ldivmod
 1276              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1277              		.align	2
 1278              		.global	ADC_CountsTo_uVolts
 1279              		.code	16
 1280              		.thumb_func
 1281              		.type	ADC_CountsTo_uVolts, %function
 1282              	ADC_CountsTo_uVolts:
 1283              	.LFB24:
1539:Generated_Source\PSoC4/ADC.c **** 
1540:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1541:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1542:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1543:Generated_Source\PSoC4/ADC.c **** *
1544:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC 
1545:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534000.
1546:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1547:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1548:Generated_Source\PSoC4/ADC.c **** * 
1549:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1550:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 52


1551:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1552:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1553:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1554:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1555:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1556:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1557:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1558:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1559:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1560:Generated_Source\PSoC4/ADC.c **** * 
1561:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1562:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1563:Generated_Source\PSoC4/ADC.c **** *
1564:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1565:Generated_Source\PSoC4/ADC.c **** *
1566:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1567:Generated_Source\PSoC4/ADC.c **** *
1568:Generated_Source\PSoC4/ADC.c **** * \return Result in microvolts.
1569:Generated_Source\PSoC4/ADC.c **** * 
1570:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1571:Generated_Source\PSoC4/ADC.c **** *
1572:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1573:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_uVolts
1574:Generated_Source\PSoC4/ADC.c **** *
1575:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1576:Generated_Source\PSoC4/ADC.c **** int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1577:Generated_Source\PSoC4/ADC.c **** {   
 1284              		.loc 1 1577 0
 1285              		.cfi_startproc
 1286              	.LVL120:
 1287 0000 70B5     		push	{r4, r5, r6, lr}
 1288              		.cfi_def_cfa_offset 16
 1289              		.cfi_offset 4, -16
 1290              		.cfi_offset 5, -12
 1291              		.cfi_offset 6, -8
 1292              		.cfi_offset 14, -4
 1293              	.LVL121:
1578:Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
1579:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1580:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1294              		.loc 1 1580 0
 1295 0002 0F4B     		ldr	r3, .L102
 1296 0004 1D68     		ldr	r5, [r3]
 1297 0006 0F4E     		ldr	r6, .L102+4
 1298 0008 EA00     		lsl	r2, r5, #3
 1299 000a 541B     		sub	r4, r2, r5
 1300 000c E400     		lsl	r4, r4, #3
 1301 000e A459     		ldr	r4, [r4, r6]
 1302 0010 2418     		add	r4, r4, r0
 1303              	.LVL122:
1581:Generated_Source\PSoC4/ADC.c **** 
1582:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1304              		.loc 1 1582 0
 1305 0012 531B     		sub	r3, r2, r5
 1306 0014 DB00     		lsl	r3, r3, #3
 1307 0016 F318     		add	r3, r6, r3
 1308 0018 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 53


 1309 001a 9B07     		lsl	r3, r3, #30
 1310 001c 0DD4     		bmi	.L101
1583:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1584:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1585:Generated_Source\PSoC4/ADC.c **** 	{
1586:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1311              		.loc 1 1586 0
 1312 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1313              	.LVL123:
1587:Generated_Source\PSoC4/ADC.c **** 
1588:Generated_Source\PSoC4/ADC.c ****         result_uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) 
 1314              		.loc 1 1588 0
 1315 0022 C117     		asr	r1, r0, #31
 1316 0024 084A     		ldr	r2, .L102+8
 1317 0026 0023     		mov	r3, #0
 1318 0028 FFF7FEFF 		bl	__aeabi_lmul
 1319              	.LVL124:
1589:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1320              		.loc 1 1589 0
 1321 002c A400     		lsl	r4, r4, #2
 1322              	.LVL125:
 1323 002e 074B     		ldr	r3, .L102+12
 1324 0030 E258     		ldr	r2, [r4, r3]
 1325 0032 D317     		asr	r3, r2, #31
1588:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1326              		.loc 1 1588 0
 1327 0034 FFF7FEFF 		bl	__aeabi_ldivmod
 1328              	.LVL126:
 1329 0038 00E0     		b	.L100
 1330              	.LVL127:
 1331              	.L101:
1578:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1332              		.loc 1 1578 0
 1333 003a 0020     		mov	r0, #0
 1334              	.LVL128:
 1335              	.L100:
1590:Generated_Source\PSoC4/ADC.c **** 	}
1591:Generated_Source\PSoC4/ADC.c **** 	return ( (int32)result_uVolts );
1592:Generated_Source\PSoC4/ADC.c **** }
 1336              		.loc 1 1592 0
 1337              		@ sp needed
 1338              	.LVL129:
 1339 003c 70BD     		pop	{r4, r5, r6, pc}
 1340              	.L103:
 1341 003e C046     		.align	2
 1342              	.L102:
 1343 0040 00000000 		.word	.LANCHOR0
 1344 0044 00000000 		.word	ADC_allConfigs
 1345 0048 80969800 		.word	10000000
 1346 004c 00000000 		.word	ADC_countsPer10Volt
 1347              		.cfi_endproc
 1348              	.LFE24:
 1349              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1350              		.section	.text.ADC_Init,"ax",%progbits
 1351              		.align	2
 1352              		.global	ADC_Init
 1353              		.code	16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 54


 1354              		.thumb_func
 1355              		.type	ADC_Init, %function
 1356              	ADC_Init:
 1357              	.LFB25:
1593:Generated_Source\PSoC4/ADC.c **** 
1594:Generated_Source\PSoC4/ADC.c **** #if(0u != ADC_ANY_CONFIG_USES_FILTER)
1595:Generated_Source\PSoC4/ADC.c ****     
1596:Generated_Source\PSoC4/ADC.c ****     /* ****************************************************************************
1597:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_TrimFilterVos
1598:Generated_Source\PSoC4/ADC.c ****     ****************************************************************************//*
1599:Generated_Source\PSoC4/ADC.c ****     *
1600:Generated_Source\PSoC4/ADC.c ****     * \brief Runs an algorithm to reduce voltage offset using the UAB's opamp trim.
1601:Generated_Source\PSoC4/ADC.c ****     *
1602:Generated_Source\PSoC4/ADC.c ****     * \param None
1603:Generated_Source\PSoC4/ADC.c ****     * 
1604:Generated_Source\PSoC4/ADC.c ****     * \return None
1605:Generated_Source\PSoC4/ADC.c ****     *
1606:Generated_Source\PSoC4/ADC.c ****     * \sideeffect None
1607:Generated_Source\PSoC4/ADC.c ****     *
1608:Generated_Source\PSoC4/ADC.c ****     * <b>Code Snippet</b>
1609:Generated_Source\PSoC4/ADC.c ****     *  \snippet main.c snippet_ADC_TrimFilterVos
1610:Generated_Source\PSoC4/ADC.c ****     *
1611:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
1612:Generated_Source\PSoC4/ADC.c ****     void ADC_TrimFilterVos(void)
1613:Generated_Source\PSoC4/ADC.c ****     {
1614:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim = 0uL;
1615:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = 0uL;
1616:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1617:Generated_Source\PSoC4/ADC.c ****         
1618:Generated_Source\PSoC4/ADC.c ****         ADC_SetupComparatorTrim();
1619:Generated_Source\PSoC4/ADC.c ****         
1620:Generated_Source\PSoC4/ADC.c ****         /* Sweep from center to crossing */
1621:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_SetOpampAndAgndTrim(ADC_OPAMP_TRIM_POS_BASE, ADC_AGND_TRIM_POS_BASE);
1622:Generated_Source\PSoC4/ADC.c ****         if (0uL == compStatus)
1623:Generated_Source\PSoC4/ADC.c ****         {
1624:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_RaiseOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1625:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1626:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1627:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_POS_LIMIT - 1uL)))
1628:Generated_Source\PSoC4/ADC.c ****             {
1629:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_IncOpampTrim(opampTrim);
1630:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1631:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1632:Generated_Source\PSoC4/ADC.c ****             }
1633:Generated_Source\PSoC4/ADC.c ****         }
1634:Generated_Source\PSoC4/ADC.c ****         else
1635:Generated_Source\PSoC4/ADC.c ****         {
1636:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_LowerOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1637:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1638:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_NEG_LIMIT - 1uL))
1639:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1640:Generated_Source\PSoC4/ADC.c ****             {
1641:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_DecOpampTrim(opampTrim);
1642:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1643:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1644:Generated_Source\PSoC4/ADC.c ****             }
1645:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 55


1646:Generated_Source\PSoC4/ADC.c ****         
1647:Generated_Source\PSoC4/ADC.c ****         ADC_UndoComparatorTrimSetup();
1648:Generated_Source\PSoC4/ADC.c ****     }
1649:Generated_Source\PSoC4/ADC.c ****     
1650:Generated_Source\PSoC4/ADC.c ****     
1651:Generated_Source\PSoC4/ADC.c ****     static void ADC_SetupComparatorTrim(void)
1652:Generated_Source\PSoC4/ADC.c ****     {
1653:Generated_Source\PSoC4/ADC.c ****         /* Set firmware modbit. */
1654:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1655:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1656:Generated_Source\PSoC4/ADC.c ****         
1657:Generated_Source\PSoC4/ADC.c ****         /* Open filter output switch to isolate filter during trim. */
1658:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1659:Generated_Source\PSoC4/ADC.c ****         
1660:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B reference buffer. */
1661:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_REF_PWR_MASK;
1662:Generated_Source\PSoC4/ADC.c ****         
1663:Generated_Source\PSoC4/ADC.c ****         /* Connect the UAB half B reference buffer to the comparator. */
1664:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG |= (uint32)ADC_UABH_B_SW_RT_MASK;
1665:Generated_Source\PSoC4/ADC.c ****                         
1666:Generated_Source\PSoC4/ADC.c ****         /* Clock the UAB half B comparator with phi1. */
1667:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1668:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_CLK_PHI1 << ADC_UABH_B_CMP_FF_SHIFT);
1669:Generated_Source\PSoC4/ADC.c ****         
1670:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B comparator. */
1671:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_CMP_PWR_MASK;
1672:Generated_Source\PSoC4/ADC.c ****     }
1673:Generated_Source\PSoC4/ADC.c ****     
1674:Generated_Source\PSoC4/ADC.c ****     
1675:Generated_Source\PSoC4/ADC.c ****     static void ADC_UndoComparatorTrimSetup(void)
1676:Generated_Source\PSoC4/ADC.c ****     {
1677:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B comparator. */
1678:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_CMP_PWR_MASK;
1679:Generated_Source\PSoC4/ADC.c ****         
1680:Generated_Source\PSoC4/ADC.c ****         /* Remove clock from the UAB half B comparator. */
1681:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1682:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_SW_OPEN << ADC_UABH_B_CMP_FF_SHIFT);
1683:Generated_Source\PSoC4/ADC.c ****         
1684:Generated_Source\PSoC4/ADC.c ****         /* Disconnect the UAB half B reference buffer from the comparator. */
1685:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG &= ~(uint32)ADC_UABH_B_SW_RT_MASK;
1686:Generated_Source\PSoC4/ADC.c ****                         
1687:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B reference buffer. */
1688:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_REF_PWR_MASK;
1689:Generated_Source\PSoC4/ADC.c ****         
1690:Generated_Source\PSoC4/ADC.c ****         /* Close filter output switch to connect filter to AROUTE. */
1691:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1692:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG |= (uint32)((uint32)CyUAB_CLK_PHI3 << ADC_UABH_B_SW_PO_SHIFT);
1693:Generated_Source\PSoC4/ADC.c ****         
1694:Generated_Source\PSoC4/ADC.c ****         /* Clear the modbit */
1695:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1696:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1697:Generated_Source\PSoC4/ADC.c ****     }
1698:Generated_Source\PSoC4/ADC.c ****     
1699:Generated_Source\PSoC4/ADC.c ****     
1700:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim)
1701:Generated_Source\PSoC4/ADC.c ****     {
1702:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 56


1703:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1704:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1705:Generated_Source\PSoC4/ADC.c **** 
1706:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
1707:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1708:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1709:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_IncOpampTrim(opampTrim))
1710:Generated_Source\PSoC4/ADC.c ****         {
1711:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1712:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1713:Generated_Source\PSoC4/ADC.c ****             {
1714:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1715:Generated_Source\PSoC4/ADC.c ****                 break;
1716:Generated_Source\PSoC4/ADC.c ****             }
1717:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
1718:Generated_Source\PSoC4/ADC.c ****         }
1719:Generated_Source\PSoC4/ADC.c ****         
1720:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1721:Generated_Source\PSoC4/ADC.c ****     }
1722:Generated_Source\PSoC4/ADC.c **** 
1723:Generated_Source\PSoC4/ADC.c **** 
1724:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim)
1725:Generated_Source\PSoC4/ADC.c ****     {
1726:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
1727:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1728:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1729:Generated_Source\PSoC4/ADC.c **** 
1730:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
1731:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1732:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1733:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_DecOpampTrim(opampTrim))
1734:Generated_Source\PSoC4/ADC.c ****         {
1735:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1736:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1737:Generated_Source\PSoC4/ADC.c ****             {
1738:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1739:Generated_Source\PSoC4/ADC.c ****                 break;
1740:Generated_Source\PSoC4/ADC.c ****             }
1741:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
1742:Generated_Source\PSoC4/ADC.c ****         }
1743:Generated_Source\PSoC4/ADC.c ****         
1744:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1745:Generated_Source\PSoC4/ADC.c ****     }
1746:Generated_Source\PSoC4/ADC.c **** 
1747:Generated_Source\PSoC4/ADC.c **** 
1748:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim)
1749:Generated_Source\PSoC4/ADC.c ****     {
1750:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim;
1751:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim;
1752:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1753:Generated_Source\PSoC4/ADC.c **** 
1754:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1755:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1756:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1757:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_IncAgndTrim(agndTrim))
1758:Generated_Source\PSoC4/ADC.c ****         {
1759:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 57


1760:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1761:Generated_Source\PSoC4/ADC.c ****             {
1762:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1763:Generated_Source\PSoC4/ADC.c ****                 break;
1764:Generated_Source\PSoC4/ADC.c ****             }
1765:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1766:Generated_Source\PSoC4/ADC.c ****         }
1767:Generated_Source\PSoC4/ADC.c ****         
1768:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1769:Generated_Source\PSoC4/ADC.c ****     }
1770:Generated_Source\PSoC4/ADC.c ****     
1771:Generated_Source\PSoC4/ADC.c ****     
1772:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim)
1773:Generated_Source\PSoC4/ADC.c ****     {
1774:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = startTrim;
1775:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim = agndTrim;
1776:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 1uL;
1777:Generated_Source\PSoC4/ADC.c **** 
1778:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1779:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1780:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1781:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_DecAgndTrim(agndTrim))
1782:Generated_Source\PSoC4/ADC.c ****         {
1783:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
1784:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1785:Generated_Source\PSoC4/ADC.c ****             {
1786:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1787:Generated_Source\PSoC4/ADC.c ****                 break;
1788:Generated_Source\PSoC4/ADC.c ****             }
1789:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1790:Generated_Source\PSoC4/ADC.c ****         }
1791:Generated_Source\PSoC4/ADC.c ****         
1792:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1793:Generated_Source\PSoC4/ADC.c ****     }
1794:Generated_Source\PSoC4/ADC.c ****     
1795:Generated_Source\PSoC4/ADC.c ****     
1796:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1797:Generated_Source\PSoC4/ADC.c ****     {
1798:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1799:Generated_Source\PSoC4/ADC.c ****  
1800:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1801:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1802:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1805:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1806:Generated_Source\PSoC4/ADC.c ****         
1807:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1808:Generated_Source\PSoC4/ADC.c ****         
1809:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1810:Generated_Source\PSoC4/ADC.c ****         
1811:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1812:Generated_Source\PSoC4/ADC.c ****     }
1813:Generated_Source\PSoC4/ADC.c ****     
1814:Generated_Source\PSoC4/ADC.c ****     
1815:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampTrim(uint32 opampTrim)
1816:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 58


1817:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1818:Generated_Source\PSoC4/ADC.c ****  
1819:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1820:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1821:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1822:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1823:Generated_Source\PSoC4/ADC.c ****         
1824:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1825:Generated_Source\PSoC4/ADC.c ****         
1826:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1827:Generated_Source\PSoC4/ADC.c ****         
1828:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1829:Generated_Source\PSoC4/ADC.c ****     }
1830:Generated_Source\PSoC4/ADC.c ****     
1831:Generated_Source\PSoC4/ADC.c ****     
1832:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetAgndTrim(uint32 agndTrim)
1833:Generated_Source\PSoC4/ADC.c ****     {
1834:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1835:Generated_Source\PSoC4/ADC.c ****  
1836:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1837:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1838:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1839:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1840:Generated_Source\PSoC4/ADC.c ****         
1841:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1842:Generated_Source\PSoC4/ADC.c ****         
1843:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1844:Generated_Source\PSoC4/ADC.c ****         
1845:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1846:Generated_Source\PSoC4/ADC.c ****     }
1847:Generated_Source\PSoC4/ADC.c ****     
1848:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1849:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncOpampTrim(uint32 trim)
1850:Generated_Source\PSoC4/ADC.c ****     {
1851:Generated_Source\PSoC4/ADC.c ****         
1852:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_OPAMP_TRIM_POS_LIMIT - 1uL))
1853:Generated_Source\PSoC4/ADC.c ****         {
1854:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1855:Generated_Source\PSoC4/ADC.c ****         }
1856:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1857:Generated_Source\PSoC4/ADC.c ****         {
1858:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_LIMIT;
1859:Generated_Source\PSoC4/ADC.c ****         }
1860:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_OPAMP_TRIM_NEG_BASE + 1uL))
1861:Generated_Source\PSoC4/ADC.c ****         {
1862:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_BASE;
1863:Generated_Source\PSoC4/ADC.c ****         }
1864:Generated_Source\PSoC4/ADC.c ****         else
1865:Generated_Source\PSoC4/ADC.c ****         {
1866:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1867:Generated_Source\PSoC4/ADC.c ****         }
1868:Generated_Source\PSoC4/ADC.c ****         
1869:Generated_Source\PSoC4/ADC.c ****         return trim;
1870:Generated_Source\PSoC4/ADC.c ****     }
1871:Generated_Source\PSoC4/ADC.c **** 
1872:Generated_Source\PSoC4/ADC.c **** 
1873:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 59


1874:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecOpampTrim(uint32 trim)
1875:Generated_Source\PSoC4/ADC.c ****     {
1876:Generated_Source\PSoC4/ADC.c ****         
1877:Generated_Source\PSoC4/ADC.c ****         if (ADC_OPAMP_TRIM_POS_BASE == trim)
1878:Generated_Source\PSoC4/ADC.c ****         {
1879:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_BASE + 1uL;
1880:Generated_Source\PSoC4/ADC.c ****         }
1881:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_POS_LIMIT)
1882:Generated_Source\PSoC4/ADC.c ****         {
1883:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1884:Generated_Source\PSoC4/ADC.c ****         }
1885:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_NEG_LIMIT)
1886:Generated_Source\PSoC4/ADC.c ****         {
1887:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1888:Generated_Source\PSoC4/ADC.c ****         }
1889:Generated_Source\PSoC4/ADC.c ****         else
1890:Generated_Source\PSoC4/ADC.c ****         {
1891:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_LIMIT - 1uL;
1892:Generated_Source\PSoC4/ADC.c ****         }
1893:Generated_Source\PSoC4/ADC.c ****         
1894:Generated_Source\PSoC4/ADC.c ****         return trim;
1895:Generated_Source\PSoC4/ADC.c ****     }
1896:Generated_Source\PSoC4/ADC.c **** 
1897:Generated_Source\PSoC4/ADC.c **** 
1898:Generated_Source\PSoC4/ADC.c ****     /* Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1899:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncAgndTrim(uint32 trim)
1900:Generated_Source\PSoC4/ADC.c ****     {
1901:Generated_Source\PSoC4/ADC.c ****         
1902:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1903:Generated_Source\PSoC4/ADC.c ****         {
1904:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1905:Generated_Source\PSoC4/ADC.c ****         }
1906:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1907:Generated_Source\PSoC4/ADC.c ****         {
1908:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_LIMIT;
1909:Generated_Source\PSoC4/ADC.c ****         }
1910:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_AGND_TRIM_NEG_BASE + 1uL))
1911:Generated_Source\PSoC4/ADC.c ****         {
1912:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_BASE;
1913:Generated_Source\PSoC4/ADC.c ****         }
1914:Generated_Source\PSoC4/ADC.c ****         else
1915:Generated_Source\PSoC4/ADC.c ****         {
1916:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1917:Generated_Source\PSoC4/ADC.c ****         }
1918:Generated_Source\PSoC4/ADC.c ****         
1919:Generated_Source\PSoC4/ADC.c ****         return trim;
1920:Generated_Source\PSoC4/ADC.c ****     }
1921:Generated_Source\PSoC4/ADC.c **** 
1922:Generated_Source\PSoC4/ADC.c **** 
1923:Generated_Source\PSoC4/ADC.c ****     /* Skips ADC_AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1924:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecAgndTrim(uint32 trim)
1925:Generated_Source\PSoC4/ADC.c ****     {
1926:Generated_Source\PSoC4/ADC.c ****         
1927:Generated_Source\PSoC4/ADC.c ****         if (trim == ADC_AGND_TRIM_POS_BASE)
1928:Generated_Source\PSoC4/ADC.c ****         {
1929:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_BASE + 1uL;
1930:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 60


1931:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_POS_LIMIT)
1932:Generated_Source\PSoC4/ADC.c ****         {
1933:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1934:Generated_Source\PSoC4/ADC.c ****         }
1935:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_NEG_LIMIT)
1936:Generated_Source\PSoC4/ADC.c ****         {
1937:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1938:Generated_Source\PSoC4/ADC.c ****         }
1939:Generated_Source\PSoC4/ADC.c ****         else
1940:Generated_Source\PSoC4/ADC.c ****         {
1941:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_LIMIT - 1uL;
1942:Generated_Source\PSoC4/ADC.c ****         }
1943:Generated_Source\PSoC4/ADC.c ****         
1944:Generated_Source\PSoC4/ADC.c ****         return trim;
1945:Generated_Source\PSoC4/ADC.c ****     }
1946:Generated_Source\PSoC4/ADC.c **** 
1947:Generated_Source\PSoC4/ADC.c ****     
1948:Generated_Source\PSoC4/ADC.c ****     void ADC_filterInit(uint32 configNum)
1949:Generated_Source\PSoC4/ADC.c ****     {
1950:Generated_Source\PSoC4/ADC.c ****         /* Configure the common filter settings if any configuration filters */
1951:Generated_Source\PSoC4/ADC.c ****         switch (configNum)
1952:Generated_Source\PSoC4/ADC.c ****         {
1953:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG0_FILTER_PRESENT)
1954:Generated_Source\PSoC4/ADC.c ****             case 0u:
1955:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG0_UABH_A_FILTER_config);
1956:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG0_UABH_B_FILTER_config);
1957:Generated_Source\PSoC4/ADC.c ****                 
1958:Generated_Source\PSoC4/ADC.c ****             break;
1959:Generated_Source\PSoC4/ADC.c ****             #endif
1960:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG1_FILTER_PRESENT)
1961:Generated_Source\PSoC4/ADC.c ****             case 1u:
1962:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG1_UABH_A_FILTER_config);
1963:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG1_UABH_B_FILTER_config);
1964:Generated_Source\PSoC4/ADC.c ****                 
1965:Generated_Source\PSoC4/ADC.c ****             break;
1966:Generated_Source\PSoC4/ADC.c ****             #endif
1967:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG2_FILTER_PRESENT)
1968:Generated_Source\PSoC4/ADC.c ****             case 2u:
1969:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG2_UABH_A_FILTER_config);
1970:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG2_UABH_B_FILTER_config);
1971:Generated_Source\PSoC4/ADC.c ****                 
1972:Generated_Source\PSoC4/ADC.c ****             break;
1973:Generated_Source\PSoC4/ADC.c ****             #endif
1974:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG3_FILTER_PRESENT)
1975:Generated_Source\PSoC4/ADC.c ****             case 3u:
1976:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG3_UABH_A_FILTER_config);
1977:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG3_UABH_B_FILTER_config);
1978:Generated_Source\PSoC4/ADC.c ****                 
1979:Generated_Source\PSoC4/ADC.c ****             break;
1980:Generated_Source\PSoC4/ADC.c ****             #endif
1981:Generated_Source\PSoC4/ADC.c ****             default:
1982:Generated_Source\PSoC4/ADC.c ****             break;
1983:Generated_Source\PSoC4/ADC.c ****         }
1984:Generated_Source\PSoC4/ADC.c ****         ADC_FILTERAGND2SAR_BUFFER_Init();
1985:Generated_Source\PSoC4/ADC.c ****     }
1986:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1987:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 61


1988:Generated_Source\PSoC4/ADC.c **** 
1989:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1990:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
1991:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1992:Generated_Source\PSoC4/ADC.c **** *
1993:Generated_Source\PSoC4/ADC.c **** * \brief Initialize the component according to parameters defined in the 
1994:Generated_Source\PSoC4/ADC.c **** * customizer.
1995:Generated_Source\PSoC4/ADC.c **** *
1996:Generated_Source\PSoC4/ADC.c **** * \param None
1997:Generated_Source\PSoC4/ADC.c **** * 
1998:Generated_Source\PSoC4/ADC.c **** * \return None
1999:Generated_Source\PSoC4/ADC.c **** *
2000:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
2001:Generated_Source\PSoC4/ADC.c **** *
2002:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
2003:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Init
2004:Generated_Source\PSoC4/ADC.c **** *
2005:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2006:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
2007:Generated_Source\PSoC4/ADC.c **** {
 1358              		.loc 1 2007 0
 1359              		.cfi_startproc
 1360 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1361              		.cfi_def_cfa_offset 20
 1362              		.cfi_offset 4, -20
 1363              		.cfi_offset 5, -16
 1364              		.cfi_offset 6, -12
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 4746     		mov	r7, r8
 1368 0004 80B4     		push	{r7}
 1369              		.cfi_def_cfa_offset 24
 1370              		.cfi_offset 8, -24
 1371              	.LVL130:
2008:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum = 0ul;
2009:Generated_Source\PSoC4/ADC.c **** 	uint32 configNum = 0u;
2010:Generated_Source\PSoC4/ADC.c **** 	int32 counts;
2011:Generated_Source\PSoC4/ADC.c **** 	
2012:Generated_Source\PSoC4/ADC.c **** 	if(0u == ADC_initVar)
 1372              		.loc 1 2012 0
 1373 0006 3C4B     		ldr	r3, .L116
 1374 0008 1B79     		ldrb	r3, [r3, #4]
 1375 000a 002B     		cmp	r3, #0
 1376 000c 56D0     		beq	.L113
 1377 000e 6FE0     		b	.L104
 1378              	.LVL131:
 1379              	.L112:
2013:Generated_Source\PSoC4/ADC.c **** 	{
2014:Generated_Source\PSoC4/ADC.c **** 		/* Set offset and countsPer10Volt for all channels */
2015:Generated_Source\PSoC4/ADC.c **** 		for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
2016:Generated_Source\PSoC4/ADC.c **** 		{      
2017:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
 1380              		.loc 1 2017 0
 1381 0010 A300     		lsl	r3, r4, #2
 1382 0012 3A4A     		ldr	r2, .L116+4
 1383 0014 9A58     		ldr	r2, [r3, r2]
 1384 0016 9305     		lsl	r3, r2, #22
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 62


 1385 0018 0AD5     		bpl	.L114
2018:Generated_Source\PSoC4/ADC.c ****         	{
2019:Generated_Source\PSoC4/ADC.c **** 				if((ADC_allConfigs[configNum].sampleCtrl 
 1386              		.loc 1 2019 0
 1387 001a FB00     		lsl	r3, r7, #3
 1388 001c DB1B     		sub	r3, r3, r7
 1389 001e DB00     		lsl	r3, r3, #3
 1390 0020 3749     		ldr	r1, .L116+8
 1391 0022 CB18     		add	r3, r1, r3
 1392 0024 DB68     		ldr	r3, [r3, #12]
 1393 0026 DB07     		lsl	r3, r3, #31
 1394 0028 05D5     		bpl	.L115
2020:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
2021:Generated_Source\PSoC4/ADC.c **** 					== ADC_SUB_RESOLUTION_10B)
2022:Generated_Source\PSoC4/ADC.c **** 				{
2023:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_10BIT;
 1395              		.loc 1 2023 0
 1396 002a 8020     		mov	r0, #128
 1397 002c C000     		lsl	r0, r0, #3
 1398 002e 04E0     		b	.L107
 1399              	.L114:
2024:Generated_Source\PSoC4/ADC.c **** 				}
2025:Generated_Source\PSoC4/ADC.c **** 				else
2026:Generated_Source\PSoC4/ADC.c **** 				{
2027:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_8BIT;
2028:Generated_Source\PSoC4/ADC.c **** 				}
2029:Generated_Source\PSoC4/ADC.c ****         	}
2030:Generated_Source\PSoC4/ADC.c ****         	else
2031:Generated_Source\PSoC4/ADC.c ****         	{
2032:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 1400              		.loc 1 2032 0
 1401 0030 8020     		mov	r0, #128
 1402 0032 4001     		lsl	r0, r0, #5
 1403 0034 01E0     		b	.L107
 1404              	.L115:
2027:Generated_Source\PSoC4/ADC.c **** 				}
 1405              		.loc 1 2027 0
 1406 0036 8020     		mov	r0, #128
 1407 0038 4000     		lsl	r0, r0, #1
 1408              	.L107:
 1409              	.LVL132:
2033:Generated_Source\PSoC4/ADC.c ****         	}
2034:Generated_Source\PSoC4/ADC.c **** 			
2035:Generated_Source\PSoC4/ADC.c **** 			/* Single Ended Channel */
2036:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
 1410              		.loc 1 2036 0
 1411 003a D305     		lsl	r3, r2, #23
 1412 003c 1DD4     		bmi	.L108
2037:Generated_Source\PSoC4/ADC.c ****         	{
2038:Generated_Source\PSoC4/ADC.c **** 				if(((ADC_allConfigs[configNum].sampleCtrl 
 1413              		.loc 1 2038 0
 1414 003e FB00     		lsl	r3, r7, #3
 1415 0040 DB1B     		sub	r3, r3, r7
 1416 0042 DB00     		lsl	r3, r3, #3
 1417 0044 2E4A     		ldr	r2, .L116+8
 1418 0046 D318     		add	r3, r2, r3
 1419 0048 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 63


 1420 004a 5B07     		lsl	r3, r3, #29
 1421 004c 10D5     		bpl	.L109
2039:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) 
2040:Generated_Source\PSoC4/ADC.c **** 					== ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) && 
2041:Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1422              		.loc 1 2041 0
 1423 004e FB00     		lsl	r3, r7, #3
 1424 0050 DB1B     		sub	r3, r3, r7
 1425 0052 DB00     		lsl	r3, r3, #3
 1426 0054 D318     		add	r3, r2, r3
 1427 0056 9B68     		ldr	r3, [r3, #8]
 1428 0058 E022     		mov	r2, #224
 1429 005a 1201     		lsl	r2, r2, #4
 1430 005c 1340     		and	r3, r2
2040:Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1431              		.loc 1 2040 0
 1432 005e 9342     		cmp	r3, r2
 1433 0060 06D1     		bne	.L109
2042:Generated_Source\PSoC4/ADC.c **** 					== ADC_NEG_VREF_SHIFTED))
2043:Generated_Source\PSoC4/ADC.c **** 				{
2044:Generated_Source\PSoC4/ADC.c **** 					/* Set offset to the minus half scale to convert results to unsigned format */
2045:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = (int16)(counts / -2);		
 1434              		.loc 1 2045 0
 1435 0062 4308     		lsr	r3, r0, #1
 1436 0064 5B42     		neg	r3, r3
 1437 0066 9BB2     		uxth	r3, r3
 1438 0068 6200     		lsl	r2, r4, #1
 1439 006a 2649     		ldr	r1, .L116+12
 1440 006c 5352     		strh	r3, [r2, r1]
 1441 006e 08E0     		b	.L110
 1442              	.L109:
2046:Generated_Source\PSoC4/ADC.c ****             	}
2047:Generated_Source\PSoC4/ADC.c **** 				else
2048:Generated_Source\PSoC4/ADC.c **** 				{
2049:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = 0;	
 1443              		.loc 1 2049 0
 1444 0070 6300     		lsl	r3, r4, #1
 1445 0072 0021     		mov	r1, #0
 1446 0074 234A     		ldr	r2, .L116+12
 1447 0076 9952     		strh	r1, [r3, r2]
 1448 0078 03E0     		b	.L110
 1449              	.L108:
2050:Generated_Source\PSoC4/ADC.c **** 				}
2051:Generated_Source\PSoC4/ADC.c **** 				
2052:Generated_Source\PSoC4/ADC.c **** 			}
2053:Generated_Source\PSoC4/ADC.c **** 			else    /* Differential channel */
2054:Generated_Source\PSoC4/ADC.c ****         	{
2055:Generated_Source\PSoC4/ADC.c ****                	ADC_offset[chNum] = 0; 
 1450              		.loc 1 2055 0
 1451 007a 6300     		lsl	r3, r4, #1
 1452 007c 0021     		mov	r1, #0
 1453 007e 214A     		ldr	r2, .L116+12
 1454 0080 9952     		strh	r1, [r3, r2]
 1455              	.L110:
2056:Generated_Source\PSoC4/ADC.c **** 			}
2057:Generated_Source\PSoC4/ADC.c ****             
2058:Generated_Source\PSoC4/ADC.c **** 			/* Calculate gain in counts per 10 volts with rounding */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 64


2059:Generated_Source\PSoC4/ADC.c ****         	ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) \
 1456              		.loc 1 2059 0
 1457 0082 214B     		ldr	r3, .L116+16
 1458 0084 5843     		mul	r0, r3
 1459              	.LVL133:
2060:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1460              		.loc 1 2060 0
 1461 0086 1E4B     		ldr	r3, .L116+8
 1462 0088 9846     		mov	r8, r3
 1463 008a FE00     		lsl	r6, r7, #3
 1464 008c F51B     		sub	r5, r6, r7
 1465 008e ED00     		lsl	r5, r5, #3
 1466 0090 4544     		add	r5, r5, r8
 1467 0092 E96A     		ldr	r1, [r5, #44]
 1468 0094 4018     		add	r0, r0, r1
2061:Generated_Source\PSoC4/ADC.c **** 							/ (ADC_allConfigs[configNum].vrefMvValue * 2));
 1469              		.loc 1 2061 0
 1470 0096 4900     		lsl	r1, r1, #1
 1471 0098 FFF7FEFF 		bl	__aeabi_idiv
 1472              	.LVL134:
2059:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1473              		.loc 1 2059 0
 1474 009c 00B2     		sxth	r0, r0
 1475 009e A300     		lsl	r3, r4, #2
 1476 00a0 1A4A     		ldr	r2, .L116+20
 1477 00a2 9850     		str	r0, [r3, r2]
2062:Generated_Source\PSoC4/ADC.c ****             
2063:Generated_Source\PSoC4/ADC.c ****             /* Increment configuration number after rolling over to the next configuration*/
2064:Generated_Source\PSoC4/ADC.c **** 			if((ADC_allConfigs[configNum].channelBase
 1478              		.loc 1 2064 0
 1479 00a4 F31B     		sub	r3, r6, r7
 1480 00a6 DB00     		lsl	r3, r3, #3
 1481 00a8 4246     		mov	r2, r8
 1482 00aa 9A58     		ldr	r2, [r3, r2]
2065:Generated_Source\PSoC4/ADC.c **** 				+ (ADC_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1483              		.loc 1 2065 0
 1484 00ac 6B68     		ldr	r3, [r5, #4]
 1485 00ae D318     		add	r3, r2, r3
 1486 00b0 013B     		sub	r3, r3, #1
2064:Generated_Source\PSoC4/ADC.c **** 				+ (ADC_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1487              		.loc 1 2064 0
 1488 00b2 A342     		cmp	r3, r4
 1489 00b4 00D1     		bne	.L111
2066:Generated_Source\PSoC4/ADC.c **** 			{
2067:Generated_Source\PSoC4/ADC.c **** 				configNum++;
 1490              		.loc 1 2067 0
 1491 00b6 0137     		add	r7, r7, #1
 1492              	.LVL135:
 1493              	.L111:
2015:Generated_Source\PSoC4/ADC.c **** 		{      
 1494              		.loc 1 2015 0 discriminator 2
 1495 00b8 0134     		add	r4, r4, #1
 1496              	.LVL136:
 1497 00ba 01E0     		b	.L105
 1498              	.LVL137:
 1499              	.L113:
 1500 00bc 0027     		mov	r7, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 65


 1501 00be 0024     		mov	r4, #0
 1502              	.LVL138:
 1503              	.L105:
2015:Generated_Source\PSoC4/ADC.c **** 		{      
 1504              		.loc 1 2015 0 is_stmt 0 discriminator 1
 1505 00c0 012C     		cmp	r4, #1
 1506 00c2 A5D9     		bls	.L112
2068:Generated_Source\PSoC4/ADC.c **** 			}
2069:Generated_Source\PSoC4/ADC.c **** 		} /* for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++) */
2070:Generated_Source\PSoC4/ADC.c ****         
2071:Generated_Source\PSoC4/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
2072:Generated_Source\PSoC4/ADC.c ****             /* Start and set interrupt vector */
2073:Generated_Source\PSoC4/ADC.c ****             CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 1507              		.loc 1 2073 0 is_stmt 1
 1508 00c4 0F20     		mov	r0, #15
 1509 00c6 0321     		mov	r1, #3
 1510 00c8 FFF7FEFF 		bl	CyIntSetPriority
 1511              	.LVL139:
2074:Generated_Source\PSoC4/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 1512              		.loc 1 2074 0
 1513 00cc 0F20     		mov	r0, #15
 1514 00ce 1049     		ldr	r1, .L116+24
 1515 00d0 FFF7FEFF 		bl	CyIntSetVector
 1516              	.LVL140:
2075:Generated_Source\PSoC4/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
2076:Generated_Source\PSoC4/ADC.c ****         
2077:Generated_Source\PSoC4/ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2078:Generated_Source\PSoC4/ADC.c ****         if(0u == ADC_selected)
 1517              		.loc 1 2078 0
 1518 00d4 084B     		ldr	r3, .L116
 1519 00d6 5B79     		ldrb	r3, [r3, #5]
 1520 00d8 002B     		cmp	r3, #0
 1521 00da 09D1     		bne	.L104
2079:Generated_Source\PSoC4/ADC.c **** 	    {
2080:Generated_Source\PSoC4/ADC.c ****             ADC_selected = 1u;
 1522              		.loc 1 2080 0
 1523 00dc 0122     		mov	r2, #1
 1524 00de 064B     		ldr	r3, .L116
 1525 00e0 5A71     		strb	r2, [r3, #5]
 1526              	.LVL141:
2081:Generated_Source\PSoC4/ADC.c ****             configNum = 0u;
2082:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2083:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2084:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_DisconnectAll();
2085:Generated_Source\PSoC4/ADC.c ****             #endif
2086:Generated_Source\PSoC4/ADC.c ****             ADC_InitConfig(&ADC_allConfigs[configNum]);
 1527              		.loc 1 2086 0
 1528 00e2 074C     		ldr	r4, .L116+8
 1529              	.LVL142:
 1530 00e4 201C     		mov	r0, r4
 1531 00e6 FFF7FEFF 		bl	ADC_InitConfig
 1532              	.LVL143:
2087:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2088:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2089:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_Select((uint8)configNum);
2090:Generated_Source\PSoC4/ADC.c ****             #endif
2091:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_CHAN_EN_REG = ADC_allConfigs[configNum].chanEn;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 66


 1533              		.loc 1 2091 0
 1534 00ea 226A     		ldr	r2, [r4, #32]
 1535 00ec 094B     		ldr	r3, .L116+28
 1536 00ee 1A60     		str	r2, [r3]
 1537              	.LVL144:
 1538              	.L104:
2092:Generated_Source\PSoC4/ADC.c ****             #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2093:Generated_Source\PSoC4/ADC.c ****                 ADC_filterVinMux_Select((uint8)configNum);
2094:Generated_Source\PSoC4/ADC.c ****                 ADC_filterInit(configNum);
2095:Generated_Source\PSoC4/ADC.c ****             #endif
2096:Generated_Source\PSoC4/ADC.c ****         }           
2097:Generated_Source\PSoC4/ADC.c **** 	}
2098:Generated_Source\PSoC4/ADC.c ****     return;
2099:Generated_Source\PSoC4/ADC.c **** }
 1539              		.loc 1 2099 0
 1540              		@ sp needed
 1541 00f0 04BC     		pop	{r2}
 1542 00f2 9046     		mov	r8, r2
 1543 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1544              	.L117:
 1545 00f6 C046     		.align	2
 1546              	.L116:
 1547 00f8 00000000 		.word	.LANCHOR0
 1548 00fc 00000000 		.word	.LANCHOR1
 1549 0100 00000000 		.word	ADC_allConfigs
 1550 0104 00000000 		.word	ADC_offset
 1551 0108 10270000 		.word	10000
 1552 010c 00000000 		.word	ADC_countsPer10Volt
 1553 0110 00000000 		.word	ADC_ISR
 1554 0114 20003A40 		.word	1077542944
 1555              		.cfi_endproc
 1556              	.LFE25:
 1557              		.size	ADC_Init, .-ADC_Init
 1558              		.section	.text.ADC_Enable,"ax",%progbits
 1559              		.align	2
 1560              		.global	ADC_Enable
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	ADC_Enable, %function
 1564              	ADC_Enable:
 1565              	.LFB26:
2100:Generated_Source\PSoC4/ADC.c **** 
2101:Generated_Source\PSoC4/ADC.c **** 
2102:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
2103:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Enable
2104:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
2105:Generated_Source\PSoC4/ADC.c **** *
2106:Generated_Source\PSoC4/ADC.c **** * \brief Enables the component. 
2107:Generated_Source\PSoC4/ADC.c **** *
2108:Generated_Source\PSoC4/ADC.c **** * \param None
2109:Generated_Source\PSoC4/ADC.c **** * 
2110:Generated_Source\PSoC4/ADC.c **** * \return None
2111:Generated_Source\PSoC4/ADC.c **** * 
2112:Generated_Source\PSoC4/ADC.c **** * \sideeffect
2113:Generated_Source\PSoC4/ADC.c **** *  None
2114:Generated_Source\PSoC4/ADC.c **** *
2115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 67


2116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Enable
2117:Generated_Source\PSoC4/ADC.c **** *
2118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2119:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void) 
2120:Generated_Source\PSoC4/ADC.c **** {
 1566              		.loc 1 2120 0
 1567              		.cfi_startproc
 1568 0000 08B5     		push	{r3, lr}
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 3, -8
 1571              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/ADC.c **** 
2122:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2123:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig
2124:Generated_Source\PSoC4/ADC.c ****     		& ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2125:Generated_Source\PSoC4/ADC.c ****     		== ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2126:Generated_Source\PSoC4/ADC.c ****     	{
2127:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Enable();
2128:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Enable();
2129:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Enable();
2130:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_Run(1u);
2131:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_Run(1u);
2132:Generated_Source\PSoC4/ADC.c ****     	}
2133:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
2134:Generated_Source\PSoC4/ADC.c ****         
2135:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_SAR_CTRL_ENABLED_MSK))
 1572              		.loc 1 2135 0
 1573 0002 094B     		ldr	r3, .L121
 1574 0004 1B68     		ldr	r3, [r3]
 1575 0006 002B     		cmp	r3, #0
 1576 0008 0CDB     		blt	.L118
 1577              	.L120:
2136:Generated_Source\PSoC4/ADC.c ****     {
2137:Generated_Source\PSoC4/ADC.c ****         while (0u != (ADC_SAR_STATUS_REG & ADC_BUSY_MSK))
 1578              		.loc 1 2137 0 discriminator 1
 1579 000a 084B     		ldr	r3, .L121+4
 1580 000c 1B68     		ldr	r3, [r3]
 1581 000e 002B     		cmp	r3, #0
 1582 0010 FBDB     		blt	.L120
2138:Generated_Source\PSoC4/ADC.c ****         {
2139:Generated_Source\PSoC4/ADC.c ****             /* wait for SAR to go idle to avoid deadlock */
2140:Generated_Source\PSoC4/ADC.c ****         }
2141:Generated_Source\PSoC4/ADC.c ****         
2142:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_SAR_CTRL_ENABLED_MSK;
 1583              		.loc 1 2142 0
 1584 0012 054A     		ldr	r2, .L121
 1585 0014 1368     		ldr	r3, [r2]
 1586 0016 8021     		mov	r1, #128
 1587 0018 0906     		lsl	r1, r1, #24
 1588 001a 0B43     		orr	r3, r1
 1589 001c 1360     		str	r3, [r2]
2143:Generated_Source\PSoC4/ADC.c ****         
2144:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2145:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);
 1590              		.loc 1 2145 0
 1591 001e 0A20     		mov	r0, #10
 1592 0020 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 68


 1593              	.LVL145:
 1594              	.L118:
2146:Generated_Source\PSoC4/ADC.c ****     }
2147:Generated_Source\PSoC4/ADC.c ****     return;
2148:Generated_Source\PSoC4/ADC.c **** }
 1595              		.loc 1 2148 0
 1596              		@ sp needed
 1597 0024 08BD     		pop	{r3, pc}
 1598              	.L122:
 1599 0026 C046     		.align	2
 1600              	.L121:
 1601 0028 00003A40 		.word	1077542912
 1602 002c A0023A40 		.word	1077543584
 1603              		.cfi_endproc
 1604              	.LFE26:
 1605              		.size	ADC_Enable, .-ADC_Enable
 1606              		.section	.text.ADC_Start,"ax",%progbits
 1607              		.align	2
 1608              		.global	ADC_Start
 1609              		.code	16
 1610              		.thumb_func
 1611              		.type	ADC_Start, %function
 1612              	ADC_Start:
 1613              	.LFB1:
 571:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 1614              		.loc 1 571 0
 1615              		.cfi_startproc
 1616 0000 08B5     		push	{r3, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 3, -8
 1619              		.cfi_offset 14, -4
 572:Generated_Source\PSoC4/ADC.c ****     {
 1620              		.loc 1 572 0
 1621 0002 074B     		ldr	r3, .L125
 1622 0004 1B79     		ldrb	r3, [r3, #4]
 1623 0006 DB07     		lsl	r3, r3, #31
 1624 0008 06D4     		bmi	.L124
 574:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1625              		.loc 1 574 0
 1626 000a FFF7FEFF 		bl	ADC_Init
 1627              	.LVL146:
 575:Generated_Source\PSoC4/ADC.c ****     }
 1628              		.loc 1 575 0
 1629 000e 044A     		ldr	r2, .L125
 1630 0010 1179     		ldrb	r1, [r2, #4]
 1631 0012 0123     		mov	r3, #1
 1632 0014 0B43     		orr	r3, r1
 1633 0016 1371     		strb	r3, [r2, #4]
 1634              	.L124:
 578:Generated_Source\PSoC4/ADC.c ****     
 1635              		.loc 1 578 0
 1636 0018 FFF7FEFF 		bl	ADC_Enable
 1637              	.LVL147:
 581:Generated_Source\PSoC4/ADC.c **** 
 1638              		.loc 1 581 0
 1639              		@ sp needed
 1640 001c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 69


 1641              	.L126:
 1642 001e C046     		.align	2
 1643              	.L125:
 1644 0020 00000000 		.word	.LANCHOR0
 1645              		.cfi_endproc
 1646              	.LFE1:
 1647              		.size	ADC_Start, .-ADC_Start
 1648              		.section	.text.ADC_StartEx,"ax",%progbits
 1649              		.align	2
 1650              		.global	ADC_StartEx
 1651              		.code	16
 1652              		.thumb_func
 1653              		.type	ADC_StartEx, %function
 1654              	ADC_StartEx:
 1655              	.LFB2:
 603:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 1656              		.loc 1 603 0
 1657              		.cfi_startproc
 1658              	.LVL148:
 1659 0000 10B5     		push	{r4, lr}
 1660              		.cfi_def_cfa_offset 8
 1661              		.cfi_offset 4, -8
 1662              		.cfi_offset 14, -4
 1663 0002 041C     		mov	r4, r0
 604:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 1664              		.loc 1 604 0
 1665 0004 FFF7FEFF 		bl	ADC_Start
 1666              	.LVL149:
 605:Generated_Source\PSoC4/ADC.c ****     return;
 1667              		.loc 1 605 0
 1668 0008 201C     		mov	r0, r4
 1669 000a FFF7FEFF 		bl	ADC_IRQ_StartEx
 1670              	.LVL150:
 607:Generated_Source\PSoC4/ADC.c **** 
 1671              		.loc 1 607 0
 1672              		@ sp needed
 1673              	.LVL151:
 1674 000e 10BD     		pop	{r4, pc}
 1675              		.cfi_endproc
 1676              	.LFE2:
 1677              		.size	ADC_StartEx, .-ADC_StartEx
 1678              		.section	.text.ADC_SelectConfig,"ax",%progbits
 1679              		.align	2
 1680              		.global	ADC_SelectConfig
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	ADC_SelectConfig, %function
 1684              	ADC_SelectConfig:
 1685              	.LFB5:
 770:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 1686              		.loc 1 770 0
 1687              		.cfi_startproc
 1688              	.LVL152:
 1689 0000 70B5     		push	{r4, r5, r6, lr}
 1690              		.cfi_def_cfa_offset 16
 1691              		.cfi_offset 4, -16
 1692              		.cfi_offset 5, -12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 70


 1693              		.cfi_offset 6, -8
 1694              		.cfi_offset 14, -4
 772:Generated_Source\PSoC4/ADC.c ****     {        
 1695              		.loc 1 772 0
 1696 0002 0028     		cmp	r0, #0
 1697 0004 29D1     		bne	.L128
 1698 0006 0E1C     		mov	r6, r1
 1699 0008 051C     		mov	r5, r0
 775:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 1700              		.loc 1 775 0
 1701 000a FFF7FEFF 		bl	ADC_Stop
 1702              	.LVL153:
 776:Generated_Source\PSoC4/ADC.c ****         
 1703              		.loc 1 776 0
 1704 000e 134B     		ldr	r3, .L131
 1705 0010 0122     		mov	r2, #1
 1706 0012 5A71     		strb	r2, [r3, #5]
 778:Generated_Source\PSoC4/ADC.c ****     	{
 1707              		.loc 1 778 0
 1708 0014 1B79     		ldrb	r3, [r3, #4]
 1709 0016 002B     		cmp	r3, #0
 1710 0018 06D1     		bne	.L130
 780:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1711              		.loc 1 780 0
 1712 001a FFF7FEFF 		bl	ADC_Init
 1713              	.LVL154:
 781:Generated_Source\PSoC4/ADC.c ****     	}
 1714              		.loc 1 781 0
 1715 001e 0F4A     		ldr	r2, .L131
 1716 0020 1179     		ldrb	r1, [r2, #4]
 1717 0022 0123     		mov	r3, #1
 1718 0024 0B43     		orr	r3, r1
 1719 0026 1371     		strb	r3, [r2, #4]
 1720              	.L130:
 786:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 1721              		.loc 1 786 0
 1722 0028 EC00     		lsl	r4, r5, #3
 1723 002a 641B     		sub	r4, r4, r5
 1724 002c E400     		lsl	r4, r4, #3
 1725 002e 0C4B     		ldr	r3, .L131+4
 1726 0030 E418     		add	r4, r4, r3
 1727 0032 201C     		mov	r0, r4
 1728 0034 FFF7FEFF 		bl	ADC_InitConfig
 1729              	.LVL155:
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 1730              		.loc 1 794 0
 1731 0038 0A4B     		ldr	r3, .L131+8
 1732 003a 226A     		ldr	r2, [r4, #32]
 1733 003c 1A60     		str	r2, [r3]
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 1734              		.loc 1 795 0
 1735 003e 0A4B     		ldr	r3, .L131+12
 1736 0040 626A     		ldr	r2, [r4, #36]
 1737 0042 1A60     		str	r2, [r3]
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 1738              		.loc 1 796 0
 1739 0044 A26A     		ldr	r2, [r4, #40]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 71


 1740 0046 094B     		ldr	r3, .L131+16
 1741 0048 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC.c ****         
 1742              		.loc 1 797 0
 1743 004a 044B     		ldr	r3, .L131
 1744 004c 1D60     		str	r5, [r3]
 799:Generated_Source\PSoC4/ADC.c ****         {
 1745              		.loc 1 799 0
 1746 004e 012E     		cmp	r6, #1
 1747 0050 03D1     		bne	.L128
 802:Generated_Source\PSoC4/ADC.c ****             
 1748              		.loc 1 802 0
 1749 0052 FFF7FEFF 		bl	ADC_Start
 1750              	.LVL156:
 805:Generated_Source\PSoC4/ADC.c ****         }
 1751              		.loc 1 805 0
 1752 0056 FFF7FEFF 		bl	ADC_StartConvert
 1753              	.LVL157:
 1754              	.L128:
 809:Generated_Source\PSoC4/ADC.c **** 
 1755              		.loc 1 809 0
 1756              		@ sp needed
 1757 005a 70BD     		pop	{r4, r5, r6, pc}
 1758              	.L132:
 1759              		.align	2
 1760              	.L131:
 1761 005c 00000000 		.word	.LANCHOR0
 1762 0060 00000000 		.word	ADC_allConfigs
 1763 0064 20003A40 		.word	1077542944
 1764 0068 38023A40 		.word	1077543480
 1765 006c 28023A40 		.word	1077543464
 1766              		.cfi_endproc
 1767              	.LFE5:
 1768              		.size	ADC_SelectConfig, .-ADC_SelectConfig
 1769              		.section	.text.ADC_StopConvert,"ax",%progbits
 1770              		.align	2
 1771              		.global	ADC_StopConvert
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	ADC_StopConvert, %function
 1775              	ADC_StopConvert:
 1776              	.LFB7:
 875:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 1777              		.loc 1 875 0
 1778              		.cfi_startproc
 1779 0000 08B5     		push	{r3, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 3, -8
 1782              		.cfi_offset 14, -4
 876:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 1783              		.loc 1 876 0
 1784 0002 0C4B     		ldr	r3, .L135
 1785 0004 1B68     		ldr	r3, [r3]
 1786 0006 5B03     		lsl	r3, r3, #13
 1787 0008 12D5     		bpl	.L133
 880:Generated_Source\PSoC4/ADC.c ****         
 1788              		.loc 1 880 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 72


 1789 000a 0A4A     		ldr	r2, .L135
 1790 000c 1168     		ldr	r1, [r2]
 1791 000e 0A4B     		ldr	r3, .L135+4
 1792 0010 0B40     		and	r3, r1
 1793 0012 1360     		str	r3, [r2]
 882:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1794              		.loc 1 882 0
 1795 0014 094B     		ldr	r3, .L135+8
 1796 0016 1A68     		ldr	r2, [r3]
 1797 0018 D300     		lsl	r3, r2, #3
 1798 001a 9B1A     		sub	r3, r3, r2
 1799 001c DB00     		lsl	r3, r3, #3
 1800 001e 084A     		ldr	r2, .L135+12
 1801 0020 D318     		add	r3, r2, r3
 1802 0022 1B6B     		ldr	r3, [r3, #48]
 1803 0024 9B07     		lsl	r3, r3, #30
 1804 0026 03D5     		bpl	.L133
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 1805              		.loc 1 887 0
 1806 0028 FFF7FEFF 		bl	ADC_Stop
 1807              	.LVL158:
 888:Generated_Source\PSoC4/ADC.c ****         }
 1808              		.loc 1 888 0
 1809 002c FFF7FEFF 		bl	ADC_Start
 1810              	.LVL159:
 1811              	.L133:
 893:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 1812              		.loc 1 893 0
 1813              		@ sp needed
 1814 0030 08BD     		pop	{r3, pc}
 1815              	.L136:
 1816 0032 C046     		.align	2
 1817              	.L135:
 1818 0034 04003A40 		.word	1077542916
 1819 0038 FFFFFEFF 		.word	-65537
 1820 003c 00000000 		.word	.LANCHOR0
 1821 0040 00000000 		.word	ADC_allConfigs
 1822              		.cfi_endproc
 1823              	.LFE7:
 1824              		.size	ADC_StopConvert, .-ADC_StopConvert
 1825              		.comm	ADC_countsPer10Volt,8,4
 1826              		.comm	ADC_offset,4,4
 1827              		.global	ADC_selected
 1828              		.global	ADC_initVar
 1829              		.section	.rodata
 1830              		.align	2
 1831              		.set	.LANCHOR1,. + 0
 1832              		.type	ADC_channelsConfig, %object
 1833              		.size	ADC_channelsConfig, 8
 1834              	ADC_channelsConfig:
 1835 0000 00010000 		.word	256
 1836 0004 00110000 		.word	4352
 1837              		.bss
 1838              		.align	2
 1839              		.set	.LANCHOR0,. + 0
 1840              		.type	ADC_currentConfig, %object
 1841              		.size	ADC_currentConfig, 4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 73


 1842              	ADC_currentConfig:
 1843 0000 00000000 		.space	4
 1844              		.type	ADC_initVar, %object
 1845              		.size	ADC_initVar, 1
 1846              	ADC_initVar:
 1847 0004 00       		.space	1
 1848              		.type	ADC_selected, %object
 1849              		.size	ADC_selected, 1
 1850              	ADC_selected:
 1851 0005 00       		.space	1
 1852 0006 0000     		.text
 1853              	.Letext0:
 1854              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1855              		.file 3 "Generated_Source\\PSoC4\\ADC.h"
 1856              		.file 4 "Generated_Source\\PSoC4\\ADC_intSarClock.h"
 1857              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1858              		.file 6 "Generated_Source\\PSoC4\\ADC_IRQ.h"
 1859              		.section	.debug_info,"",%progbits
 1860              	.Ldebug_info0:
 1861 0000 270A0000 		.4byte	0xa27
 1862 0004 0400     		.2byte	0x4
 1863 0006 00000000 		.4byte	.Ldebug_abbrev0
 1864 000a 04       		.byte	0x4
 1865 000b 01       		.uleb128 0x1
 1866 000c A5050000 		.4byte	.LASF106
 1867 0010 01       		.byte	0x1
 1868 0011 58030000 		.4byte	.LASF107
 1869 0015 FB040000 		.4byte	.LASF108
 1870 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1871 001d 00000000 		.4byte	0
 1872 0021 00000000 		.4byte	.Ldebug_line0
 1873 0025 02       		.uleb128 0x2
 1874 0026 01       		.byte	0x1
 1875 0027 06       		.byte	0x6
 1876 0028 A7000000 		.4byte	.LASF0
 1877 002c 02       		.uleb128 0x2
 1878 002d 01       		.byte	0x1
 1879 002e 08       		.byte	0x8
 1880 002f C3030000 		.4byte	.LASF1
 1881 0033 02       		.uleb128 0x2
 1882 0034 02       		.byte	0x2
 1883 0035 05       		.byte	0x5
 1884 0036 DC030000 		.4byte	.LASF2
 1885 003a 02       		.uleb128 0x2
 1886 003b 02       		.byte	0x2
 1887 003c 07       		.byte	0x7
 1888 003d 15020000 		.4byte	.LASF3
 1889 0041 02       		.uleb128 0x2
 1890 0042 04       		.byte	0x4
 1891 0043 05       		.byte	0x5
 1892 0044 E4000000 		.4byte	.LASF4
 1893 0048 02       		.uleb128 0x2
 1894 0049 04       		.byte	0x4
 1895 004a 07       		.byte	0x7
 1896 004b D9010000 		.4byte	.LASF5
 1897 004f 02       		.uleb128 0x2
 1898 0050 08       		.byte	0x8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 74


 1899 0051 05       		.byte	0x5
 1900 0052 99000000 		.4byte	.LASF6
 1901 0056 02       		.uleb128 0x2
 1902 0057 08       		.byte	0x8
 1903 0058 07       		.byte	0x7
 1904 0059 5D000000 		.4byte	.LASF7
 1905 005d 03       		.uleb128 0x3
 1906 005e 04       		.byte	0x4
 1907 005f 05       		.byte	0x5
 1908 0060 696E7400 		.ascii	"int\000"
 1909 0064 02       		.uleb128 0x2
 1910 0065 04       		.byte	0x4
 1911 0066 07       		.byte	0x7
 1912 0067 B5010000 		.4byte	.LASF8
 1913 006b 04       		.uleb128 0x4
 1914 006c 2A010000 		.4byte	.LASF9
 1915 0070 02       		.byte	0x2
 1916 0071 B901     		.2byte	0x1b9
 1917 0073 2C000000 		.4byte	0x2c
 1918 0077 04       		.uleb128 0x4
 1919 0078 00000000 		.4byte	.LASF10
 1920 007c 02       		.byte	0x2
 1921 007d BA01     		.2byte	0x1ba
 1922 007f 3A000000 		.4byte	0x3a
 1923 0083 04       		.uleb128 0x4
 1924 0084 70010000 		.4byte	.LASF11
 1925 0088 02       		.byte	0x2
 1926 0089 BB01     		.2byte	0x1bb
 1927 008b 48000000 		.4byte	0x48
 1928 008f 04       		.uleb128 0x4
 1929 0090 57050000 		.4byte	.LASF12
 1930 0094 02       		.byte	0x2
 1931 0095 BD01     		.2byte	0x1bd
 1932 0097 33000000 		.4byte	0x33
 1933 009b 04       		.uleb128 0x4
 1934 009c BE000000 		.4byte	.LASF13
 1935 00a0 02       		.byte	0x2
 1936 00a1 BE01     		.2byte	0x1be
 1937 00a3 41000000 		.4byte	0x41
 1938 00a7 04       		.uleb128 0x4
 1939 00a8 A7020000 		.4byte	.LASF14
 1940 00ac 02       		.byte	0x2
 1941 00ad BF01     		.2byte	0x1bf
 1942 00af B3000000 		.4byte	0xb3
 1943 00b3 02       		.uleb128 0x2
 1944 00b4 04       		.byte	0x4
 1945 00b5 04       		.byte	0x4
 1946 00b6 81030000 		.4byte	.LASF15
 1947 00ba 02       		.uleb128 0x2
 1948 00bb 08       		.byte	0x8
 1949 00bc 04       		.byte	0x4
 1950 00bd 3A010000 		.4byte	.LASF16
 1951 00c1 04       		.uleb128 0x4
 1952 00c2 31030000 		.4byte	.LASF17
 1953 00c6 02       		.byte	0x2
 1954 00c7 C401     		.2byte	0x1c4
 1955 00c9 4F000000 		.4byte	0x4f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 75


 1956 00cd 02       		.uleb128 0x2
 1957 00ce 01       		.byte	0x1
 1958 00cf 08       		.byte	0x8
 1959 00d0 4C040000 		.4byte	.LASF18
 1960 00d4 04       		.uleb128 0x4
 1961 00d5 7B020000 		.4byte	.LASF19
 1962 00d9 02       		.byte	0x2
 1963 00da 6502     		.2byte	0x265
 1964 00dc E0000000 		.4byte	0xe0
 1965 00e0 05       		.uleb128 0x5
 1966 00e1 83000000 		.4byte	0x83
 1967 00e5 04       		.uleb128 0x4
 1968 00e6 56040000 		.4byte	.LASF20
 1969 00ea 02       		.byte	0x2
 1970 00eb 7502     		.2byte	0x275
 1971 00ed F1000000 		.4byte	0xf1
 1972 00f1 06       		.uleb128 0x6
 1973 00f2 04       		.byte	0x4
 1974 00f3 F7000000 		.4byte	0xf7
 1975 00f7 07       		.uleb128 0x7
 1976 00f8 02       		.uleb128 0x2
 1977 00f9 04       		.byte	0x4
 1978 00fa 07       		.byte	0x7
 1979 00fb AF020000 		.4byte	.LASF21
 1980 00ff 08       		.uleb128 0x8
 1981 0100 38       		.byte	0x38
 1982 0101 03       		.byte	0x3
 1983 0102 5E       		.byte	0x5e
 1984 0103 B0010000 		.4byte	0x1b0
 1985 0107 09       		.uleb128 0x9
 1986 0108 89050000 		.4byte	.LASF22
 1987 010c 03       		.byte	0x3
 1988 010d 60       		.byte	0x60
 1989 010e 83000000 		.4byte	0x83
 1990 0112 00       		.byte	0
 1991 0113 09       		.uleb128 0x9
 1992 0114 64020000 		.4byte	.LASF23
 1993 0118 03       		.byte	0x3
 1994 0119 61       		.byte	0x61
 1995 011a 83000000 		.4byte	0x83
 1996 011e 04       		.byte	0x4
 1997 011f 09       		.uleb128 0x9
 1998 0120 C2040000 		.4byte	.LASF24
 1999 0124 03       		.byte	0x3
 2000 0125 62       		.byte	0x62
 2001 0126 83000000 		.4byte	0x83
 2002 012a 08       		.byte	0x8
 2003 012b 09       		.uleb128 0x9
 2004 012c 4C050000 		.4byte	.LASF25
 2005 0130 03       		.byte	0x3
 2006 0131 65       		.byte	0x65
 2007 0132 83000000 		.4byte	0x83
 2008 0136 0C       		.byte	0xc
 2009 0137 09       		.uleb128 0x9
 2010 0138 63010000 		.4byte	.LASF26
 2011 013c 03       		.byte	0x3
 2012 013d 66       		.byte	0x66
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 76


 2013 013e 83000000 		.4byte	0x83
 2014 0142 10       		.byte	0x10
 2015 0143 09       		.uleb128 0x9
 2016 0144 EE020000 		.4byte	.LASF27
 2017 0148 03       		.byte	0x3
 2018 0149 67       		.byte	0x67
 2019 014a 83000000 		.4byte	0x83
 2020 014e 14       		.byte	0x14
 2021 014f 09       		.uleb128 0x9
 2022 0150 28020000 		.4byte	.LASF28
 2023 0154 03       		.byte	0x3
 2024 0155 68       		.byte	0x68
 2025 0156 83000000 		.4byte	0x83
 2026 015a 18       		.byte	0x18
 2027 015b 09       		.uleb128 0x9
 2028 015c E6040000 		.4byte	.LASF29
 2029 0160 03       		.byte	0x3
 2030 0161 69       		.byte	0x69
 2031 0162 83000000 		.4byte	0x83
 2032 0166 1C       		.byte	0x1c
 2033 0167 09       		.uleb128 0x9
 2034 0168 A5030000 		.4byte	.LASF30
 2035 016c 03       		.byte	0x3
 2036 016d 6A       		.byte	0x6a
 2037 016e 83000000 		.4byte	0x83
 2038 0172 20       		.byte	0x20
 2039 0173 09       		.uleb128 0x9
 2040 0174 C2010000 		.4byte	.LASF31
 2041 0178 03       		.byte	0x3
 2042 0179 6B       		.byte	0x6b
 2043 017a 83000000 		.4byte	0x83
 2044 017e 24       		.byte	0x24
 2045 017f 09       		.uleb128 0x9
 2046 0180 FB020000 		.4byte	.LASF32
 2047 0184 03       		.byte	0x3
 2048 0185 6C       		.byte	0x6c
 2049 0186 83000000 		.4byte	0x83
 2050 018a 28       		.byte	0x28
 2051 018b 09       		.uleb128 0x9
 2052 018c 3B040000 		.4byte	.LASF33
 2053 0190 03       		.byte	0x3
 2054 0191 6D       		.byte	0x6d
 2055 0192 9B000000 		.4byte	0x9b
 2056 0196 2C       		.byte	0x2c
 2057 0197 09       		.uleb128 0x9
 2058 0198 C7040000 		.4byte	.LASF34
 2059 019c 03       		.byte	0x3
 2060 019d 6F       		.byte	0x6f
 2061 019e 83000000 		.4byte	0x83
 2062 01a2 30       		.byte	0x30
 2063 01a3 09       		.uleb128 0x9
 2064 01a4 B3000000 		.4byte	.LASF35
 2065 01a8 03       		.byte	0x3
 2066 01a9 76       		.byte	0x76
 2067 01aa 77000000 		.4byte	0x77
 2068 01ae 34       		.byte	0x34
 2069 01af 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 77


 2070 01b0 0A       		.uleb128 0xa
 2071 01b1 51010000 		.4byte	.LASF36
 2072 01b5 03       		.byte	0x3
 2073 01b6 7C       		.byte	0x7c
 2074 01b7 FF000000 		.4byte	0xff
 2075 01bb 0B       		.uleb128 0xb
 2076 01bc DA020000 		.4byte	.LASF109
 2077 01c0 01       		.byte	0x1
 2078 01c1 3304     		.2byte	0x433
 2079 01c3 9B000000 		.4byte	0x9b
 2080 01c7 00000000 		.4byte	.LFB12
 2081 01cb 58000000 		.4byte	.LFE12-.LFB12
 2082 01cf 01       		.uleb128 0x1
 2083 01d0 9C       		.byte	0x9c
 2084 01d1 06020000 		.4byte	0x206
 2085 01d5 0C       		.uleb128 0xc
 2086 01d6 47040000 		.4byte	.LASF39
 2087 01da 01       		.byte	0x1
 2088 01db 3304     		.2byte	0x433
 2089 01dd 83000000 		.4byte	0x83
 2090 01e1 00000000 		.4byte	.LLST0
 2091 01e5 0D       		.uleb128 0xd
 2092 01e6 81020000 		.4byte	.LASF37
 2093 01ea 01       		.byte	0x1
 2094 01eb 3504     		.2byte	0x435
 2095 01ed 9B000000 		.4byte	0x9b
 2096 01f1 21000000 		.4byte	.LLST1
 2097 01f5 0D       		.uleb128 0xd
 2098 01f6 70020000 		.4byte	.LASF38
 2099 01fa 01       		.byte	0x1
 2100 01fb 3604     		.2byte	0x436
 2101 01fd 83000000 		.4byte	0x83
 2102 0201 40000000 		.4byte	.LLST2
 2103 0205 00       		.byte	0
 2104 0206 0E       		.uleb128 0xe
 2105 0207 13040000 		.4byte	.LASF43
 2106 020b 01       		.byte	0x1
 2107 020c 7B02     		.2byte	0x27b
 2108 020e 00000000 		.4byte	.LFB3
 2109 0212 10000000 		.4byte	.LFE3-.LFB3
 2110 0216 01       		.uleb128 0x1
 2111 0217 9C       		.byte	0x9c
 2112 0218 0F       		.uleb128 0xf
 2113 0219 1A030000 		.4byte	.LASF45
 2114 021d 01       		.byte	0x1
 2115 021e 9B02     		.2byte	0x29b
 2116 0220 00000000 		.4byte	.LFB4
 2117 0224 FC000000 		.4byte	.LFE4-.LFB4
 2118 0228 01       		.uleb128 0x1
 2119 0229 9C       		.byte	0x9c
 2120 022a 6E020000 		.4byte	0x26e
 2121 022e 0C       		.uleb128 0xc
 2122 022f 72040000 		.4byte	.LASF40
 2123 0233 01       		.byte	0x1
 2124 0234 9B02     		.2byte	0x29b
 2125 0236 6E020000 		.4byte	0x26e
 2126 023a 5E000000 		.4byte	.LLST3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 78


 2127 023e 0D       		.uleb128 0xd
 2128 023f 35040000 		.4byte	.LASF41
 2129 0243 01       		.byte	0x1
 2130 0244 9D02     		.2byte	0x29d
 2131 0246 83000000 		.4byte	0x83
 2132 024a 8A000000 		.4byte	.LLST4
 2133 024e 0D       		.uleb128 0xd
 2134 024f EB010000 		.4byte	.LASF42
 2135 0253 01       		.byte	0x1
 2136 0254 9E02     		.2byte	0x29e
 2137 0256 83000000 		.4byte	0x83
 2138 025a A9000000 		.4byte	.LLST5
 2139 025e 10       		.uleb128 0x10
 2140 025f 0C000000 		.4byte	.LVL9
 2141 0263 B5090000 		.4byte	0x9b5
 2142 0267 11       		.uleb128 0x11
 2143 0268 01       		.uleb128 0x1
 2144 0269 51       		.byte	0x51
 2145 026a 01       		.uleb128 0x1
 2146 026b 30       		.byte	0x30
 2147 026c 00       		.byte	0
 2148 026d 00       		.byte	0
 2149 026e 06       		.uleb128 0x6
 2150 026f 04       		.byte	0x4
 2151 0270 74020000 		.4byte	0x274
 2152 0274 12       		.uleb128 0x12
 2153 0275 B0010000 		.4byte	0x1b0
 2154 0279 0E       		.uleb128 0xe
 2155 027a 88000000 		.4byte	.LASF44
 2156 027e 01       		.byte	0x1
 2157 027f 4103     		.2byte	0x341
 2158 0281 00000000 		.4byte	.LFB6
 2159 0285 28000000 		.4byte	.LFE6-.LFB6
 2160 0289 01       		.uleb128 0x1
 2161 028a 9C       		.byte	0x9c
 2162 028b 0F       		.uleb128 0xf
 2163 028c 94020000 		.4byte	.LASF46
 2164 0290 01       		.byte	0x1
 2165 0291 9403     		.2byte	0x394
 2166 0293 00000000 		.4byte	.LFB8
 2167 0297 28000000 		.4byte	.LFE8-.LFB8
 2168 029b 01       		.uleb128 0x1
 2169 029c 9C       		.byte	0x9c
 2170 029d B0020000 		.4byte	0x2b0
 2171 02a1 13       		.uleb128 0x13
 2172 02a2 51040000 		.4byte	.LASF47
 2173 02a6 01       		.byte	0x1
 2174 02a7 9403     		.2byte	0x394
 2175 02a9 83000000 		.4byte	0x83
 2176 02ad 01       		.uleb128 0x1
 2177 02ae 50       		.byte	0x50
 2178 02af 00       		.byte	0
 2179 02b0 0F       		.uleb128 0xf
 2180 02b1 4E000000 		.4byte	.LASF48
 2181 02b5 01       		.byte	0x1
 2182 02b6 D403     		.2byte	0x3d4
 2183 02b8 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 79


 2184 02bc 10000000 		.4byte	.LFE9-.LFB9
 2185 02c0 01       		.uleb128 0x1
 2186 02c1 9C       		.byte	0x9c
 2187 02c2 D7020000 		.4byte	0x2d7
 2188 02c6 0C       		.uleb128 0xc
 2189 02c7 86010000 		.4byte	.LASF49
 2190 02cb 01       		.byte	0x1
 2191 02cc D403     		.2byte	0x3d4
 2192 02ce 83000000 		.4byte	0x83
 2193 02d2 E3000000 		.4byte	.LLST6
 2194 02d6 00       		.byte	0
 2195 02d7 0F       		.uleb128 0xf
 2196 02d8 48030000 		.4byte	.LASF50
 2197 02dc 01       		.byte	0x1
 2198 02dd EC03     		.2byte	0x3ec
 2199 02df 00000000 		.4byte	.LFB10
 2200 02e3 2C000000 		.4byte	.LFE10-.LFB10
 2201 02e7 01       		.uleb128 0x1
 2202 02e8 9C       		.byte	0x9c
 2203 02e9 0C030000 		.4byte	0x30c
 2204 02ed 0C       		.uleb128 0xc
 2205 02ee F5010000 		.4byte	.LASF51
 2206 02f2 01       		.byte	0x1
 2207 02f3 EC03     		.2byte	0x3ec
 2208 02f5 83000000 		.4byte	0x83
 2209 02f9 04010000 		.4byte	.LLST7
 2210 02fd 14       		.uleb128 0x14
 2211 02fe 07000000 		.4byte	.LASF52
 2212 0302 01       		.byte	0x1
 2213 0303 EE03     		.2byte	0x3ee
 2214 0305 83000000 		.4byte	0x83
 2215 0309 01       		.uleb128 0x1
 2216 030a 52       		.byte	0x52
 2217 030b 00       		.byte	0
 2218 030c 15       		.uleb128 0x15
 2219 030d 06030000 		.4byte	.LASF55
 2220 0311 01       		.byte	0x1
 2221 0312 0D04     		.2byte	0x40d
 2222 0314 83000000 		.4byte	0x83
 2223 0318 00000000 		.4byte	.LFB11
 2224 031c 38000000 		.4byte	.LFE11-.LFB11
 2225 0320 01       		.uleb128 0x1
 2226 0321 9C       		.byte	0x9c
 2227 0322 57030000 		.4byte	0x357
 2228 0326 0C       		.uleb128 0xc
 2229 0327 9C010000 		.4byte	.LASF53
 2230 032b 01       		.byte	0x1
 2231 032c 0D04     		.2byte	0x40d
 2232 032e 83000000 		.4byte	0x83
 2233 0332 22010000 		.4byte	.LLST8
 2234 0336 0D       		.uleb128 0xd
 2235 0337 95050000 		.4byte	.LASF54
 2236 033b 01       		.byte	0x1
 2237 033c 0F04     		.2byte	0x40f
 2238 033e 83000000 		.4byte	0x83
 2239 0342 56010000 		.4byte	.LLST9
 2240 0346 16       		.uleb128 0x16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 80


 2241 0347 77647400 		.ascii	"wdt\000"
 2242 034b 01       		.byte	0x1
 2243 034c 1004     		.2byte	0x410
 2244 034e 83000000 		.4byte	0x83
 2245 0352 8C010000 		.4byte	.LLST10
 2246 0356 00       		.byte	0
 2247 0357 15       		.uleb128 0x15
 2248 0358 37060000 		.4byte	.LASF56
 2249 035c 01       		.byte	0x1
 2250 035d 5F04     		.2byte	0x45f
 2251 035f 8F000000 		.4byte	0x8f
 2252 0363 00000000 		.4byte	.LFB13
 2253 0367 54000000 		.4byte	.LFE13-.LFB13
 2254 036b 01       		.uleb128 0x1
 2255 036c 9C       		.byte	0x9c
 2256 036d A1030000 		.4byte	0x3a1
 2257 0371 0C       		.uleb128 0xc
 2258 0372 47040000 		.4byte	.LASF39
 2259 0376 01       		.byte	0x1
 2260 0377 5F04     		.2byte	0x45f
 2261 0379 83000000 		.4byte	0x83
 2262 037d BF010000 		.4byte	.LLST11
 2263 0381 0D       		.uleb128 0xd
 2264 0382 8A020000 		.4byte	.LASF57
 2265 0386 01       		.byte	0x1
 2266 0387 6104     		.2byte	0x461
 2267 0389 83000000 		.4byte	0x83
 2268 038d 04020000 		.4byte	.LLST12
 2269 0391 10       		.uleb128 0x10
 2270 0392 1E000000 		.4byte	.LVL40
 2271 0396 CB090000 		.4byte	0x9cb
 2272 039a 11       		.uleb128 0x11
 2273 039b 01       		.uleb128 0x1
 2274 039c 50       		.byte	0x50
 2275 039d 01       		.uleb128 0x1
 2276 039e 30       		.byte	0x30
 2277 039f 00       		.byte	0
 2278 03a0 00       		.byte	0
 2279 03a1 15       		.uleb128 0x15
 2280 03a2 41010000 		.4byte	.LASF58
 2281 03a6 01       		.byte	0x1
 2282 03a7 8504     		.2byte	0x485
 2283 03a9 9B000000 		.4byte	0x9b
 2284 03ad 00000000 		.4byte	.LFB14
 2285 03b1 64000000 		.4byte	.LFE14-.LFB14
 2286 03b5 01       		.uleb128 0x1
 2287 03b6 9C       		.byte	0x9c
 2288 03b7 1F040000 		.4byte	0x41f
 2289 03bb 0C       		.uleb128 0xc
 2290 03bc 47040000 		.4byte	.LASF39
 2291 03c0 01       		.byte	0x1
 2292 03c1 8504     		.2byte	0x485
 2293 03c3 83000000 		.4byte	0x83
 2294 03c7 22020000 		.4byte	.LLST13
 2295 03cb 0D       		.uleb128 0xd
 2296 03cc 8A020000 		.4byte	.LASF57
 2297 03d0 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 81


 2298 03d1 8704     		.2byte	0x487
 2299 03d3 83000000 		.4byte	0x83
 2300 03d7 4E020000 		.4byte	.LLST14
 2301 03db 0D       		.uleb128 0xd
 2302 03dc 29040000 		.4byte	.LASF59
 2303 03e0 01       		.byte	0x1
 2304 03e1 8804     		.2byte	0x488
 2305 03e3 8F000000 		.4byte	0x8f
 2306 03e7 6C020000 		.4byte	.LLST15
 2307 03eb 0D       		.uleb128 0xd
 2308 03ec 43020000 		.4byte	.LASF60
 2309 03f0 01       		.byte	0x1
 2310 03f1 8904     		.2byte	0x489
 2311 03f3 9B000000 		.4byte	0x9b
 2312 03f7 7F020000 		.4byte	.LLST16
 2313 03fb 17       		.uleb128 0x17
 2314 03fc 1E000000 		.4byte	.LVL48
 2315 0400 CB090000 		.4byte	0x9cb
 2316 0404 0E040000 		.4byte	0x40e
 2317 0408 11       		.uleb128 0x11
 2318 0409 01       		.uleb128 0x1
 2319 040a 50       		.byte	0x50
 2320 040b 01       		.uleb128 0x1
 2321 040c 30       		.byte	0x30
 2322 040d 00       		.byte	0
 2323 040e 10       		.uleb128 0x10
 2324 040f 4A000000 		.4byte	.LVL52
 2325 0413 BB010000 		.4byte	0x1bb
 2326 0417 11       		.uleb128 0x11
 2327 0418 01       		.uleb128 0x1
 2328 0419 50       		.byte	0x50
 2329 041a 02       		.uleb128 0x2
 2330 041b 75       		.byte	0x75
 2331 041c 00       		.sleb128 0
 2332 041d 00       		.byte	0
 2333 041e 00       		.byte	0
 2334 041f 0F       		.uleb128 0xf
 2335 0420 AC030000 		.4byte	.LASF61
 2336 0424 01       		.byte	0x1
 2337 0425 B404     		.2byte	0x4b4
 2338 0427 00000000 		.4byte	.LFB15
 2339 042b 1C000000 		.4byte	.LFE15-.LFB15
 2340 042f 01       		.uleb128 0x1
 2341 0430 9C       		.byte	0x9c
 2342 0431 46040000 		.4byte	0x446
 2343 0435 0C       		.uleb128 0xc
 2344 0436 B8020000 		.4byte	.LASF62
 2345 043a 01       		.byte	0x1
 2346 043b B404     		.2byte	0x4b4
 2347 043d 83000000 		.4byte	0x83
 2348 0441 9D020000 		.4byte	.LLST17
 2349 0445 00       		.byte	0
 2350 0446 0F       		.uleb128 0xf
 2351 0447 C1020000 		.4byte	.LASF63
 2352 044b 01       		.byte	0x1
 2353 044c CB04     		.2byte	0x4cb
 2354 044e 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 82


 2355 0452 18000000 		.4byte	.LFE16-.LFB16
 2356 0456 01       		.uleb128 0x1
 2357 0457 9C       		.byte	0x9c
 2358 0458 6D040000 		.4byte	0x46d
 2359 045c 0C       		.uleb128 0xc
 2360 045d 87030000 		.4byte	.LASF64
 2361 0461 01       		.byte	0x1
 2362 0462 CB04     		.2byte	0x4cb
 2363 0464 83000000 		.4byte	0x83
 2364 0468 BE020000 		.4byte	.LLST18
 2365 046c 00       		.byte	0
 2366 046d 0F       		.uleb128 0xf
 2367 046e A4010000 		.4byte	.LASF65
 2368 0472 01       		.byte	0x1
 2369 0473 E604     		.2byte	0x4e6
 2370 0475 00000000 		.4byte	.LFB17
 2371 0479 2C000000 		.4byte	.LFE17-.LFB17
 2372 047d 01       		.uleb128 0x1
 2373 047e 9C       		.byte	0x9c
 2374 047f A2040000 		.4byte	0x4a2
 2375 0483 0C       		.uleb128 0xc
 2376 0484 4F020000 		.4byte	.LASF66
 2377 0488 01       		.byte	0x1
 2378 0489 E604     		.2byte	0x4e6
 2379 048b 83000000 		.4byte	0x83
 2380 048f DF020000 		.4byte	.LLST19
 2381 0493 14       		.uleb128 0x14
 2382 0494 07000000 		.4byte	.LASF52
 2383 0498 01       		.byte	0x1
 2384 0499 E804     		.2byte	0x4e8
 2385 049b 83000000 		.4byte	0x83
 2386 049f 01       		.uleb128 0x1
 2387 04a0 52       		.byte	0x52
 2388 04a1 00       		.byte	0
 2389 04a2 0F       		.uleb128 0xf
 2390 04a3 D5000000 		.4byte	.LASF67
 2391 04a7 01       		.byte	0x1
 2392 04a8 0105     		.2byte	0x501
 2393 04aa 00000000 		.4byte	.LFB18
 2394 04ae 2C000000 		.4byte	.LFE18-.LFB18
 2395 04b2 01       		.uleb128 0x1
 2396 04b3 9C       		.byte	0x9c
 2397 04b4 D7040000 		.4byte	0x4d7
 2398 04b8 0C       		.uleb128 0xc
 2399 04b9 29030000 		.4byte	.LASF68
 2400 04bd 01       		.byte	0x1
 2401 04be 0105     		.2byte	0x501
 2402 04c0 83000000 		.4byte	0x83
 2403 04c4 FD020000 		.4byte	.LLST20
 2404 04c8 14       		.uleb128 0x14
 2405 04c9 07000000 		.4byte	.LASF52
 2406 04cd 01       		.byte	0x1
 2407 04ce 0305     		.2byte	0x503
 2408 04d0 83000000 		.4byte	0x83
 2409 04d4 01       		.uleb128 0x1
 2410 04d5 52       		.byte	0x52
 2411 04d6 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 83


 2412 04d7 0F       		.uleb128 0xf
 2413 04d8 6B050000 		.4byte	.LASF69
 2414 04dc 01       		.byte	0x1
 2415 04dd 2505     		.2byte	0x525
 2416 04df 00000000 		.4byte	.LFB19
 2417 04e3 44000000 		.4byte	.LFE19-.LFB19
 2418 04e7 01       		.uleb128 0x1
 2419 04e8 9C       		.byte	0x9c
 2420 04e9 1D050000 		.4byte	0x51d
 2421 04ed 0C       		.uleb128 0xc
 2422 04ee 47040000 		.4byte	.LASF39
 2423 04f2 01       		.byte	0x1
 2424 04f3 2505     		.2byte	0x525
 2425 04f5 83000000 		.4byte	0x83
 2426 04f9 1B030000 		.4byte	.LLST21
 2427 04fd 0C       		.uleb128 0xc
 2428 04fe BB040000 		.4byte	.LASF70
 2429 0502 01       		.byte	0x1
 2430 0503 2505     		.2byte	0x525
 2431 0505 8F000000 		.4byte	0x8f
 2432 0509 47030000 		.4byte	.LLST22
 2433 050d 10       		.uleb128 0x10
 2434 050e 20000000 		.4byte	.LVL71
 2435 0512 CB090000 		.4byte	0x9cb
 2436 0516 11       		.uleb128 0x11
 2437 0517 01       		.uleb128 0x1
 2438 0518 50       		.byte	0x50
 2439 0519 01       		.uleb128 0x1
 2440 051a 30       		.byte	0x30
 2441 051b 00       		.byte	0
 2442 051c 00       		.byte	0
 2443 051d 0F       		.uleb128 0xf
 2444 051e 75030000 		.4byte	.LASF71
 2445 0522 01       		.byte	0x1
 2446 0523 4805     		.2byte	0x548
 2447 0525 00000000 		.4byte	.LFB20
 2448 0529 44000000 		.4byte	.LFE20-.LFB20
 2449 052d 01       		.uleb128 0x1
 2450 052e 9C       		.byte	0x9c
 2451 052f 63050000 		.4byte	0x563
 2452 0533 0C       		.uleb128 0xc
 2453 0534 47040000 		.4byte	.LASF39
 2454 0538 01       		.byte	0x1
 2455 0539 4805     		.2byte	0x548
 2456 053b 83000000 		.4byte	0x83
 2457 053f 68030000 		.4byte	.LLST23
 2458 0543 0C       		.uleb128 0xc
 2459 0544 11000000 		.4byte	.LASF72
 2460 0548 01       		.byte	0x1
 2461 0549 4805     		.2byte	0x548
 2462 054b 9B000000 		.4byte	0x9b
 2463 054f 94030000 		.4byte	.LLST24
 2464 0553 10       		.uleb128 0x10
 2465 0554 20000000 		.4byte	.LVL75
 2466 0558 CB090000 		.4byte	0x9cb
 2467 055c 11       		.uleb128 0x11
 2468 055d 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 84


 2469 055e 50       		.byte	0x50
 2470 055f 01       		.uleb128 0x1
 2471 0560 30       		.byte	0x30
 2472 0561 00       		.byte	0
 2473 0562 00       		.byte	0
 2474 0563 18       		.uleb128 0x18
 2475 0564 15010000 		.4byte	.LASF73
 2476 0568 01       		.byte	0x1
 2477 0569 6105     		.2byte	0x561
 2478 056b 8F000000 		.4byte	0x8f
 2479 056f 00000000 		.4byte	.LFB21
 2480 0573 94000000 		.4byte	.LFE21-.LFB21
 2481 0577 01       		.uleb128 0x1
 2482 0578 9C       		.byte	0x9c
 2483 0579 F1050000 		.4byte	0x5f1
 2484 057d 0C       		.uleb128 0xc
 2485 057e 47040000 		.4byte	.LASF39
 2486 0582 01       		.byte	0x1
 2487 0583 6105     		.2byte	0x561
 2488 0585 83000000 		.4byte	0x83
 2489 0589 DA030000 		.4byte	.LLST25
 2490 058d 0C       		.uleb128 0xc
 2491 058e D2040000 		.4byte	.LASF74
 2492 0592 01       		.byte	0x1
 2493 0593 6105     		.2byte	0x561
 2494 0595 8F000000 		.4byte	0x8f
 2495 0599 06040000 		.4byte	.LLST26
 2496 059d 0D       		.uleb128 0xd
 2497 059e 97010000 		.4byte	.LASF75
 2498 05a2 01       		.byte	0x1
 2499 05a3 6305     		.2byte	0x563
 2500 05a5 83000000 		.4byte	0x83
 2501 05a9 56040000 		.4byte	.LLST27
 2502 05ad 0D       		.uleb128 0xd
 2503 05ae 00020000 		.4byte	.LASF76
 2504 05b2 01       		.byte	0x1
 2505 05b3 6405     		.2byte	0x564
 2506 05b5 83000000 		.4byte	0x83
 2507 05b9 69040000 		.4byte	.LLST28
 2508 05bd 0D       		.uleb128 0xd
 2509 05be 59020000 		.4byte	.LASF77
 2510 05c2 01       		.byte	0x1
 2511 05c3 6505     		.2byte	0x565
 2512 05c5 83000000 		.4byte	0x83
 2513 05c9 94040000 		.4byte	.LLST29
 2514 05cd 17       		.uleb128 0x17
 2515 05ce 24000000 		.4byte	.LVL82
 2516 05d2 CB090000 		.4byte	0x9cb
 2517 05d6 E0050000 		.4byte	0x5e0
 2518 05da 11       		.uleb128 0x11
 2519 05db 01       		.uleb128 0x1
 2520 05dc 50       		.byte	0x50
 2521 05dd 01       		.uleb128 0x1
 2522 05de 30       		.byte	0x30
 2523 05df 00       		.byte	0
 2524 05e0 10       		.uleb128 0x10
 2525 05e1 5C000000 		.4byte	.LVL87
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 85


 2526 05e5 BB010000 		.4byte	0x1bb
 2527 05e9 11       		.uleb128 0x11
 2528 05ea 01       		.uleb128 0x1
 2529 05eb 50       		.byte	0x50
 2530 05ec 02       		.uleb128 0x2
 2531 05ed 76       		.byte	0x76
 2532 05ee 00       		.sleb128 0
 2533 05ef 00       		.byte	0
 2534 05f0 00       		.byte	0
 2535 05f1 18       		.uleb128 0x18
 2536 05f2 20000000 		.4byte	.LASF78
 2537 05f6 01       		.byte	0x1
 2538 05f7 B905     		.2byte	0x5b9
 2539 05f9 A7000000 		.4byte	0xa7
 2540 05fd 00000000 		.4byte	.LFB22
 2541 0601 58000000 		.4byte	.LFE22-.LFB22
 2542 0605 01       		.uleb128 0x1
 2543 0606 9C       		.byte	0x9c
 2544 0607 5D060000 		.4byte	0x65d
 2545 060b 0C       		.uleb128 0xc
 2546 060c 47040000 		.4byte	.LASF39
 2547 0610 01       		.byte	0x1
 2548 0611 B905     		.2byte	0x5b9
 2549 0613 83000000 		.4byte	0x83
 2550 0617 A7040000 		.4byte	.LLST30
 2551 061b 0C       		.uleb128 0xc
 2552 061c D2040000 		.4byte	.LASF74
 2553 0620 01       		.byte	0x1
 2554 0621 B905     		.2byte	0x5b9
 2555 0623 8F000000 		.4byte	0x8f
 2556 0627 E1040000 		.4byte	.LLST31
 2557 062b 0D       		.uleb128 0xd
 2558 062c 1C040000 		.4byte	.LASF79
 2559 0630 01       		.byte	0x1
 2560 0631 BB05     		.2byte	0x5bb
 2561 0633 A7000000 		.4byte	0xa7
 2562 0637 18050000 		.4byte	.LLST32
 2563 063b 0D       		.uleb128 0xd
 2564 063c 59020000 		.4byte	.LASF77
 2565 0640 01       		.byte	0x1
 2566 0641 BC05     		.2byte	0x5bc
 2567 0643 83000000 		.4byte	0x83
 2568 0647 56050000 		.4byte	.LLST33
 2569 064b 10       		.uleb128 0x10
 2570 064c 22000000 		.4byte	.LVL99
 2571 0650 63050000 		.4byte	0x563
 2572 0654 11       		.uleb128 0x11
 2573 0655 01       		.uleb128 0x1
 2574 0656 50       		.byte	0x50
 2575 0657 03       		.uleb128 0x3
 2576 0658 F3       		.byte	0xf3
 2577 0659 01       		.uleb128 0x1
 2578 065a 50       		.byte	0x50
 2579 065b 00       		.byte	0
 2580 065c 00       		.byte	0
 2581 065d 18       		.uleb128 0x18
 2582 065e 91030000 		.4byte	.LASF80
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 86


 2583 0662 01       		.byte	0x1
 2584 0663 EF05     		.2byte	0x5ef
 2585 0665 8F000000 		.4byte	0x8f
 2586 0669 00000000 		.4byte	.LFB23
 2587 066d 6C000000 		.4byte	.LFE23-.LFB23
 2588 0671 01       		.uleb128 0x1
 2589 0672 9C       		.byte	0x9c
 2590 0673 C9060000 		.4byte	0x6c9
 2591 0677 0C       		.uleb128 0xc
 2592 0678 47040000 		.4byte	.LASF39
 2593 067c 01       		.byte	0x1
 2594 067d EF05     		.2byte	0x5ef
 2595 067f 83000000 		.4byte	0x83
 2596 0683 74050000 		.4byte	.LLST34
 2597 0687 0C       		.uleb128 0xc
 2598 0688 D2040000 		.4byte	.LASF74
 2599 068c 01       		.byte	0x1
 2600 068d EF05     		.2byte	0x5ef
 2601 068f 8F000000 		.4byte	0x8f
 2602 0693 AE050000 		.4byte	.LLST35
 2603 0697 0D       		.uleb128 0xd
 2604 0698 5D050000 		.4byte	.LASF81
 2605 069c 01       		.byte	0x1
 2606 069d F105     		.2byte	0x5f1
 2607 069f 8F000000 		.4byte	0x8f
 2608 06a3 F0050000 		.4byte	.LLST36
 2609 06a7 0D       		.uleb128 0xd
 2610 06a8 59020000 		.4byte	.LASF77
 2611 06ac 01       		.byte	0x1
 2612 06ad F205     		.2byte	0x5f2
 2613 06af 83000000 		.4byte	0x83
 2614 06b3 26060000 		.4byte	.LLST37
 2615 06b7 10       		.uleb128 0x10
 2616 06b8 22000000 		.4byte	.LVL110
 2617 06bc 63050000 		.4byte	0x563
 2618 06c0 11       		.uleb128 0x11
 2619 06c1 01       		.uleb128 0x1
 2620 06c2 50       		.byte	0x50
 2621 06c3 03       		.uleb128 0x3
 2622 06c4 F3       		.byte	0xf3
 2623 06c5 01       		.uleb128 0x1
 2624 06c6 50       		.byte	0x50
 2625 06c7 00       		.byte	0
 2626 06c8 00       		.byte	0
 2627 06c9 18       		.uleb128 0x18
 2628 06ca ED000000 		.4byte	.LASF82
 2629 06ce 01       		.byte	0x1
 2630 06cf 2806     		.2byte	0x628
 2631 06d1 9B000000 		.4byte	0x9b
 2632 06d5 00000000 		.4byte	.LFB24
 2633 06d9 50000000 		.4byte	.LFE24-.LFB24
 2634 06dd 01       		.uleb128 0x1
 2635 06de 9C       		.byte	0x9c
 2636 06df 35070000 		.4byte	0x735
 2637 06e3 0C       		.uleb128 0xc
 2638 06e4 47040000 		.4byte	.LASF39
 2639 06e8 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 87


 2640 06e9 2806     		.2byte	0x628
 2641 06eb 83000000 		.4byte	0x83
 2642 06ef 7C060000 		.4byte	.LLST38
 2643 06f3 0C       		.uleb128 0xc
 2644 06f4 D2040000 		.4byte	.LASF74
 2645 06f8 01       		.byte	0x1
 2646 06f9 2806     		.2byte	0x628
 2647 06fb 8F000000 		.4byte	0x8f
 2648 06ff B6060000 		.4byte	.LLST39
 2649 0703 0D       		.uleb128 0xd
 2650 0704 A5040000 		.4byte	.LASF83
 2651 0708 01       		.byte	0x1
 2652 0709 2A06     		.2byte	0x62a
 2653 070b C1000000 		.4byte	0xc1
 2654 070f ED060000 		.4byte	.LLST40
 2655 0713 0D       		.uleb128 0xd
 2656 0714 59020000 		.4byte	.LASF77
 2657 0718 01       		.byte	0x1
 2658 0719 2B06     		.2byte	0x62b
 2659 071b 83000000 		.4byte	0x83
 2660 071f 1D070000 		.4byte	.LLST41
 2661 0723 10       		.uleb128 0x10
 2662 0724 22000000 		.4byte	.LVL123
 2663 0728 63050000 		.4byte	0x563
 2664 072c 11       		.uleb128 0x11
 2665 072d 01       		.uleb128 0x1
 2666 072e 50       		.byte	0x50
 2667 072f 03       		.uleb128 0x3
 2668 0730 F3       		.byte	0xf3
 2669 0731 01       		.uleb128 0x1
 2670 0732 50       		.byte	0x50
 2671 0733 00       		.byte	0
 2672 0734 00       		.byte	0
 2673 0735 19       		.uleb128 0x19
 2674 0736 33000000 		.4byte	.LASF84
 2675 073a 01       		.byte	0x1
 2676 073b D607     		.2byte	0x7d6
 2677 073d 00000000 		.4byte	.LFB25
 2678 0741 18010000 		.4byte	.LFE25-.LFB25
 2679 0745 01       		.uleb128 0x1
 2680 0746 9C       		.byte	0x9c
 2681 0747 B7070000 		.4byte	0x7b7
 2682 074b 0D       		.uleb128 0xd
 2683 074c 35040000 		.4byte	.LASF41
 2684 0750 01       		.byte	0x1
 2685 0751 D807     		.2byte	0x7d8
 2686 0753 83000000 		.4byte	0x83
 2687 0757 73070000 		.4byte	.LLST42
 2688 075b 0D       		.uleb128 0xd
 2689 075c CF010000 		.4byte	.LASF85
 2690 0760 01       		.byte	0x1
 2691 0761 D907     		.2byte	0x7d9
 2692 0763 83000000 		.4byte	0x83
 2693 0767 A9070000 		.4byte	.LLST43
 2694 076b 0D       		.uleb128 0xd
 2695 076c 19000000 		.4byte	.LASF86
 2696 0770 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 88


 2697 0771 DA07     		.2byte	0x7da
 2698 0773 9B000000 		.4byte	0x9b
 2699 0777 EB070000 		.4byte	.LLST44
 2700 077b 17       		.uleb128 0x17
 2701 077c CC000000 		.4byte	.LVL139
 2702 0780 DC090000 		.4byte	0x9dc
 2703 0784 93070000 		.4byte	0x793
 2704 0788 11       		.uleb128 0x11
 2705 0789 01       		.uleb128 0x1
 2706 078a 51       		.byte	0x51
 2707 078b 01       		.uleb128 0x1
 2708 078c 33       		.byte	0x33
 2709 078d 11       		.uleb128 0x11
 2710 078e 01       		.uleb128 0x1
 2711 078f 50       		.byte	0x50
 2712 0790 01       		.uleb128 0x1
 2713 0791 3F       		.byte	0x3f
 2714 0792 00       		.byte	0
 2715 0793 17       		.uleb128 0x17
 2716 0794 D4000000 		.4byte	.LVL140
 2717 0798 F2090000 		.4byte	0x9f2
 2718 079c A6070000 		.4byte	0x7a6
 2719 07a0 11       		.uleb128 0x11
 2720 07a1 01       		.uleb128 0x1
 2721 07a2 50       		.byte	0x50
 2722 07a3 01       		.uleb128 0x1
 2723 07a4 3F       		.byte	0x3f
 2724 07a5 00       		.byte	0
 2725 07a6 10       		.uleb128 0x10
 2726 07a7 EA000000 		.4byte	.LVL143
 2727 07ab 18020000 		.4byte	0x218
 2728 07af 11       		.uleb128 0x11
 2729 07b0 01       		.uleb128 0x1
 2730 07b1 50       		.byte	0x50
 2731 07b2 02       		.uleb128 0x2
 2732 07b3 74       		.byte	0x74
 2733 07b4 00       		.sleb128 0
 2734 07b5 00       		.byte	0
 2735 07b6 00       		.byte	0
 2736 07b7 0F       		.uleb128 0xf
 2737 07b8 F0040000 		.4byte	.LASF87
 2738 07bc 01       		.byte	0x1
 2739 07bd 4708     		.2byte	0x847
 2740 07bf 00000000 		.4byte	.LFB26
 2741 07c3 30000000 		.4byte	.LFE26-.LFB26
 2742 07c7 01       		.uleb128 0x1
 2743 07c8 9C       		.byte	0x9c
 2744 07c9 DD070000 		.4byte	0x7dd
 2745 07cd 10       		.uleb128 0x10
 2746 07ce 24000000 		.4byte	.LVL145
 2747 07d2 0C0A0000 		.4byte	0xa0c
 2748 07d6 11       		.uleb128 0x11
 2749 07d7 01       		.uleb128 0x1
 2750 07d8 50       		.byte	0x50
 2751 07d9 01       		.uleb128 0x1
 2752 07da 3A       		.byte	0x3a
 2753 07db 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 89


 2754 07dc 00       		.byte	0
 2755 07dd 0F       		.uleb128 0xf
 2756 07de DC040000 		.4byte	.LASF88
 2757 07e2 01       		.byte	0x1
 2758 07e3 3A02     		.2byte	0x23a
 2759 07e5 00000000 		.4byte	.LFB1
 2760 07e9 24000000 		.4byte	.LFE1-.LFB1
 2761 07ed 01       		.uleb128 0x1
 2762 07ee 9C       		.byte	0x9c
 2763 07ef 06080000 		.4byte	0x806
 2764 07f3 1A       		.uleb128 0x1a
 2765 07f4 0E000000 		.4byte	.LVL146
 2766 07f8 35070000 		.4byte	0x735
 2767 07fc 1A       		.uleb128 0x1a
 2768 07fd 1C000000 		.4byte	.LVL147
 2769 0801 B7070000 		.4byte	0x7b7
 2770 0805 00       		.byte	0
 2771 0806 0F       		.uleb128 0xf
 2772 0807 99040000 		.4byte	.LASF89
 2773 080b 01       		.byte	0x1
 2774 080c 5A02     		.2byte	0x25a
 2775 080e 00000000 		.4byte	.LFB2
 2776 0812 10000000 		.4byte	.LFE2-.LFB2
 2777 0816 01       		.uleb128 0x1
 2778 0817 9C       		.byte	0x9c
 2779 0818 46080000 		.4byte	0x846
 2780 081c 0C       		.uleb128 0xc
 2781 081d D2020000 		.4byte	.LASF90
 2782 0821 01       		.byte	0x1
 2783 0822 5A02     		.2byte	0x25a
 2784 0824 E5000000 		.4byte	0xe5
 2785 0828 FE070000 		.4byte	.LLST45
 2786 082c 1A       		.uleb128 0x1a
 2787 082d 08000000 		.4byte	.LVL149
 2788 0831 DD070000 		.4byte	0x7dd
 2789 0835 10       		.uleb128 0x10
 2790 0836 0E000000 		.4byte	.LVL150
 2791 083a 1D0A0000 		.4byte	0xa1d
 2792 083e 11       		.uleb128 0x11
 2793 083f 01       		.uleb128 0x1
 2794 0840 50       		.byte	0x50
 2795 0841 02       		.uleb128 0x2
 2796 0842 74       		.byte	0x74
 2797 0843 00       		.sleb128 0
 2798 0844 00       		.byte	0
 2799 0845 00       		.byte	0
 2800 0846 0F       		.uleb128 0xf
 2801 0847 C4000000 		.4byte	.LASF91
 2802 084b 01       		.byte	0x1
 2803 084c 0103     		.2byte	0x301
 2804 084e 00000000 		.4byte	.LFB5
 2805 0852 70000000 		.4byte	.LFE5-.LFB5
 2806 0856 01       		.uleb128 0x1
 2807 0857 9C       		.byte	0x9c
 2808 0858 B5080000 		.4byte	0x8b5
 2809 085c 0C       		.uleb128 0xc
 2810 085d 72040000 		.4byte	.LASF40
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 90


 2811 0861 01       		.byte	0x1
 2812 0862 0103     		.2byte	0x301
 2813 0864 83000000 		.4byte	0x83
 2814 0868 2A080000 		.4byte	.LLST46
 2815 086c 0C       		.uleb128 0xc
 2816 086d B3040000 		.4byte	.LASF92
 2817 0871 01       		.byte	0x1
 2818 0872 0103     		.2byte	0x301
 2819 0874 83000000 		.4byte	0x83
 2820 0878 56080000 		.4byte	.LLST47
 2821 087c 1A       		.uleb128 0x1a
 2822 087d 0E000000 		.4byte	.LVL153
 2823 0881 06020000 		.4byte	0x206
 2824 0885 1A       		.uleb128 0x1a
 2825 0886 1E000000 		.4byte	.LVL154
 2826 088a 35070000 		.4byte	0x735
 2827 088e 17       		.uleb128 0x17
 2828 088f 38000000 		.4byte	.LVL155
 2829 0893 18020000 		.4byte	0x218
 2830 0897 A2080000 		.4byte	0x8a2
 2831 089b 11       		.uleb128 0x11
 2832 089c 01       		.uleb128 0x1
 2833 089d 50       		.byte	0x50
 2834 089e 02       		.uleb128 0x2
 2835 089f 74       		.byte	0x74
 2836 08a0 00       		.sleb128 0
 2837 08a1 00       		.byte	0
 2838 08a2 1A       		.uleb128 0x1a
 2839 08a3 56000000 		.4byte	.LVL156
 2840 08a7 DD070000 		.4byte	0x7dd
 2841 08ab 1A       		.uleb128 0x1a
 2842 08ac 5A000000 		.4byte	.LVL157
 2843 08b0 79020000 		.4byte	0x279
 2844 08b4 00       		.byte	0
 2845 08b5 0F       		.uleb128 0xf
 2846 08b6 33020000 		.4byte	.LASF93
 2847 08ba 01       		.byte	0x1
 2848 08bb 6A03     		.2byte	0x36a
 2849 08bd 00000000 		.4byte	.LFB7
 2850 08c1 44000000 		.4byte	.LFE7-.LFB7
 2851 08c5 01       		.uleb128 0x1
 2852 08c6 9C       		.byte	0x9c
 2853 08c7 DE080000 		.4byte	0x8de
 2854 08cb 1A       		.uleb128 0x1a
 2855 08cc 2C000000 		.4byte	.LVL158
 2856 08d0 06020000 		.4byte	0x206
 2857 08d4 1A       		.uleb128 0x1a
 2858 08d5 30000000 		.4byte	.LVL159
 2859 08d9 DD070000 		.4byte	0x7dd
 2860 08dd 00       		.byte	0
 2861 08de 1B       		.uleb128 0x1b
 2862 08df 3C000000 		.4byte	.LASF94
 2863 08e3 01       		.byte	0x1
 2864 08e4 43       		.byte	0x43
 2865 08e5 83000000 		.4byte	0x83
 2866 08e9 05       		.uleb128 0x5
 2867 08ea 03       		.byte	0x3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 91


 2868 08eb 00000000 		.4byte	ADC_currentConfig
 2869 08ef 1C       		.uleb128 0x1c
 2870 08f0 83000000 		.4byte	0x83
 2871 08f4 FF080000 		.4byte	0x8ff
 2872 08f8 1D       		.uleb128 0x1d
 2873 08f9 F8000000 		.4byte	0xf8
 2874 08fd 01       		.byte	0x1
 2875 08fe 00       		.byte	0
 2876 08ff 1B       		.uleb128 0x1b
 2877 0900 79040000 		.4byte	.LASF95
 2878 0904 01       		.byte	0x1
 2879 0905 49       		.byte	0x49
 2880 0906 10090000 		.4byte	0x910
 2881 090a 05       		.uleb128 0x5
 2882 090b 03       		.byte	0x3
 2883 090c 00000000 		.4byte	ADC_channelsConfig
 2884 0910 12       		.uleb128 0x12
 2885 0911 EF080000 		.4byte	0x8ef
 2886 0915 1E       		.uleb128 0x1e
 2887 0916 8B010000 		.4byte	.LASF96
 2888 091a 01       		.byte	0x1
 2889 091b 3D       		.byte	0x3d
 2890 091c 6B000000 		.4byte	0x6b
 2891 0920 05       		.uleb128 0x5
 2892 0921 03       		.byte	0x3
 2893 0922 00000000 		.4byte	ADC_initVar
 2894 0926 1E       		.uleb128 0x1e
 2895 0927 8C040000 		.4byte	.LASF97
 2896 092b 01       		.byte	0x1
 2897 092c 3F       		.byte	0x3f
 2898 092d 6B000000 		.4byte	0x6b
 2899 0931 05       		.uleb128 0x5
 2900 0932 03       		.byte	0x3
 2901 0933 00000000 		.4byte	ADC_selected
 2902 0937 1C       		.uleb128 0x1c
 2903 0938 8F000000 		.4byte	0x8f
 2904 093c 47090000 		.4byte	0x947
 2905 0940 1D       		.uleb128 0x1d
 2906 0941 F8000000 		.4byte	0xf8
 2907 0945 01       		.byte	0x1
 2908 0946 00       		.byte	0
 2909 0947 1E       		.uleb128 0x1e
 2910 0948 D1030000 		.4byte	.LASF98
 2911 094c 01       		.byte	0x1
 2912 094d 40       		.byte	0x40
 2913 094e 58090000 		.4byte	0x958
 2914 0952 05       		.uleb128 0x5
 2915 0953 03       		.byte	0x3
 2916 0954 00000000 		.4byte	ADC_offset
 2917 0958 05       		.uleb128 0x5
 2918 0959 37090000 		.4byte	0x937
 2919 095d 1C       		.uleb128 0x1c
 2920 095e 9B000000 		.4byte	0x9b
 2921 0962 6D090000 		.4byte	0x96d
 2922 0966 1D       		.uleb128 0x1d
 2923 0967 F8000000 		.4byte	0xf8
 2924 096b 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 92


 2925 096c 00       		.byte	0
 2926 096d 1E       		.uleb128 0x1e
 2927 096e 01010000 		.4byte	.LASF99
 2928 0972 01       		.byte	0x1
 2929 0973 41       		.byte	0x41
 2930 0974 7E090000 		.4byte	0x97e
 2931 0978 05       		.uleb128 0x5
 2932 0979 03       		.byte	0x3
 2933 097a 00000000 		.4byte	ADC_countsPer10Volt
 2934 097e 05       		.uleb128 0x5
 2935 097f 5D090000 		.4byte	0x95d
 2936 0983 1C       		.uleb128 0x1c
 2937 0984 B0010000 		.4byte	0x1b0
 2938 0988 93090000 		.4byte	0x993
 2939 098c 1D       		.uleb128 0x1d
 2940 098d F8000000 		.4byte	0xf8
 2941 0991 00       		.byte	0
 2942 0992 00       		.byte	0
 2943 0993 1F       		.uleb128 0x1f
 2944 0994 63040000 		.4byte	.LASF100
 2945 0998 03       		.byte	0x3
 2946 0999 DF01     		.2byte	0x1df
 2947 099b 9F090000 		.4byte	0x99f
 2948 099f 12       		.uleb128 0x12
 2949 09a0 83090000 		.4byte	0x983
 2950 09a4 1F       		.uleb128 0x1f
 2951 09a5 74000000 		.4byte	.LASF101
 2952 09a9 03       		.byte	0x3
 2953 09aa E001     		.2byte	0x1e0
 2954 09ac B0090000 		.4byte	0x9b0
 2955 09b0 12       		.uleb128 0x12
 2956 09b1 EF080000 		.4byte	0x8ef
 2957 09b5 20       		.uleb128 0x20
 2958 09b6 E6030000 		.4byte	.LASF102
 2959 09ba 04       		.byte	0x4
 2960 09bb 29       		.byte	0x29
 2961 09bc CB090000 		.4byte	0x9cb
 2962 09c0 21       		.uleb128 0x21
 2963 09c1 77000000 		.4byte	0x77
 2964 09c5 21       		.uleb128 0x21
 2965 09c6 6B000000 		.4byte	0x6b
 2966 09ca 00       		.byte	0
 2967 09cb 20       		.uleb128 0x20
 2968 09cc BC030000 		.4byte	.LASF103
 2969 09d0 05       		.byte	0x5
 2970 09d1 E7       		.byte	0xe7
 2971 09d2 DC090000 		.4byte	0x9dc
 2972 09d6 21       		.uleb128 0x21
 2973 09d7 6B000000 		.4byte	0x6b
 2974 09db 00       		.byte	0
 2975 09dc 20       		.uleb128 0x20
 2976 09dd 37030000 		.4byte	.LASF104
 2977 09e1 05       		.byte	0x5
 2978 09e2 C0       		.byte	0xc0
 2979 09e3 F2090000 		.4byte	0x9f2
 2980 09e7 21       		.uleb128 0x21
 2981 09e8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 93


 2982 09ec 21       		.uleb128 0x21
 2983 09ed 6B000000 		.4byte	0x6b
 2984 09f1 00       		.byte	0
 2985 09f2 22       		.uleb128 0x22
 2986 09f3 77010000 		.4byte	.LASF110
 2987 09f7 05       		.byte	0x5
 2988 09f8 BD       		.byte	0xbd
 2989 09f9 E5000000 		.4byte	0xe5
 2990 09fd 0C0A0000 		.4byte	0xa0c
 2991 0a01 21       		.uleb128 0x21
 2992 0a02 6B000000 		.4byte	0x6b
 2993 0a06 21       		.uleb128 0x21
 2994 0a07 E5000000 		.4byte	0xe5
 2995 0a0b 00       		.byte	0
 2996 0a0c 20       		.uleb128 0x20
 2997 0a0d 30010000 		.4byte	.LASF105
 2998 0a11 05       		.byte	0x5
 2999 0a12 DA       		.byte	0xda
 3000 0a13 1D0A0000 		.4byte	0xa1d
 3001 0a17 21       		.uleb128 0x21
 3002 0a18 77000000 		.4byte	0x77
 3003 0a1c 00       		.byte	0
 3004 0a1d 23       		.uleb128 0x23
 3005 0a1e 79050000 		.4byte	.LASF111
 3006 0a22 06       		.byte	0x6
 3007 0a23 18       		.byte	0x18
 3008 0a24 21       		.uleb128 0x21
 3009 0a25 E5000000 		.4byte	0xe5
 3010 0a29 00       		.byte	0
 3011 0a2a 00       		.byte	0
 3012              		.section	.debug_abbrev,"",%progbits
 3013              	.Ldebug_abbrev0:
 3014 0000 01       		.uleb128 0x1
 3015 0001 11       		.uleb128 0x11
 3016 0002 01       		.byte	0x1
 3017 0003 25       		.uleb128 0x25
 3018 0004 0E       		.uleb128 0xe
 3019 0005 13       		.uleb128 0x13
 3020 0006 0B       		.uleb128 0xb
 3021 0007 03       		.uleb128 0x3
 3022 0008 0E       		.uleb128 0xe
 3023 0009 1B       		.uleb128 0x1b
 3024 000a 0E       		.uleb128 0xe
 3025 000b 55       		.uleb128 0x55
 3026 000c 17       		.uleb128 0x17
 3027 000d 11       		.uleb128 0x11
 3028 000e 01       		.uleb128 0x1
 3029 000f 10       		.uleb128 0x10
 3030 0010 17       		.uleb128 0x17
 3031 0011 00       		.byte	0
 3032 0012 00       		.byte	0
 3033 0013 02       		.uleb128 0x2
 3034 0014 24       		.uleb128 0x24
 3035 0015 00       		.byte	0
 3036 0016 0B       		.uleb128 0xb
 3037 0017 0B       		.uleb128 0xb
 3038 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 94


 3039 0019 0B       		.uleb128 0xb
 3040 001a 03       		.uleb128 0x3
 3041 001b 0E       		.uleb128 0xe
 3042 001c 00       		.byte	0
 3043 001d 00       		.byte	0
 3044 001e 03       		.uleb128 0x3
 3045 001f 24       		.uleb128 0x24
 3046 0020 00       		.byte	0
 3047 0021 0B       		.uleb128 0xb
 3048 0022 0B       		.uleb128 0xb
 3049 0023 3E       		.uleb128 0x3e
 3050 0024 0B       		.uleb128 0xb
 3051 0025 03       		.uleb128 0x3
 3052 0026 08       		.uleb128 0x8
 3053 0027 00       		.byte	0
 3054 0028 00       		.byte	0
 3055 0029 04       		.uleb128 0x4
 3056 002a 16       		.uleb128 0x16
 3057 002b 00       		.byte	0
 3058 002c 03       		.uleb128 0x3
 3059 002d 0E       		.uleb128 0xe
 3060 002e 3A       		.uleb128 0x3a
 3061 002f 0B       		.uleb128 0xb
 3062 0030 3B       		.uleb128 0x3b
 3063 0031 05       		.uleb128 0x5
 3064 0032 49       		.uleb128 0x49
 3065 0033 13       		.uleb128 0x13
 3066 0034 00       		.byte	0
 3067 0035 00       		.byte	0
 3068 0036 05       		.uleb128 0x5
 3069 0037 35       		.uleb128 0x35
 3070 0038 00       		.byte	0
 3071 0039 49       		.uleb128 0x49
 3072 003a 13       		.uleb128 0x13
 3073 003b 00       		.byte	0
 3074 003c 00       		.byte	0
 3075 003d 06       		.uleb128 0x6
 3076 003e 0F       		.uleb128 0xf
 3077 003f 00       		.byte	0
 3078 0040 0B       		.uleb128 0xb
 3079 0041 0B       		.uleb128 0xb
 3080 0042 49       		.uleb128 0x49
 3081 0043 13       		.uleb128 0x13
 3082 0044 00       		.byte	0
 3083 0045 00       		.byte	0
 3084 0046 07       		.uleb128 0x7
 3085 0047 15       		.uleb128 0x15
 3086 0048 00       		.byte	0
 3087 0049 27       		.uleb128 0x27
 3088 004a 19       		.uleb128 0x19
 3089 004b 00       		.byte	0
 3090 004c 00       		.byte	0
 3091 004d 08       		.uleb128 0x8
 3092 004e 13       		.uleb128 0x13
 3093 004f 01       		.byte	0x1
 3094 0050 0B       		.uleb128 0xb
 3095 0051 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 95


 3096 0052 3A       		.uleb128 0x3a
 3097 0053 0B       		.uleb128 0xb
 3098 0054 3B       		.uleb128 0x3b
 3099 0055 0B       		.uleb128 0xb
 3100 0056 01       		.uleb128 0x1
 3101 0057 13       		.uleb128 0x13
 3102 0058 00       		.byte	0
 3103 0059 00       		.byte	0
 3104 005a 09       		.uleb128 0x9
 3105 005b 0D       		.uleb128 0xd
 3106 005c 00       		.byte	0
 3107 005d 03       		.uleb128 0x3
 3108 005e 0E       		.uleb128 0xe
 3109 005f 3A       		.uleb128 0x3a
 3110 0060 0B       		.uleb128 0xb
 3111 0061 3B       		.uleb128 0x3b
 3112 0062 0B       		.uleb128 0xb
 3113 0063 49       		.uleb128 0x49
 3114 0064 13       		.uleb128 0x13
 3115 0065 38       		.uleb128 0x38
 3116 0066 0B       		.uleb128 0xb
 3117 0067 00       		.byte	0
 3118 0068 00       		.byte	0
 3119 0069 0A       		.uleb128 0xa
 3120 006a 16       		.uleb128 0x16
 3121 006b 00       		.byte	0
 3122 006c 03       		.uleb128 0x3
 3123 006d 0E       		.uleb128 0xe
 3124 006e 3A       		.uleb128 0x3a
 3125 006f 0B       		.uleb128 0xb
 3126 0070 3B       		.uleb128 0x3b
 3127 0071 0B       		.uleb128 0xb
 3128 0072 49       		.uleb128 0x49
 3129 0073 13       		.uleb128 0x13
 3130 0074 00       		.byte	0
 3131 0075 00       		.byte	0
 3132 0076 0B       		.uleb128 0xb
 3133 0077 2E       		.uleb128 0x2e
 3134 0078 01       		.byte	0x1
 3135 0079 03       		.uleb128 0x3
 3136 007a 0E       		.uleb128 0xe
 3137 007b 3A       		.uleb128 0x3a
 3138 007c 0B       		.uleb128 0xb
 3139 007d 3B       		.uleb128 0x3b
 3140 007e 05       		.uleb128 0x5
 3141 007f 27       		.uleb128 0x27
 3142 0080 19       		.uleb128 0x19
 3143 0081 49       		.uleb128 0x49
 3144 0082 13       		.uleb128 0x13
 3145 0083 11       		.uleb128 0x11
 3146 0084 01       		.uleb128 0x1
 3147 0085 12       		.uleb128 0x12
 3148 0086 06       		.uleb128 0x6
 3149 0087 40       		.uleb128 0x40
 3150 0088 18       		.uleb128 0x18
 3151 0089 9742     		.uleb128 0x2117
 3152 008b 19       		.uleb128 0x19
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 96


 3153 008c 01       		.uleb128 0x1
 3154 008d 13       		.uleb128 0x13
 3155 008e 00       		.byte	0
 3156 008f 00       		.byte	0
 3157 0090 0C       		.uleb128 0xc
 3158 0091 05       		.uleb128 0x5
 3159 0092 00       		.byte	0
 3160 0093 03       		.uleb128 0x3
 3161 0094 0E       		.uleb128 0xe
 3162 0095 3A       		.uleb128 0x3a
 3163 0096 0B       		.uleb128 0xb
 3164 0097 3B       		.uleb128 0x3b
 3165 0098 05       		.uleb128 0x5
 3166 0099 49       		.uleb128 0x49
 3167 009a 13       		.uleb128 0x13
 3168 009b 02       		.uleb128 0x2
 3169 009c 17       		.uleb128 0x17
 3170 009d 00       		.byte	0
 3171 009e 00       		.byte	0
 3172 009f 0D       		.uleb128 0xd
 3173 00a0 34       		.uleb128 0x34
 3174 00a1 00       		.byte	0
 3175 00a2 03       		.uleb128 0x3
 3176 00a3 0E       		.uleb128 0xe
 3177 00a4 3A       		.uleb128 0x3a
 3178 00a5 0B       		.uleb128 0xb
 3179 00a6 3B       		.uleb128 0x3b
 3180 00a7 05       		.uleb128 0x5
 3181 00a8 49       		.uleb128 0x49
 3182 00a9 13       		.uleb128 0x13
 3183 00aa 02       		.uleb128 0x2
 3184 00ab 17       		.uleb128 0x17
 3185 00ac 00       		.byte	0
 3186 00ad 00       		.byte	0
 3187 00ae 0E       		.uleb128 0xe
 3188 00af 2E       		.uleb128 0x2e
 3189 00b0 00       		.byte	0
 3190 00b1 3F       		.uleb128 0x3f
 3191 00b2 19       		.uleb128 0x19
 3192 00b3 03       		.uleb128 0x3
 3193 00b4 0E       		.uleb128 0xe
 3194 00b5 3A       		.uleb128 0x3a
 3195 00b6 0B       		.uleb128 0xb
 3196 00b7 3B       		.uleb128 0x3b
 3197 00b8 05       		.uleb128 0x5
 3198 00b9 27       		.uleb128 0x27
 3199 00ba 19       		.uleb128 0x19
 3200 00bb 11       		.uleb128 0x11
 3201 00bc 01       		.uleb128 0x1
 3202 00bd 12       		.uleb128 0x12
 3203 00be 06       		.uleb128 0x6
 3204 00bf 40       		.uleb128 0x40
 3205 00c0 18       		.uleb128 0x18
 3206 00c1 9742     		.uleb128 0x2117
 3207 00c3 19       		.uleb128 0x19
 3208 00c4 00       		.byte	0
 3209 00c5 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 97


 3210 00c6 0F       		.uleb128 0xf
 3211 00c7 2E       		.uleb128 0x2e
 3212 00c8 01       		.byte	0x1
 3213 00c9 3F       		.uleb128 0x3f
 3214 00ca 19       		.uleb128 0x19
 3215 00cb 03       		.uleb128 0x3
 3216 00cc 0E       		.uleb128 0xe
 3217 00cd 3A       		.uleb128 0x3a
 3218 00ce 0B       		.uleb128 0xb
 3219 00cf 3B       		.uleb128 0x3b
 3220 00d0 05       		.uleb128 0x5
 3221 00d1 27       		.uleb128 0x27
 3222 00d2 19       		.uleb128 0x19
 3223 00d3 11       		.uleb128 0x11
 3224 00d4 01       		.uleb128 0x1
 3225 00d5 12       		.uleb128 0x12
 3226 00d6 06       		.uleb128 0x6
 3227 00d7 40       		.uleb128 0x40
 3228 00d8 18       		.uleb128 0x18
 3229 00d9 9742     		.uleb128 0x2117
 3230 00db 19       		.uleb128 0x19
 3231 00dc 01       		.uleb128 0x1
 3232 00dd 13       		.uleb128 0x13
 3233 00de 00       		.byte	0
 3234 00df 00       		.byte	0
 3235 00e0 10       		.uleb128 0x10
 3236 00e1 898201   		.uleb128 0x4109
 3237 00e4 01       		.byte	0x1
 3238 00e5 11       		.uleb128 0x11
 3239 00e6 01       		.uleb128 0x1
 3240 00e7 31       		.uleb128 0x31
 3241 00e8 13       		.uleb128 0x13
 3242 00e9 00       		.byte	0
 3243 00ea 00       		.byte	0
 3244 00eb 11       		.uleb128 0x11
 3245 00ec 8A8201   		.uleb128 0x410a
 3246 00ef 00       		.byte	0
 3247 00f0 02       		.uleb128 0x2
 3248 00f1 18       		.uleb128 0x18
 3249 00f2 9142     		.uleb128 0x2111
 3250 00f4 18       		.uleb128 0x18
 3251 00f5 00       		.byte	0
 3252 00f6 00       		.byte	0
 3253 00f7 12       		.uleb128 0x12
 3254 00f8 26       		.uleb128 0x26
 3255 00f9 00       		.byte	0
 3256 00fa 49       		.uleb128 0x49
 3257 00fb 13       		.uleb128 0x13
 3258 00fc 00       		.byte	0
 3259 00fd 00       		.byte	0
 3260 00fe 13       		.uleb128 0x13
 3261 00ff 05       		.uleb128 0x5
 3262 0100 00       		.byte	0
 3263 0101 03       		.uleb128 0x3
 3264 0102 0E       		.uleb128 0xe
 3265 0103 3A       		.uleb128 0x3a
 3266 0104 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 98


 3267 0105 3B       		.uleb128 0x3b
 3268 0106 05       		.uleb128 0x5
 3269 0107 49       		.uleb128 0x49
 3270 0108 13       		.uleb128 0x13
 3271 0109 02       		.uleb128 0x2
 3272 010a 18       		.uleb128 0x18
 3273 010b 00       		.byte	0
 3274 010c 00       		.byte	0
 3275 010d 14       		.uleb128 0x14
 3276 010e 34       		.uleb128 0x34
 3277 010f 00       		.byte	0
 3278 0110 03       		.uleb128 0x3
 3279 0111 0E       		.uleb128 0xe
 3280 0112 3A       		.uleb128 0x3a
 3281 0113 0B       		.uleb128 0xb
 3282 0114 3B       		.uleb128 0x3b
 3283 0115 05       		.uleb128 0x5
 3284 0116 49       		.uleb128 0x49
 3285 0117 13       		.uleb128 0x13
 3286 0118 02       		.uleb128 0x2
 3287 0119 18       		.uleb128 0x18
 3288 011a 00       		.byte	0
 3289 011b 00       		.byte	0
 3290 011c 15       		.uleb128 0x15
 3291 011d 2E       		.uleb128 0x2e
 3292 011e 01       		.byte	0x1
 3293 011f 3F       		.uleb128 0x3f
 3294 0120 19       		.uleb128 0x19
 3295 0121 03       		.uleb128 0x3
 3296 0122 0E       		.uleb128 0xe
 3297 0123 3A       		.uleb128 0x3a
 3298 0124 0B       		.uleb128 0xb
 3299 0125 3B       		.uleb128 0x3b
 3300 0126 05       		.uleb128 0x5
 3301 0127 27       		.uleb128 0x27
 3302 0128 19       		.uleb128 0x19
 3303 0129 49       		.uleb128 0x49
 3304 012a 13       		.uleb128 0x13
 3305 012b 11       		.uleb128 0x11
 3306 012c 01       		.uleb128 0x1
 3307 012d 12       		.uleb128 0x12
 3308 012e 06       		.uleb128 0x6
 3309 012f 40       		.uleb128 0x40
 3310 0130 18       		.uleb128 0x18
 3311 0131 9742     		.uleb128 0x2117
 3312 0133 19       		.uleb128 0x19
 3313 0134 01       		.uleb128 0x1
 3314 0135 13       		.uleb128 0x13
 3315 0136 00       		.byte	0
 3316 0137 00       		.byte	0
 3317 0138 16       		.uleb128 0x16
 3318 0139 34       		.uleb128 0x34
 3319 013a 00       		.byte	0
 3320 013b 03       		.uleb128 0x3
 3321 013c 08       		.uleb128 0x8
 3322 013d 3A       		.uleb128 0x3a
 3323 013e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 99


 3324 013f 3B       		.uleb128 0x3b
 3325 0140 05       		.uleb128 0x5
 3326 0141 49       		.uleb128 0x49
 3327 0142 13       		.uleb128 0x13
 3328 0143 02       		.uleb128 0x2
 3329 0144 17       		.uleb128 0x17
 3330 0145 00       		.byte	0
 3331 0146 00       		.byte	0
 3332 0147 17       		.uleb128 0x17
 3333 0148 898201   		.uleb128 0x4109
 3334 014b 01       		.byte	0x1
 3335 014c 11       		.uleb128 0x11
 3336 014d 01       		.uleb128 0x1
 3337 014e 31       		.uleb128 0x31
 3338 014f 13       		.uleb128 0x13
 3339 0150 01       		.uleb128 0x1
 3340 0151 13       		.uleb128 0x13
 3341 0152 00       		.byte	0
 3342 0153 00       		.byte	0
 3343 0154 18       		.uleb128 0x18
 3344 0155 2E       		.uleb128 0x2e
 3345 0156 01       		.byte	0x1
 3346 0157 3F       		.uleb128 0x3f
 3347 0158 19       		.uleb128 0x19
 3348 0159 03       		.uleb128 0x3
 3349 015a 0E       		.uleb128 0xe
 3350 015b 3A       		.uleb128 0x3a
 3351 015c 0B       		.uleb128 0xb
 3352 015d 3B       		.uleb128 0x3b
 3353 015e 05       		.uleb128 0x5
 3354 015f 27       		.uleb128 0x27
 3355 0160 19       		.uleb128 0x19
 3356 0161 49       		.uleb128 0x49
 3357 0162 13       		.uleb128 0x13
 3358 0163 11       		.uleb128 0x11
 3359 0164 01       		.uleb128 0x1
 3360 0165 12       		.uleb128 0x12
 3361 0166 06       		.uleb128 0x6
 3362 0167 40       		.uleb128 0x40
 3363 0168 18       		.uleb128 0x18
 3364 0169 9642     		.uleb128 0x2116
 3365 016b 19       		.uleb128 0x19
 3366 016c 01       		.uleb128 0x1
 3367 016d 13       		.uleb128 0x13
 3368 016e 00       		.byte	0
 3369 016f 00       		.byte	0
 3370 0170 19       		.uleb128 0x19
 3371 0171 2E       		.uleb128 0x2e
 3372 0172 01       		.byte	0x1
 3373 0173 3F       		.uleb128 0x3f
 3374 0174 19       		.uleb128 0x19
 3375 0175 03       		.uleb128 0x3
 3376 0176 0E       		.uleb128 0xe
 3377 0177 3A       		.uleb128 0x3a
 3378 0178 0B       		.uleb128 0xb
 3379 0179 3B       		.uleb128 0x3b
 3380 017a 05       		.uleb128 0x5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 100


 3381 017b 27       		.uleb128 0x27
 3382 017c 19       		.uleb128 0x19
 3383 017d 11       		.uleb128 0x11
 3384 017e 01       		.uleb128 0x1
 3385 017f 12       		.uleb128 0x12
 3386 0180 06       		.uleb128 0x6
 3387 0181 40       		.uleb128 0x40
 3388 0182 18       		.uleb128 0x18
 3389 0183 9642     		.uleb128 0x2116
 3390 0185 19       		.uleb128 0x19
 3391 0186 01       		.uleb128 0x1
 3392 0187 13       		.uleb128 0x13
 3393 0188 00       		.byte	0
 3394 0189 00       		.byte	0
 3395 018a 1A       		.uleb128 0x1a
 3396 018b 898201   		.uleb128 0x4109
 3397 018e 00       		.byte	0
 3398 018f 11       		.uleb128 0x11
 3399 0190 01       		.uleb128 0x1
 3400 0191 31       		.uleb128 0x31
 3401 0192 13       		.uleb128 0x13
 3402 0193 00       		.byte	0
 3403 0194 00       		.byte	0
 3404 0195 1B       		.uleb128 0x1b
 3405 0196 34       		.uleb128 0x34
 3406 0197 00       		.byte	0
 3407 0198 03       		.uleb128 0x3
 3408 0199 0E       		.uleb128 0xe
 3409 019a 3A       		.uleb128 0x3a
 3410 019b 0B       		.uleb128 0xb
 3411 019c 3B       		.uleb128 0x3b
 3412 019d 0B       		.uleb128 0xb
 3413 019e 49       		.uleb128 0x49
 3414 019f 13       		.uleb128 0x13
 3415 01a0 02       		.uleb128 0x2
 3416 01a1 18       		.uleb128 0x18
 3417 01a2 00       		.byte	0
 3418 01a3 00       		.byte	0
 3419 01a4 1C       		.uleb128 0x1c
 3420 01a5 01       		.uleb128 0x1
 3421 01a6 01       		.byte	0x1
 3422 01a7 49       		.uleb128 0x49
 3423 01a8 13       		.uleb128 0x13
 3424 01a9 01       		.uleb128 0x1
 3425 01aa 13       		.uleb128 0x13
 3426 01ab 00       		.byte	0
 3427 01ac 00       		.byte	0
 3428 01ad 1D       		.uleb128 0x1d
 3429 01ae 21       		.uleb128 0x21
 3430 01af 00       		.byte	0
 3431 01b0 49       		.uleb128 0x49
 3432 01b1 13       		.uleb128 0x13
 3433 01b2 2F       		.uleb128 0x2f
 3434 01b3 0B       		.uleb128 0xb
 3435 01b4 00       		.byte	0
 3436 01b5 00       		.byte	0
 3437 01b6 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 101


 3438 01b7 34       		.uleb128 0x34
 3439 01b8 00       		.byte	0
 3440 01b9 03       		.uleb128 0x3
 3441 01ba 0E       		.uleb128 0xe
 3442 01bb 3A       		.uleb128 0x3a
 3443 01bc 0B       		.uleb128 0xb
 3444 01bd 3B       		.uleb128 0x3b
 3445 01be 0B       		.uleb128 0xb
 3446 01bf 49       		.uleb128 0x49
 3447 01c0 13       		.uleb128 0x13
 3448 01c1 3F       		.uleb128 0x3f
 3449 01c2 19       		.uleb128 0x19
 3450 01c3 02       		.uleb128 0x2
 3451 01c4 18       		.uleb128 0x18
 3452 01c5 00       		.byte	0
 3453 01c6 00       		.byte	0
 3454 01c7 1F       		.uleb128 0x1f
 3455 01c8 34       		.uleb128 0x34
 3456 01c9 00       		.byte	0
 3457 01ca 03       		.uleb128 0x3
 3458 01cb 0E       		.uleb128 0xe
 3459 01cc 3A       		.uleb128 0x3a
 3460 01cd 0B       		.uleb128 0xb
 3461 01ce 3B       		.uleb128 0x3b
 3462 01cf 05       		.uleb128 0x5
 3463 01d0 49       		.uleb128 0x49
 3464 01d1 13       		.uleb128 0x13
 3465 01d2 3F       		.uleb128 0x3f
 3466 01d3 19       		.uleb128 0x19
 3467 01d4 3C       		.uleb128 0x3c
 3468 01d5 19       		.uleb128 0x19
 3469 01d6 00       		.byte	0
 3470 01d7 00       		.byte	0
 3471 01d8 20       		.uleb128 0x20
 3472 01d9 2E       		.uleb128 0x2e
 3473 01da 01       		.byte	0x1
 3474 01db 3F       		.uleb128 0x3f
 3475 01dc 19       		.uleb128 0x19
 3476 01dd 03       		.uleb128 0x3
 3477 01de 0E       		.uleb128 0xe
 3478 01df 3A       		.uleb128 0x3a
 3479 01e0 0B       		.uleb128 0xb
 3480 01e1 3B       		.uleb128 0x3b
 3481 01e2 0B       		.uleb128 0xb
 3482 01e3 27       		.uleb128 0x27
 3483 01e4 19       		.uleb128 0x19
 3484 01e5 3C       		.uleb128 0x3c
 3485 01e6 19       		.uleb128 0x19
 3486 01e7 01       		.uleb128 0x1
 3487 01e8 13       		.uleb128 0x13
 3488 01e9 00       		.byte	0
 3489 01ea 00       		.byte	0
 3490 01eb 21       		.uleb128 0x21
 3491 01ec 05       		.uleb128 0x5
 3492 01ed 00       		.byte	0
 3493 01ee 49       		.uleb128 0x49
 3494 01ef 13       		.uleb128 0x13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 102


 3495 01f0 00       		.byte	0
 3496 01f1 00       		.byte	0
 3497 01f2 22       		.uleb128 0x22
 3498 01f3 2E       		.uleb128 0x2e
 3499 01f4 01       		.byte	0x1
 3500 01f5 3F       		.uleb128 0x3f
 3501 01f6 19       		.uleb128 0x19
 3502 01f7 03       		.uleb128 0x3
 3503 01f8 0E       		.uleb128 0xe
 3504 01f9 3A       		.uleb128 0x3a
 3505 01fa 0B       		.uleb128 0xb
 3506 01fb 3B       		.uleb128 0x3b
 3507 01fc 0B       		.uleb128 0xb
 3508 01fd 27       		.uleb128 0x27
 3509 01fe 19       		.uleb128 0x19
 3510 01ff 49       		.uleb128 0x49
 3511 0200 13       		.uleb128 0x13
 3512 0201 3C       		.uleb128 0x3c
 3513 0202 19       		.uleb128 0x19
 3514 0203 01       		.uleb128 0x1
 3515 0204 13       		.uleb128 0x13
 3516 0205 00       		.byte	0
 3517 0206 00       		.byte	0
 3518 0207 23       		.uleb128 0x23
 3519 0208 2E       		.uleb128 0x2e
 3520 0209 01       		.byte	0x1
 3521 020a 3F       		.uleb128 0x3f
 3522 020b 19       		.uleb128 0x19
 3523 020c 03       		.uleb128 0x3
 3524 020d 0E       		.uleb128 0xe
 3525 020e 3A       		.uleb128 0x3a
 3526 020f 0B       		.uleb128 0xb
 3527 0210 3B       		.uleb128 0x3b
 3528 0211 0B       		.uleb128 0xb
 3529 0212 27       		.uleb128 0x27
 3530 0213 19       		.uleb128 0x19
 3531 0214 3C       		.uleb128 0x3c
 3532 0215 19       		.uleb128 0x19
 3533 0216 00       		.byte	0
 3534 0217 00       		.byte	0
 3535 0218 00       		.byte	0
 3536              		.section	.debug_loc,"",%progbits
 3537              	.Ldebug_loc0:
 3538              	.LLST0:
 3539 0000 00000000 		.4byte	.LVL0
 3540 0004 02000000 		.4byte	.LVL1
 3541 0008 0100     		.2byte	0x1
 3542 000a 50       		.byte	0x50
 3543 000b 02000000 		.4byte	.LVL1
 3544 000f 58000000 		.4byte	.LFE12
 3545 0013 0400     		.2byte	0x4
 3546 0015 F3       		.byte	0xf3
 3547 0016 01       		.uleb128 0x1
 3548 0017 50       		.byte	0x50
 3549 0018 9F       		.byte	0x9f
 3550 0019 00000000 		.4byte	0
 3551 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 103


 3552              	.LLST1:
 3553 0021 00000000 		.4byte	.LVL0
 3554 0025 46000000 		.4byte	.LVL6
 3555 0029 0200     		.2byte	0x2
 3556 002b 30       		.byte	0x30
 3557 002c 9F       		.byte	0x9f
 3558 002d 46000000 		.4byte	.LVL6
 3559 0031 58000000 		.4byte	.LFE12
 3560 0035 0100     		.2byte	0x1
 3561 0037 50       		.byte	0x50
 3562 0038 00000000 		.4byte	0
 3563 003c 00000000 		.4byte	0
 3564              	.LLST2:
 3565 0040 0A000000 		.4byte	.LVL2
 3566 0044 14000000 		.4byte	.LVL3
 3567 0048 0100     		.2byte	0x1
 3568 004a 52       		.byte	0x52
 3569 004b 28000000 		.4byte	.LVL4
 3570 004f 2C000000 		.4byte	.LVL5
 3571 0053 0100     		.2byte	0x1
 3572 0055 52       		.byte	0x52
 3573 0056 00000000 		.4byte	0
 3574 005a 00000000 		.4byte	0
 3575              	.LLST3:
 3576 005e 00000000 		.4byte	.LVL7
 3577 0062 06000000 		.4byte	.LVL8
 3578 0066 0100     		.2byte	0x1
 3579 0068 50       		.byte	0x50
 3580 0069 06000000 		.4byte	.LVL8
 3581 006d B6000000 		.4byte	.LVL23
 3582 0071 0100     		.2byte	0x1
 3583 0073 54       		.byte	0x54
 3584 0074 B6000000 		.4byte	.LVL23
 3585 0078 FC000000 		.4byte	.LFE4
 3586 007c 0400     		.2byte	0x4
 3587 007e F3       		.byte	0xf3
 3588 007f 01       		.uleb128 0x1
 3589 0080 50       		.byte	0x50
 3590 0081 9F       		.byte	0x9f
 3591 0082 00000000 		.4byte	0
 3592 0086 00000000 		.4byte	0
 3593              	.LLST4:
 3594 008a 84000000 		.4byte	.LVL16
 3595 008e 88000000 		.4byte	.LVL17
 3596 0092 0200     		.2byte	0x2
 3597 0094 30       		.byte	0x30
 3598 0095 9F       		.byte	0x9f
 3599 0096 88000000 		.4byte	.LVL17
 3600 009a FC000000 		.4byte	.LFE4
 3601 009e 0100     		.2byte	0x1
 3602 00a0 51       		.byte	0x51
 3603 00a1 00000000 		.4byte	0
 3604 00a5 00000000 		.4byte	0
 3605              	.LLST5:
 3606 00a9 5E000000 		.4byte	.LVL10
 3607 00ad 76000000 		.4byte	.LVL13
 3608 00b1 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 104


 3609 00b3 53       		.byte	0x53
 3610 00b4 76000000 		.4byte	.LVL13
 3611 00b8 7A000000 		.4byte	.LVL14
 3612 00bc 0700     		.2byte	0x7
 3613 00be 73       		.byte	0x73
 3614 00bf 00       		.sleb128 0
 3615 00c0 40       		.byte	0x40
 3616 00c1 49       		.byte	0x49
 3617 00c2 24       		.byte	0x24
 3618 00c3 21       		.byte	0x21
 3619 00c4 9F       		.byte	0x9f
 3620 00c5 80000000 		.4byte	.LVL15
 3621 00c9 88000000 		.4byte	.LVL17
 3622 00cd 0100     		.2byte	0x1
 3623 00cf 53       		.byte	0x53
 3624 00d0 96000000 		.4byte	.LVL18
 3625 00d4 B2000000 		.4byte	.LVL22
 3626 00d8 0100     		.2byte	0x1
 3627 00da 53       		.byte	0x53
 3628 00db 00000000 		.4byte	0
 3629 00df 00000000 		.4byte	0
 3630              	.LLST6:
 3631 00e3 00000000 		.4byte	.LVL25
 3632 00e7 04000000 		.4byte	.LVL26
 3633 00eb 0100     		.2byte	0x1
 3634 00ed 50       		.byte	0x50
 3635 00ee 04000000 		.4byte	.LVL26
 3636 00f2 10000000 		.4byte	.LFE9
 3637 00f6 0400     		.2byte	0x4
 3638 00f8 F3       		.byte	0xf3
 3639 00f9 01       		.uleb128 0x1
 3640 00fa 50       		.byte	0x50
 3641 00fb 9F       		.byte	0x9f
 3642 00fc 00000000 		.4byte	0
 3643 0100 00000000 		.4byte	0
 3644              	.LLST7:
 3645 0104 00000000 		.4byte	.LVL27
 3646 0108 18000000 		.4byte	.LVL29
 3647 010c 0100     		.2byte	0x1
 3648 010e 50       		.byte	0x50
 3649 010f 18000000 		.4byte	.LVL29
 3650 0113 2C000000 		.4byte	.LFE10
 3651 0117 0100     		.2byte	0x1
 3652 0119 50       		.byte	0x50
 3653 011a 00000000 		.4byte	0
 3654 011e 00000000 		.4byte	0
 3655              	.LLST8:
 3656 0122 00000000 		.4byte	.LVL30
 3657 0126 0A000000 		.4byte	.LVL32
 3658 012a 0100     		.2byte	0x1
 3659 012c 50       		.byte	0x50
 3660 012d 0A000000 		.4byte	.LVL32
 3661 0131 2C000000 		.4byte	.LVL36
 3662 0135 0100     		.2byte	0x1
 3663 0137 51       		.byte	0x51
 3664 0138 2C000000 		.4byte	.LVL36
 3665 013c 2E000000 		.4byte	.LVL37
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 105


 3666 0140 0100     		.2byte	0x1
 3667 0142 50       		.byte	0x50
 3668 0143 2E000000 		.4byte	.LVL37
 3669 0147 38000000 		.4byte	.LFE11
 3670 014b 0100     		.2byte	0x1
 3671 014d 51       		.byte	0x51
 3672 014e 00000000 		.4byte	0
 3673 0152 00000000 		.4byte	0
 3674              	.LLST9:
 3675 0156 02000000 		.4byte	.LVL31
 3676 015a 0A000000 		.4byte	.LVL32
 3677 015e 0200     		.2byte	0x2
 3678 0160 30       		.byte	0x30
 3679 0161 9F       		.byte	0x9f
 3680 0162 12000000 		.4byte	.LVL33
 3681 0166 2C000000 		.4byte	.LVL36
 3682 016a 0100     		.2byte	0x1
 3683 016c 50       		.byte	0x50
 3684 016d 2C000000 		.4byte	.LVL36
 3685 0171 2E000000 		.4byte	.LVL37
 3686 0175 0200     		.2byte	0x2
 3687 0177 30       		.byte	0x30
 3688 0178 9F       		.byte	0x9f
 3689 0179 2E000000 		.4byte	.LVL37
 3690 017d 38000000 		.4byte	.LFE11
 3691 0181 0100     		.2byte	0x1
 3692 0183 50       		.byte	0x50
 3693 0184 00000000 		.4byte	0
 3694 0188 00000000 		.4byte	0
 3695              	.LLST10:
 3696 018c 02000000 		.4byte	.LVL31
 3697 0190 0A000000 		.4byte	.LVL32
 3698 0194 0600     		.2byte	0x6
 3699 0196 0C       		.byte	0xc
 3700 0197 FFFFFF03 		.4byte	0x3ffffff
 3701 019b 9F       		.byte	0x9f
 3702 019c 0A000000 		.4byte	.LVL32
 3703 01a0 26000000 		.4byte	.LVL35
 3704 01a4 0100     		.2byte	0x1
 3705 01a6 52       		.byte	0x52
 3706 01a7 2C000000 		.4byte	.LVL36
 3707 01ab 2E000000 		.4byte	.LVL37
 3708 01af 0600     		.2byte	0x6
 3709 01b1 0C       		.byte	0xc
 3710 01b2 FFFFFF03 		.4byte	0x3ffffff
 3711 01b6 9F       		.byte	0x9f
 3712 01b7 00000000 		.4byte	0
 3713 01bb 00000000 		.4byte	0
 3714              	.LLST11:
 3715 01bf 00000000 		.4byte	.LVL38
 3716 01c3 1A000000 		.4byte	.LVL39
 3717 01c7 0100     		.2byte	0x1
 3718 01c9 50       		.byte	0x50
 3719 01ca 1A000000 		.4byte	.LVL39
 3720 01ce 34000000 		.4byte	.LVL41
 3721 01d2 0100     		.2byte	0x1
 3722 01d4 54       		.byte	0x54
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 106


 3723 01d5 34000000 		.4byte	.LVL41
 3724 01d9 42000000 		.4byte	.LVL43
 3725 01dd 0400     		.2byte	0x4
 3726 01df F3       		.byte	0xf3
 3727 01e0 01       		.uleb128 0x1
 3728 01e1 50       		.byte	0x50
 3729 01e2 9F       		.byte	0x9f
 3730 01e3 42000000 		.4byte	.LVL43
 3731 01e7 44000000 		.4byte	.LVL44
 3732 01eb 0100     		.2byte	0x1
 3733 01ed 54       		.byte	0x54
 3734 01ee 44000000 		.4byte	.LVL44
 3735 01f2 54000000 		.4byte	.LFE13
 3736 01f6 0400     		.2byte	0x4
 3737 01f8 F3       		.byte	0xf3
 3738 01f9 01       		.uleb128 0x1
 3739 01fa 50       		.byte	0x50
 3740 01fb 9F       		.byte	0x9f
 3741 01fc 00000000 		.4byte	0
 3742 0200 00000000 		.4byte	0
 3743              	.LLST12:
 3744 0204 40000000 		.4byte	.LVL42
 3745 0208 42000000 		.4byte	.LVL43
 3746 020c 0100     		.2byte	0x1
 3747 020e 50       		.byte	0x50
 3748 020f 44000000 		.4byte	.LVL44
 3749 0213 46000000 		.4byte	.LVL45
 3750 0217 0100     		.2byte	0x1
 3751 0219 50       		.byte	0x50
 3752 021a 00000000 		.4byte	0
 3753 021e 00000000 		.4byte	0
 3754              	.LLST13:
 3755 0222 00000000 		.4byte	.LVL46
 3756 0226 1A000000 		.4byte	.LVL47
 3757 022a 0100     		.2byte	0x1
 3758 022c 50       		.byte	0x50
 3759 022d 1A000000 		.4byte	.LVL47
 3760 0231 54000000 		.4byte	.LVL58
 3761 0235 0100     		.2byte	0x1
 3762 0237 55       		.byte	0x55
 3763 0238 54000000 		.4byte	.LVL58
 3764 023c 64000000 		.4byte	.LFE14
 3765 0240 0400     		.2byte	0x4
 3766 0242 F3       		.byte	0xf3
 3767 0243 01       		.uleb128 0x1
 3768 0244 50       		.byte	0x50
 3769 0245 9F       		.byte	0x9f
 3770 0246 00000000 		.4byte	0
 3771 024a 00000000 		.4byte	0
 3772              	.LLST14:
 3773 024e 40000000 		.4byte	.LVL49
 3774 0252 42000000 		.4byte	.LVL50
 3775 0256 0100     		.2byte	0x1
 3776 0258 54       		.byte	0x54
 3777 0259 44000000 		.4byte	.LVL51
 3778 025d 54000000 		.4byte	.LVL57
 3779 0261 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 107


 3780 0263 54       		.byte	0x54
 3781 0264 00000000 		.4byte	0
 3782 0268 00000000 		.4byte	0
 3783              	.LLST15:
 3784 026c 4E000000 		.4byte	.LVL53
 3785 0270 52000000 		.4byte	.LVL55
 3786 0274 0100     		.2byte	0x1
 3787 0276 54       		.byte	0x54
 3788 0277 00000000 		.4byte	0
 3789 027b 00000000 		.4byte	0
 3790              	.LLST16:
 3791 027f 50000000 		.4byte	.LVL54
 3792 0283 52000000 		.4byte	.LVL55
 3793 0287 0100     		.2byte	0x1
 3794 0289 50       		.byte	0x50
 3795 028a 54000000 		.4byte	.LVL56
 3796 028e 64000000 		.4byte	.LFE14
 3797 0292 0100     		.2byte	0x1
 3798 0294 50       		.byte	0x50
 3799 0295 00000000 		.4byte	0
 3800 0299 00000000 		.4byte	0
 3801              	.LLST17:
 3802 029d 00000000 		.4byte	.LVL59
 3803 02a1 0E000000 		.4byte	.LVL60
 3804 02a5 0100     		.2byte	0x1
 3805 02a7 50       		.byte	0x50
 3806 02a8 0E000000 		.4byte	.LVL60
 3807 02ac 1C000000 		.4byte	.LFE15
 3808 02b0 0400     		.2byte	0x4
 3809 02b2 F3       		.byte	0xf3
 3810 02b3 01       		.uleb128 0x1
 3811 02b4 50       		.byte	0x50
 3812 02b5 9F       		.byte	0x9f
 3813 02b6 00000000 		.4byte	0
 3814 02ba 00000000 		.4byte	0
 3815              	.LLST18:
 3816 02be 00000000 		.4byte	.LVL61
 3817 02c2 0E000000 		.4byte	.LVL62
 3818 02c6 0100     		.2byte	0x1
 3819 02c8 50       		.byte	0x50
 3820 02c9 0E000000 		.4byte	.LVL62
 3821 02cd 18000000 		.4byte	.LFE16
 3822 02d1 0400     		.2byte	0x4
 3823 02d3 F3       		.byte	0xf3
 3824 02d4 01       		.uleb128 0x1
 3825 02d5 50       		.byte	0x50
 3826 02d6 9F       		.byte	0x9f
 3827 02d7 00000000 		.4byte	0
 3828 02db 00000000 		.4byte	0
 3829              	.LLST19:
 3830 02df 00000000 		.4byte	.LVL63
 3831 02e3 18000000 		.4byte	.LVL65
 3832 02e7 0100     		.2byte	0x1
 3833 02e9 50       		.byte	0x50
 3834 02ea 18000000 		.4byte	.LVL65
 3835 02ee 2C000000 		.4byte	.LFE17
 3836 02f2 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 108


 3837 02f4 50       		.byte	0x50
 3838 02f5 00000000 		.4byte	0
 3839 02f9 00000000 		.4byte	0
 3840              	.LLST20:
 3841 02fd 00000000 		.4byte	.LVL66
 3842 0301 18000000 		.4byte	.LVL68
 3843 0305 0100     		.2byte	0x1
 3844 0307 50       		.byte	0x50
 3845 0308 18000000 		.4byte	.LVL68
 3846 030c 2C000000 		.4byte	.LFE18
 3847 0310 0100     		.2byte	0x1
 3848 0312 50       		.byte	0x50
 3849 0313 00000000 		.4byte	0
 3850 0317 00000000 		.4byte	0
 3851              	.LLST21:
 3852 031b 00000000 		.4byte	.LVL69
 3853 031f 1C000000 		.4byte	.LVL70
 3854 0323 0100     		.2byte	0x1
 3855 0325 50       		.byte	0x50
 3856 0326 1C000000 		.4byte	.LVL70
 3857 032a 30000000 		.4byte	.LVL72
 3858 032e 0100     		.2byte	0x1
 3859 0330 54       		.byte	0x54
 3860 0331 30000000 		.4byte	.LVL72
 3861 0335 44000000 		.4byte	.LFE19
 3862 0339 0400     		.2byte	0x4
 3863 033b F3       		.byte	0xf3
 3864 033c 01       		.uleb128 0x1
 3865 033d 50       		.byte	0x50
 3866 033e 9F       		.byte	0x9f
 3867 033f 00000000 		.4byte	0
 3868 0343 00000000 		.4byte	0
 3869              	.LLST22:
 3870 0347 00000000 		.4byte	.LVL69
 3871 034b 1F000000 		.4byte	.LVL71-1
 3872 034f 0100     		.2byte	0x1
 3873 0351 51       		.byte	0x51
 3874 0352 1F000000 		.4byte	.LVL71-1
 3875 0356 44000000 		.4byte	.LFE19
 3876 035a 0400     		.2byte	0x4
 3877 035c F3       		.byte	0xf3
 3878 035d 01       		.uleb128 0x1
 3879 035e 51       		.byte	0x51
 3880 035f 9F       		.byte	0x9f
 3881 0360 00000000 		.4byte	0
 3882 0364 00000000 		.4byte	0
 3883              	.LLST23:
 3884 0368 00000000 		.4byte	.LVL73
 3885 036c 1C000000 		.4byte	.LVL74
 3886 0370 0100     		.2byte	0x1
 3887 0372 50       		.byte	0x50
 3888 0373 1C000000 		.4byte	.LVL74
 3889 0377 30000000 		.4byte	.LVL76
 3890 037b 0100     		.2byte	0x1
 3891 037d 54       		.byte	0x54
 3892 037e 30000000 		.4byte	.LVL76
 3893 0382 44000000 		.4byte	.LFE20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 109


 3894 0386 0400     		.2byte	0x4
 3895 0388 F3       		.byte	0xf3
 3896 0389 01       		.uleb128 0x1
 3897 038a 50       		.byte	0x50
 3898 038b 9F       		.byte	0x9f
 3899 038c 00000000 		.4byte	0
 3900 0390 00000000 		.4byte	0
 3901              	.LLST24:
 3902 0394 00000000 		.4byte	.LVL73
 3903 0398 1F000000 		.4byte	.LVL75-1
 3904 039c 0100     		.2byte	0x1
 3905 039e 51       		.byte	0x51
 3906 039f 1F000000 		.4byte	.LVL75-1
 3907 03a3 36000000 		.4byte	.LVL77
 3908 03a7 0100     		.2byte	0x1
 3909 03a9 55       		.byte	0x55
 3910 03aa 36000000 		.4byte	.LVL77
 3911 03ae 44000000 		.4byte	.LFE20
 3912 03b2 1E00     		.2byte	0x1e
 3913 03b4 03       		.byte	0x3
 3914 03b5 00000000 		.4byte	ADC_currentConfig
 3915 03b9 06       		.byte	0x6
 3916 03ba 33       		.byte	0x33
 3917 03bb 24       		.byte	0x24
 3918 03bc 03       		.byte	0x3
 3919 03bd 00000000 		.4byte	ADC_currentConfig
 3920 03c1 06       		.byte	0x6
 3921 03c2 1C       		.byte	0x1c
 3922 03c3 33       		.byte	0x33
 3923 03c4 24       		.byte	0x24
 3924 03c5 72       		.byte	0x72
 3925 03c6 00       		.sleb128 0
 3926 03c7 22       		.byte	0x22
 3927 03c8 06       		.byte	0x6
 3928 03c9 F3       		.byte	0xf3
 3929 03ca 01       		.uleb128 0x1
 3930 03cb 50       		.byte	0x50
 3931 03cc 22       		.byte	0x22
 3932 03cd 32       		.byte	0x32
 3933 03ce 24       		.byte	0x24
 3934 03cf 73       		.byte	0x73
 3935 03d0 00       		.sleb128 0
 3936 03d1 22       		.byte	0x22
 3937 03d2 00000000 		.4byte	0
 3938 03d6 00000000 		.4byte	0
 3939              	.LLST25:
 3940 03da 00000000 		.4byte	.LVL78
 3941 03de 10000000 		.4byte	.LVL80
 3942 03e2 0100     		.2byte	0x1
 3943 03e4 50       		.byte	0x50
 3944 03e5 10000000 		.4byte	.LVL80
 3945 03e9 80000000 		.4byte	.LVL95
 3946 03ed 0100     		.2byte	0x1
 3947 03ef 56       		.byte	0x56
 3948 03f0 80000000 		.4byte	.LVL95
 3949 03f4 94000000 		.4byte	.LFE21
 3950 03f8 0400     		.2byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 110


 3951 03fa F3       		.byte	0xf3
 3952 03fb 01       		.uleb128 0x1
 3953 03fc 50       		.byte	0x50
 3954 03fd 9F       		.byte	0x9f
 3955 03fe 00000000 		.4byte	0
 3956 0402 00000000 		.4byte	0
 3957              	.LLST26:
 3958 0406 00000000 		.4byte	.LVL78
 3959 040a 0A000000 		.4byte	.LVL79
 3960 040e 0100     		.2byte	0x1
 3961 0410 51       		.byte	0x51
 3962 0411 0A000000 		.4byte	.LVL79
 3963 0415 6A000000 		.4byte	.LVL89
 3964 0419 0400     		.2byte	0x4
 3965 041b F3       		.byte	0xf3
 3966 041c 01       		.uleb128 0x1
 3967 041d 51       		.byte	0x51
 3968 041e 9F       		.byte	0x9f
 3969 041f 6A000000 		.4byte	.LVL89
 3970 0423 6C000000 		.4byte	.LVL90
 3971 0427 0100     		.2byte	0x1
 3972 0429 54       		.byte	0x54
 3973 042a 6C000000 		.4byte	.LVL90
 3974 042e 76000000 		.4byte	.LVL92
 3975 0432 0400     		.2byte	0x4
 3976 0434 F3       		.byte	0xf3
 3977 0435 01       		.uleb128 0x1
 3978 0436 51       		.byte	0x51
 3979 0437 9F       		.byte	0x9f
 3980 0438 76000000 		.4byte	.LVL92
 3981 043c 80000000 		.4byte	.LVL94
 3982 0440 0100     		.2byte	0x1
 3983 0442 54       		.byte	0x54
 3984 0443 80000000 		.4byte	.LVL94
 3985 0447 94000000 		.4byte	.LFE21
 3986 044b 0100     		.2byte	0x1
 3987 044d 50       		.byte	0x50
 3988 044e 00000000 		.4byte	0
 3989 0452 00000000 		.4byte	0
 3990              	.LLST27:
 3991 0456 68000000 		.4byte	.LVL88
 3992 045a 6C000000 		.4byte	.LVL90
 3993 045e 0100     		.2byte	0x1
 3994 0460 50       		.byte	0x50
 3995 0461 00000000 		.4byte	0
 3996 0465 00000000 		.4byte	0
 3997              	.LLST28:
 3998 0469 46000000 		.4byte	.LVL83
 3999 046d 48000000 		.4byte	.LVL84
 4000 0471 0100     		.2byte	0x1
 4001 0473 51       		.byte	0x51
 4002 0474 48000000 		.4byte	.LVL84
 4003 0478 4C000000 		.4byte	.LVL85
 4004 047c 0300     		.2byte	0x3
 4005 047e 71       		.byte	0x71
 4006 047f 7F       		.sleb128 -1
 4007 0480 9F       		.byte	0x9f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 111


 4008 0481 4C000000 		.4byte	.LVL85
 4009 0485 76000000 		.4byte	.LVL92
 4010 0489 0100     		.2byte	0x1
 4011 048b 57       		.byte	0x57
 4012 048c 00000000 		.4byte	0
 4013 0490 00000000 		.4byte	0
 4014              	.LLST29:
 4015 0494 16000000 		.4byte	.LVL81
 4016 0498 78000000 		.4byte	.LVL93
 4017 049c 0100     		.2byte	0x1
 4018 049e 55       		.byte	0x55
 4019 049f 00000000 		.4byte	0
 4020 04a3 00000000 		.4byte	0
 4021              	.LLST30:
 4022 04a7 00000000 		.4byte	.LVL96
 4023 04ab 21000000 		.4byte	.LVL99-1
 4024 04af 0100     		.2byte	0x1
 4025 04b1 50       		.byte	0x50
 4026 04b2 21000000 		.4byte	.LVL99-1
 4027 04b6 42000000 		.4byte	.LVL105
 4028 04ba 0400     		.2byte	0x4
 4029 04bc F3       		.byte	0xf3
 4030 04bd 01       		.uleb128 0x1
 4031 04be 50       		.byte	0x50
 4032 04bf 9F       		.byte	0x9f
 4033 04c0 42000000 		.4byte	.LVL105
 4034 04c4 44000000 		.4byte	.LVL106
 4035 04c8 0100     		.2byte	0x1
 4036 04ca 50       		.byte	0x50
 4037 04cb 44000000 		.4byte	.LVL106
 4038 04cf 58000000 		.4byte	.LFE22
 4039 04d3 0400     		.2byte	0x4
 4040 04d5 F3       		.byte	0xf3
 4041 04d6 01       		.uleb128 0x1
 4042 04d7 50       		.byte	0x50
 4043 04d8 9F       		.byte	0x9f
 4044 04d9 00000000 		.4byte	0
 4045 04dd 00000000 		.4byte	0
 4046              	.LLST31:
 4047 04e1 00000000 		.4byte	.LVL96
 4048 04e5 21000000 		.4byte	.LVL99-1
 4049 04e9 0100     		.2byte	0x1
 4050 04eb 51       		.byte	0x51
 4051 04ec 21000000 		.4byte	.LVL99-1
 4052 04f0 22000000 		.4byte	.LVL99
 4053 04f4 0400     		.2byte	0x4
 4054 04f6 F3       		.byte	0xf3
 4055 04f7 01       		.uleb128 0x1
 4056 04f8 51       		.byte	0x51
 4057 04f9 9F       		.byte	0x9f
 4058 04fa 22000000 		.4byte	.LVL99
 4059 04fe 25000000 		.4byte	.LVL100-1
 4060 0502 0100     		.2byte	0x1
 4061 0504 50       		.byte	0x50
 4062 0505 42000000 		.4byte	.LVL105
 4063 0509 44000000 		.4byte	.LVL106
 4064 050d 0100     		.2byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 112


 4065 050f 51       		.byte	0x51
 4066 0510 00000000 		.4byte	0
 4067 0514 00000000 		.4byte	0
 4068              	.LLST32:
 4069 0518 02000000 		.4byte	.LVL97
 4070 051c 40000000 		.4byte	.LVL104
 4071 0520 0600     		.2byte	0x6
 4072 0522 9E       		.byte	0x9e
 4073 0523 04       		.uleb128 0x4
 4074 0524 00000000 		.4byte	0
 4075 0528 40000000 		.4byte	.LVL104
 4076 052c 42000000 		.4byte	.LVL105
 4077 0530 0100     		.2byte	0x1
 4078 0532 50       		.byte	0x50
 4079 0533 42000000 		.4byte	.LVL105
 4080 0537 44000000 		.4byte	.LVL106
 4081 053b 0600     		.2byte	0x6
 4082 053d 9E       		.byte	0x9e
 4083 053e 04       		.uleb128 0x4
 4084 053f 00000000 		.4byte	0
 4085 0543 44000000 		.4byte	.LVL106
 4086 0547 58000000 		.4byte	.LFE22
 4087 054b 0100     		.2byte	0x1
 4088 054d 50       		.byte	0x50
 4089 054e 00000000 		.4byte	0
 4090 0552 00000000 		.4byte	0
 4091              	.LLST33:
 4092 0556 12000000 		.4byte	.LVL98
 4093 055a 30000000 		.4byte	.LVL102
 4094 055e 0100     		.2byte	0x1
 4095 0560 54       		.byte	0x54
 4096 0561 42000000 		.4byte	.LVL105
 4097 0565 44000000 		.4byte	.LVL106
 4098 0569 0100     		.2byte	0x1
 4099 056b 54       		.byte	0x54
 4100 056c 00000000 		.4byte	0
 4101 0570 00000000 		.4byte	0
 4102              	.LLST34:
 4103 0574 00000000 		.4byte	.LVL107
 4104 0578 21000000 		.4byte	.LVL110-1
 4105 057c 0100     		.2byte	0x1
 4106 057e 50       		.byte	0x50
 4107 057f 21000000 		.4byte	.LVL110-1
 4108 0583 56000000 		.4byte	.LVL117
 4109 0587 0400     		.2byte	0x4
 4110 0589 F3       		.byte	0xf3
 4111 058a 01       		.uleb128 0x1
 4112 058b 50       		.byte	0x50
 4113 058c 9F       		.byte	0x9f
 4114 058d 56000000 		.4byte	.LVL117
 4115 0591 58000000 		.4byte	.LVL118
 4116 0595 0100     		.2byte	0x1
 4117 0597 50       		.byte	0x50
 4118 0598 58000000 		.4byte	.LVL118
 4119 059c 6C000000 		.4byte	.LFE23
 4120 05a0 0400     		.2byte	0x4
 4121 05a2 F3       		.byte	0xf3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 113


 4122 05a3 01       		.uleb128 0x1
 4123 05a4 50       		.byte	0x50
 4124 05a5 9F       		.byte	0x9f
 4125 05a6 00000000 		.4byte	0
 4126 05aa 00000000 		.4byte	0
 4127              	.LLST35:
 4128 05ae 00000000 		.4byte	.LVL107
 4129 05b2 21000000 		.4byte	.LVL110-1
 4130 05b6 0100     		.2byte	0x1
 4131 05b8 51       		.byte	0x51
 4132 05b9 21000000 		.4byte	.LVL110-1
 4133 05bd 22000000 		.4byte	.LVL110
 4134 05c1 0400     		.2byte	0x4
 4135 05c3 F3       		.byte	0xf3
 4136 05c4 01       		.uleb128 0x1
 4137 05c5 51       		.byte	0x51
 4138 05c6 9F       		.byte	0x9f
 4139 05c7 22000000 		.4byte	.LVL110
 4140 05cb 32000000 		.4byte	.LVL111
 4141 05cf 0100     		.2byte	0x1
 4142 05d1 50       		.byte	0x50
 4143 05d2 38000000 		.4byte	.LVL112
 4144 05d6 46000000 		.4byte	.LVL113
 4145 05da 0100     		.2byte	0x1
 4146 05dc 50       		.byte	0x50
 4147 05dd 56000000 		.4byte	.LVL117
 4148 05e1 58000000 		.4byte	.LVL118
 4149 05e5 0100     		.2byte	0x1
 4150 05e7 51       		.byte	0x51
 4151 05e8 00000000 		.4byte	0
 4152 05ec 00000000 		.4byte	0
 4153              	.LLST36:
 4154 05f0 02000000 		.4byte	.LVL108
 4155 05f4 54000000 		.4byte	.LVL116
 4156 05f8 0200     		.2byte	0x2
 4157 05fa 30       		.byte	0x30
 4158 05fb 9F       		.byte	0x9f
 4159 05fc 54000000 		.4byte	.LVL116
 4160 0600 56000000 		.4byte	.LVL117
 4161 0604 0100     		.2byte	0x1
 4162 0606 50       		.byte	0x50
 4163 0607 56000000 		.4byte	.LVL117
 4164 060b 58000000 		.4byte	.LVL118
 4165 060f 0200     		.2byte	0x2
 4166 0611 30       		.byte	0x30
 4167 0612 9F       		.byte	0x9f
 4168 0613 58000000 		.4byte	.LVL118
 4169 0617 6C000000 		.4byte	.LFE23
 4170 061b 0100     		.2byte	0x1
 4171 061d 50       		.byte	0x50
 4172 061e 00000000 		.4byte	0
 4173 0622 00000000 		.4byte	0
 4174              	.LLST37:
 4175 0626 12000000 		.4byte	.LVL109
 4176 062a 4A000000 		.4byte	.LVL114
 4177 062e 0100     		.2byte	0x1
 4178 0630 54       		.byte	0x54
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 114


 4179 0631 4A000000 		.4byte	.LVL114
 4180 0635 56000000 		.4byte	.LVL117
 4181 0639 1200     		.2byte	0x12
 4182 063b 75       		.byte	0x75
 4183 063c 00       		.sleb128 0
 4184 063d 33       		.byte	0x33
 4185 063e 24       		.byte	0x24
 4186 063f 75       		.byte	0x75
 4187 0640 00       		.sleb128 0
 4188 0641 1C       		.byte	0x1c
 4189 0642 33       		.byte	0x33
 4190 0643 24       		.byte	0x24
 4191 0644 76       		.byte	0x76
 4192 0645 00       		.sleb128 0
 4193 0646 22       		.byte	0x22
 4194 0647 06       		.byte	0x6
 4195 0648 F3       		.byte	0xf3
 4196 0649 01       		.uleb128 0x1
 4197 064a 50       		.byte	0x50
 4198 064b 22       		.byte	0x22
 4199 064c 9F       		.byte	0x9f
 4200 064d 56000000 		.4byte	.LVL117
 4201 0651 58000000 		.4byte	.LVL118
 4202 0655 0100     		.2byte	0x1
 4203 0657 54       		.byte	0x54
 4204 0658 58000000 		.4byte	.LVL118
 4205 065c 5A000000 		.4byte	.LVL119
 4206 0660 1200     		.2byte	0x12
 4207 0662 75       		.byte	0x75
 4208 0663 00       		.sleb128 0
 4209 0664 33       		.byte	0x33
 4210 0665 24       		.byte	0x24
 4211 0666 75       		.byte	0x75
 4212 0667 00       		.sleb128 0
 4213 0668 1C       		.byte	0x1c
 4214 0669 33       		.byte	0x33
 4215 066a 24       		.byte	0x24
 4216 066b 76       		.byte	0x76
 4217 066c 00       		.sleb128 0
 4218 066d 22       		.byte	0x22
 4219 066e 06       		.byte	0x6
 4220 066f F3       		.byte	0xf3
 4221 0670 01       		.uleb128 0x1
 4222 0671 50       		.byte	0x50
 4223 0672 22       		.byte	0x22
 4224 0673 9F       		.byte	0x9f
 4225 0674 00000000 		.4byte	0
 4226 0678 00000000 		.4byte	0
 4227              	.LLST38:
 4228 067c 00000000 		.4byte	.LVL120
 4229 0680 21000000 		.4byte	.LVL123-1
 4230 0684 0100     		.2byte	0x1
 4231 0686 50       		.byte	0x50
 4232 0687 21000000 		.4byte	.LVL123-1
 4233 068b 3A000000 		.4byte	.LVL127
 4234 068f 0400     		.2byte	0x4
 4235 0691 F3       		.byte	0xf3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 115


 4236 0692 01       		.uleb128 0x1
 4237 0693 50       		.byte	0x50
 4238 0694 9F       		.byte	0x9f
 4239 0695 3A000000 		.4byte	.LVL127
 4240 0699 3C000000 		.4byte	.LVL128
 4241 069d 0100     		.2byte	0x1
 4242 069f 50       		.byte	0x50
 4243 06a0 3C000000 		.4byte	.LVL128
 4244 06a4 50000000 		.4byte	.LFE24
 4245 06a8 0400     		.2byte	0x4
 4246 06aa F3       		.byte	0xf3
 4247 06ab 01       		.uleb128 0x1
 4248 06ac 50       		.byte	0x50
 4249 06ad 9F       		.byte	0x9f
 4250 06ae 00000000 		.4byte	0
 4251 06b2 00000000 		.4byte	0
 4252              	.LLST39:
 4253 06b6 00000000 		.4byte	.LVL120
 4254 06ba 21000000 		.4byte	.LVL123-1
 4255 06be 0100     		.2byte	0x1
 4256 06c0 51       		.byte	0x51
 4257 06c1 21000000 		.4byte	.LVL123-1
 4258 06c5 22000000 		.4byte	.LVL123
 4259 06c9 0400     		.2byte	0x4
 4260 06cb F3       		.byte	0xf3
 4261 06cc 01       		.uleb128 0x1
 4262 06cd 51       		.byte	0x51
 4263 06ce 9F       		.byte	0x9f
 4264 06cf 22000000 		.4byte	.LVL123
 4265 06d3 2B000000 		.4byte	.LVL124-1
 4266 06d7 0100     		.2byte	0x1
 4267 06d9 50       		.byte	0x50
 4268 06da 3A000000 		.4byte	.LVL127
 4269 06de 3C000000 		.4byte	.LVL128
 4270 06e2 0100     		.2byte	0x1
 4271 06e4 51       		.byte	0x51
 4272 06e5 00000000 		.4byte	0
 4273 06e9 00000000 		.4byte	0
 4274              	.LLST40:
 4275 06ed 02000000 		.4byte	.LVL121
 4276 06f1 38000000 		.4byte	.LVL126
 4277 06f5 0A00     		.2byte	0xa
 4278 06f7 9E       		.byte	0x9e
 4279 06f8 08       		.uleb128 0x8
 4280 06f9 00000000 		.8byte	0
 4280      00000000 
 4281 0701 3A000000 		.4byte	.LVL127
 4282 0705 3C000000 		.4byte	.LVL128
 4283 0709 0A00     		.2byte	0xa
 4284 070b 9E       		.byte	0x9e
 4285 070c 08       		.uleb128 0x8
 4286 070d 00000000 		.8byte	0
 4286      00000000 
 4287 0715 00000000 		.4byte	0
 4288 0719 00000000 		.4byte	0
 4289              	.LLST41:
 4290 071d 12000000 		.4byte	.LVL122
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 116


 4291 0721 2E000000 		.4byte	.LVL125
 4292 0725 0100     		.2byte	0x1
 4293 0727 54       		.byte	0x54
 4294 0728 2E000000 		.4byte	.LVL125
 4295 072c 3A000000 		.4byte	.LVL127
 4296 0730 1200     		.2byte	0x12
 4297 0732 75       		.byte	0x75
 4298 0733 00       		.sleb128 0
 4299 0734 33       		.byte	0x33
 4300 0735 24       		.byte	0x24
 4301 0736 75       		.byte	0x75
 4302 0737 00       		.sleb128 0
 4303 0738 1C       		.byte	0x1c
 4304 0739 33       		.byte	0x33
 4305 073a 24       		.byte	0x24
 4306 073b 76       		.byte	0x76
 4307 073c 00       		.sleb128 0
 4308 073d 22       		.byte	0x22
 4309 073e 06       		.byte	0x6
 4310 073f F3       		.byte	0xf3
 4311 0740 01       		.uleb128 0x1
 4312 0741 50       		.byte	0x50
 4313 0742 22       		.byte	0x22
 4314 0743 9F       		.byte	0x9f
 4315 0744 3A000000 		.4byte	.LVL127
 4316 0748 3C000000 		.4byte	.LVL128
 4317 074c 0100     		.2byte	0x1
 4318 074e 54       		.byte	0x54
 4319 074f 3C000000 		.4byte	.LVL128
 4320 0753 3C000000 		.4byte	.LVL129
 4321 0757 1200     		.2byte	0x12
 4322 0759 75       		.byte	0x75
 4323 075a 00       		.sleb128 0
 4324 075b 33       		.byte	0x33
 4325 075c 24       		.byte	0x24
 4326 075d 75       		.byte	0x75
 4327 075e 00       		.sleb128 0
 4328 075f 1C       		.byte	0x1c
 4329 0760 33       		.byte	0x33
 4330 0761 24       		.byte	0x24
 4331 0762 76       		.byte	0x76
 4332 0763 00       		.sleb128 0
 4333 0764 22       		.byte	0x22
 4334 0765 06       		.byte	0x6
 4335 0766 F3       		.byte	0xf3
 4336 0767 01       		.uleb128 0x1
 4337 0768 50       		.byte	0x50
 4338 0769 22       		.byte	0x22
 4339 076a 9F       		.byte	0x9f
 4340 076b 00000000 		.4byte	0
 4341 076f 00000000 		.4byte	0
 4342              	.LLST42:
 4343 0773 06000000 		.4byte	.LVL130
 4344 0777 10000000 		.4byte	.LVL131
 4345 077b 0200     		.2byte	0x2
 4346 077d 30       		.byte	0x30
 4347 077e 9F       		.byte	0x9f
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 117


 4348 077f 10000000 		.4byte	.LVL131
 4349 0783 BC000000 		.4byte	.LVL137
 4350 0787 0100     		.2byte	0x1
 4351 0789 54       		.byte	0x54
 4352 078a BC000000 		.4byte	.LVL137
 4353 078e C0000000 		.4byte	.LVL138
 4354 0792 0200     		.2byte	0x2
 4355 0794 30       		.byte	0x30
 4356 0795 9F       		.byte	0x9f
 4357 0796 C0000000 		.4byte	.LVL138
 4358 079a E4000000 		.4byte	.LVL142
 4359 079e 0100     		.2byte	0x1
 4360 07a0 54       		.byte	0x54
 4361 07a1 00000000 		.4byte	0
 4362 07a5 00000000 		.4byte	0
 4363              	.LLST43:
 4364 07a9 06000000 		.4byte	.LVL130
 4365 07ad 10000000 		.4byte	.LVL131
 4366 07b1 0200     		.2byte	0x2
 4367 07b3 30       		.byte	0x30
 4368 07b4 9F       		.byte	0x9f
 4369 07b5 10000000 		.4byte	.LVL131
 4370 07b9 BC000000 		.4byte	.LVL137
 4371 07bd 0100     		.2byte	0x1
 4372 07bf 57       		.byte	0x57
 4373 07c0 BC000000 		.4byte	.LVL137
 4374 07c4 C0000000 		.4byte	.LVL138
 4375 07c8 0200     		.2byte	0x2
 4376 07ca 30       		.byte	0x30
 4377 07cb 9F       		.byte	0x9f
 4378 07cc C0000000 		.4byte	.LVL138
 4379 07d0 E2000000 		.4byte	.LVL141
 4380 07d4 0100     		.2byte	0x1
 4381 07d6 57       		.byte	0x57
 4382 07d7 E2000000 		.4byte	.LVL141
 4383 07db F0000000 		.4byte	.LVL144
 4384 07df 0200     		.2byte	0x2
 4385 07e1 30       		.byte	0x30
 4386 07e2 9F       		.byte	0x9f
 4387 07e3 00000000 		.4byte	0
 4388 07e7 00000000 		.4byte	0
 4389              	.LLST44:
 4390 07eb 3A000000 		.4byte	.LVL132
 4391 07ef 86000000 		.4byte	.LVL133
 4392 07f3 0100     		.2byte	0x1
 4393 07f5 50       		.byte	0x50
 4394 07f6 00000000 		.4byte	0
 4395 07fa 00000000 		.4byte	0
 4396              	.LLST45:
 4397 07fe 00000000 		.4byte	.LVL148
 4398 0802 07000000 		.4byte	.LVL149-1
 4399 0806 0100     		.2byte	0x1
 4400 0808 50       		.byte	0x50
 4401 0809 07000000 		.4byte	.LVL149-1
 4402 080d 0E000000 		.4byte	.LVL151
 4403 0811 0100     		.2byte	0x1
 4404 0813 54       		.byte	0x54
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 118


 4405 0814 0E000000 		.4byte	.LVL151
 4406 0818 10000000 		.4byte	.LFE2
 4407 081c 0400     		.2byte	0x4
 4408 081e F3       		.byte	0xf3
 4409 081f 01       		.uleb128 0x1
 4410 0820 50       		.byte	0x50
 4411 0821 9F       		.byte	0x9f
 4412 0822 00000000 		.4byte	0
 4413 0826 00000000 		.4byte	0
 4414              	.LLST46:
 4415 082a 00000000 		.4byte	.LVL152
 4416 082e 0D000000 		.4byte	.LVL153-1
 4417 0832 0100     		.2byte	0x1
 4418 0834 50       		.byte	0x50
 4419 0835 0D000000 		.4byte	.LVL153-1
 4420 0839 5A000000 		.4byte	.LVL157
 4421 083d 0100     		.2byte	0x1
 4422 083f 55       		.byte	0x55
 4423 0840 5A000000 		.4byte	.LVL157
 4424 0844 70000000 		.4byte	.LFE5
 4425 0848 0400     		.2byte	0x4
 4426 084a F3       		.byte	0xf3
 4427 084b 01       		.uleb128 0x1
 4428 084c 50       		.byte	0x50
 4429 084d 9F       		.byte	0x9f
 4430 084e 00000000 		.4byte	0
 4431 0852 00000000 		.4byte	0
 4432              	.LLST47:
 4433 0856 00000000 		.4byte	.LVL152
 4434 085a 0D000000 		.4byte	.LVL153-1
 4435 085e 0100     		.2byte	0x1
 4436 0860 51       		.byte	0x51
 4437 0861 0D000000 		.4byte	.LVL153-1
 4438 0865 5A000000 		.4byte	.LVL157
 4439 0869 0100     		.2byte	0x1
 4440 086b 56       		.byte	0x56
 4441 086c 5A000000 		.4byte	.LVL157
 4442 0870 70000000 		.4byte	.LFE5
 4443 0874 0400     		.2byte	0x4
 4444 0876 F3       		.byte	0xf3
 4445 0877 01       		.uleb128 0x1
 4446 0878 51       		.byte	0x51
 4447 0879 9F       		.byte	0x9f
 4448 087a 00000000 		.4byte	0
 4449 087e 00000000 		.4byte	0
 4450              		.section	.debug_aranges,"",%progbits
 4451 0000 E4000000 		.4byte	0xe4
 4452 0004 0200     		.2byte	0x2
 4453 0006 00000000 		.4byte	.Ldebug_info0
 4454 000a 04       		.byte	0x4
 4455 000b 00       		.byte	0
 4456 000c 0000     		.2byte	0
 4457 000e 0000     		.2byte	0
 4458 0010 00000000 		.4byte	.LFB12
 4459 0014 58000000 		.4byte	.LFE12-.LFB12
 4460 0018 00000000 		.4byte	.LFB3
 4461 001c 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 119


 4462 0020 00000000 		.4byte	.LFB4
 4463 0024 FC000000 		.4byte	.LFE4-.LFB4
 4464 0028 00000000 		.4byte	.LFB6
 4465 002c 28000000 		.4byte	.LFE6-.LFB6
 4466 0030 00000000 		.4byte	.LFB8
 4467 0034 28000000 		.4byte	.LFE8-.LFB8
 4468 0038 00000000 		.4byte	.LFB9
 4469 003c 10000000 		.4byte	.LFE9-.LFB9
 4470 0040 00000000 		.4byte	.LFB10
 4471 0044 2C000000 		.4byte	.LFE10-.LFB10
 4472 0048 00000000 		.4byte	.LFB11
 4473 004c 38000000 		.4byte	.LFE11-.LFB11
 4474 0050 00000000 		.4byte	.LFB13
 4475 0054 54000000 		.4byte	.LFE13-.LFB13
 4476 0058 00000000 		.4byte	.LFB14
 4477 005c 64000000 		.4byte	.LFE14-.LFB14
 4478 0060 00000000 		.4byte	.LFB15
 4479 0064 1C000000 		.4byte	.LFE15-.LFB15
 4480 0068 00000000 		.4byte	.LFB16
 4481 006c 18000000 		.4byte	.LFE16-.LFB16
 4482 0070 00000000 		.4byte	.LFB17
 4483 0074 2C000000 		.4byte	.LFE17-.LFB17
 4484 0078 00000000 		.4byte	.LFB18
 4485 007c 2C000000 		.4byte	.LFE18-.LFB18
 4486 0080 00000000 		.4byte	.LFB19
 4487 0084 44000000 		.4byte	.LFE19-.LFB19
 4488 0088 00000000 		.4byte	.LFB20
 4489 008c 44000000 		.4byte	.LFE20-.LFB20
 4490 0090 00000000 		.4byte	.LFB21
 4491 0094 94000000 		.4byte	.LFE21-.LFB21
 4492 0098 00000000 		.4byte	.LFB22
 4493 009c 58000000 		.4byte	.LFE22-.LFB22
 4494 00a0 00000000 		.4byte	.LFB23
 4495 00a4 6C000000 		.4byte	.LFE23-.LFB23
 4496 00a8 00000000 		.4byte	.LFB24
 4497 00ac 50000000 		.4byte	.LFE24-.LFB24
 4498 00b0 00000000 		.4byte	.LFB25
 4499 00b4 18010000 		.4byte	.LFE25-.LFB25
 4500 00b8 00000000 		.4byte	.LFB26
 4501 00bc 30000000 		.4byte	.LFE26-.LFB26
 4502 00c0 00000000 		.4byte	.LFB1
 4503 00c4 24000000 		.4byte	.LFE1-.LFB1
 4504 00c8 00000000 		.4byte	.LFB2
 4505 00cc 10000000 		.4byte	.LFE2-.LFB2
 4506 00d0 00000000 		.4byte	.LFB5
 4507 00d4 70000000 		.4byte	.LFE5-.LFB5
 4508 00d8 00000000 		.4byte	.LFB7
 4509 00dc 44000000 		.4byte	.LFE7-.LFB7
 4510 00e0 00000000 		.4byte	0
 4511 00e4 00000000 		.4byte	0
 4512              		.section	.debug_ranges,"",%progbits
 4513              	.Ldebug_ranges0:
 4514 0000 00000000 		.4byte	.LFB12
 4515 0004 58000000 		.4byte	.LFE12
 4516 0008 00000000 		.4byte	.LFB3
 4517 000c 10000000 		.4byte	.LFE3
 4518 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 120


 4519 0014 FC000000 		.4byte	.LFE4
 4520 0018 00000000 		.4byte	.LFB6
 4521 001c 28000000 		.4byte	.LFE6
 4522 0020 00000000 		.4byte	.LFB8
 4523 0024 28000000 		.4byte	.LFE8
 4524 0028 00000000 		.4byte	.LFB9
 4525 002c 10000000 		.4byte	.LFE9
 4526 0030 00000000 		.4byte	.LFB10
 4527 0034 2C000000 		.4byte	.LFE10
 4528 0038 00000000 		.4byte	.LFB11
 4529 003c 38000000 		.4byte	.LFE11
 4530 0040 00000000 		.4byte	.LFB13
 4531 0044 54000000 		.4byte	.LFE13
 4532 0048 00000000 		.4byte	.LFB14
 4533 004c 64000000 		.4byte	.LFE14
 4534 0050 00000000 		.4byte	.LFB15
 4535 0054 1C000000 		.4byte	.LFE15
 4536 0058 00000000 		.4byte	.LFB16
 4537 005c 18000000 		.4byte	.LFE16
 4538 0060 00000000 		.4byte	.LFB17
 4539 0064 2C000000 		.4byte	.LFE17
 4540 0068 00000000 		.4byte	.LFB18
 4541 006c 2C000000 		.4byte	.LFE18
 4542 0070 00000000 		.4byte	.LFB19
 4543 0074 44000000 		.4byte	.LFE19
 4544 0078 00000000 		.4byte	.LFB20
 4545 007c 44000000 		.4byte	.LFE20
 4546 0080 00000000 		.4byte	.LFB21
 4547 0084 94000000 		.4byte	.LFE21
 4548 0088 00000000 		.4byte	.LFB22
 4549 008c 58000000 		.4byte	.LFE22
 4550 0090 00000000 		.4byte	.LFB23
 4551 0094 6C000000 		.4byte	.LFE23
 4552 0098 00000000 		.4byte	.LFB24
 4553 009c 50000000 		.4byte	.LFE24
 4554 00a0 00000000 		.4byte	.LFB25
 4555 00a4 18010000 		.4byte	.LFE25
 4556 00a8 00000000 		.4byte	.LFB26
 4557 00ac 30000000 		.4byte	.LFE26
 4558 00b0 00000000 		.4byte	.LFB1
 4559 00b4 24000000 		.4byte	.LFE1
 4560 00b8 00000000 		.4byte	.LFB2
 4561 00bc 10000000 		.4byte	.LFE2
 4562 00c0 00000000 		.4byte	.LFB5
 4563 00c4 70000000 		.4byte	.LFE5
 4564 00c8 00000000 		.4byte	.LFB7
 4565 00cc 44000000 		.4byte	.LFE7
 4566 00d0 00000000 		.4byte	0
 4567 00d4 00000000 		.4byte	0
 4568              		.section	.debug_line,"",%progbits
 4569              	.Ldebug_line0:
 4570 0000 AE030000 		.section	.debug_str,"MS",%progbits,1
 4570      02007600 
 4570      00000201 
 4570      FB0E0D00 
 4570      01010101 
 4571              	.LASF10:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 121


 4572 0000 75696E74 		.ascii	"uint16\000"
 4572      313600
 4573              	.LASF52:
 4574 0007 6368616E 		.ascii	"chanCount\000"
 4574      436F756E 
 4574      7400
 4575              	.LASF72:
 4576 0011 61646347 		.ascii	"adcGain\000"
 4576      61696E00 
 4577              	.LASF86:
 4578 0019 636F756E 		.ascii	"counts\000"
 4578      747300
 4579              	.LASF78:
 4580 0020 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4580      436F756E 
 4580      7473546F 
 4580      5F566F6C 
 4580      747300
 4581              	.LASF84:
 4582 0033 4144435F 		.ascii	"ADC_Init\000"
 4582      496E6974 
 4582      00
 4583              	.LASF94:
 4584 003c 4144435F 		.ascii	"ADC_currentConfig\000"
 4584      63757272 
 4584      656E7443 
 4584      6F6E6669 
 4584      6700
 4585              	.LASF48:
 4586 004e 4144435F 		.ascii	"ADC_SetEosMask\000"
 4586      53657445 
 4586      6F734D61 
 4586      736B00
 4587              	.LASF7:
 4588 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4588      206C6F6E 
 4588      6720756E 
 4588      7369676E 
 4588      65642069 
 4589              	.LASF101:
 4590 0074 4144435F 		.ascii	"ADC_InputsPlacement\000"
 4590      496E7075 
 4590      7473506C 
 4590      6163656D 
 4590      656E7400 
 4591              	.LASF44:
 4592 0088 4144435F 		.ascii	"ADC_StartConvert\000"
 4592      53746172 
 4592      74436F6E 
 4592      76657274 
 4592      00
 4593              	.LASF6:
 4594 0099 6C6F6E67 		.ascii	"long long int\000"
 4594      206C6F6E 
 4594      6720696E 
 4594      7400
 4595              	.LASF0:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 122


 4596 00a7 7369676E 		.ascii	"signed char\000"
 4596      65642063 
 4596      68617200 
 4597              	.LASF35:
 4598 00b3 636C6B44 		.ascii	"clkDivider\000"
 4598      69766964 
 4598      657200
 4599              	.LASF13:
 4600 00be 696E7433 		.ascii	"int32\000"
 4600      3200
 4601              	.LASF91:
 4602 00c4 4144435F 		.ascii	"ADC_SelectConfig\000"
 4602      53656C65 
 4602      6374436F 
 4602      6E666967 
 4602      00
 4603              	.LASF67:
 4604 00d5 4144435F 		.ascii	"ADC_SetSatMask\000"
 4604      53657453 
 4604      61744D61 
 4604      736B00
 4605              	.LASF4:
 4606 00e4 6C6F6E67 		.ascii	"long int\000"
 4606      20696E74 
 4606      00
 4607              	.LASF82:
 4608 00ed 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4608      436F756E 
 4608      7473546F 
 4608      5F75566F 
 4608      6C747300 
 4609              	.LASF99:
 4610 0101 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 4610      636F756E 
 4610      74735065 
 4610      72313056 
 4610      6F6C7400 
 4611              	.LASF73:
 4612 0115 4144435F 		.ascii	"ADC_RawCounts2Counts\000"
 4612      52617743 
 4612      6F756E74 
 4612      7332436F 
 4612      756E7473 
 4613              	.LASF9:
 4614 012a 75696E74 		.ascii	"uint8\000"
 4614      3800
 4615              	.LASF105:
 4616 0130 43794465 		.ascii	"CyDelayUs\000"
 4616      6C617955 
 4616      7300
 4617              	.LASF16:
 4618 013a 646F7562 		.ascii	"double\000"
 4618      6C6500
 4619              	.LASF58:
 4620 0141 4144435F 		.ascii	"ADC_GetResult32\000"
 4620      47657452 
 4620      6573756C 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 123


 4620      74333200 
 4621              	.LASF36:
 4622 0151 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 4622      434F4E46 
 4622      49475F53 
 4622      54525543 
 4622      5400
 4623              	.LASF26:
 4624 0163 73616D70 		.ascii	"sampleTime01\000"
 4624      6C655469 
 4624      6D653031 
 4624      00
 4625              	.LASF11:
 4626 0170 75696E74 		.ascii	"uint32\000"
 4626      333200
 4627              	.LASF110:
 4628 0177 4379496E 		.ascii	"CyIntSetVector\000"
 4628      74536574 
 4628      56656374 
 4628      6F7200
 4629              	.LASF49:
 4630 0186 6D61736B 		.ascii	"mask\000"
 4630      00
 4631              	.LASF96:
 4632 018b 4144435F 		.ascii	"ADC_initVar\000"
 4632      696E6974 
 4632      56617200 
 4633              	.LASF75:
 4634 0197 74656D70 		.ascii	"temp\000"
 4634      00
 4635              	.LASF53:
 4636 019c 7265744D 		.ascii	"retMode\000"
 4636      6F646500 
 4637              	.LASF65:
 4638 01a4 4144435F 		.ascii	"ADC_SetLimitMask\000"
 4638      5365744C 
 4638      696D6974 
 4638      4D61736B 
 4638      00
 4639              	.LASF8:
 4640 01b5 756E7369 		.ascii	"unsigned int\000"
 4640      676E6564 
 4640      20696E74 
 4640      00
 4641              	.LASF31:
 4642 01c2 72616E67 		.ascii	"rangeIntMask\000"
 4642      65496E74 
 4642      4D61736B 
 4642      00
 4643              	.LASF85:
 4644 01cf 636F6E66 		.ascii	"configNum\000"
 4644      69674E75 
 4644      6D00
 4645              	.LASF5:
 4646 01d9 6C6F6E67 		.ascii	"long unsigned int\000"
 4646      20756E73 
 4646      69676E65 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 124


 4646      6420696E 
 4646      7400
 4647              	.LASF42:
 4648 01eb 746D7052 		.ascii	"tmpRegVal\000"
 4648      65675661 
 4648      6C00
 4649              	.LASF51:
 4650 01f5 656E6162 		.ascii	"enableMask\000"
 4650      6C654D61 
 4650      736B00
 4651              	.LASF76:
 4652 0200 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4652      61676541 
 4652      64635361 
 4652      6D706C65 
 4652      73446976 
 4653              	.LASF3:
 4654 0215 73686F72 		.ascii	"short unsigned int\000"
 4654      7420756E 
 4654      7369676E 
 4654      65642069 
 4654      6E7400
 4655              	.LASF28:
 4656 0228 72616E67 		.ascii	"rangeThres\000"
 4656      65546872 
 4656      657300
 4657              	.LASF93:
 4658 0233 4144435F 		.ascii	"ADC_StopConvert\000"
 4658      53746F70 
 4658      436F6E76 
 4658      65727400 
 4659              	.LASF60:
 4660 0243 66696E61 		.ascii	"finalResult\000"
 4660      6C526573 
 4660      756C7400 
 4661              	.LASF66:
 4662 024f 6C696D69 		.ascii	"limitMask\000"
 4662      744D6173 
 4662      6B00
 4663              	.LASF77:
 4664 0259 72617743 		.ascii	"rawChannel\000"
 4664      68616E6E 
 4664      656C00
 4665              	.LASF23:
 4666 0264 6E756D43 		.ascii	"numChannels\000"
 4666      68616E6E 
 4666      656C7300 
 4667              	.LASF38:
 4668 0270 6368616E 		.ascii	"chanConfig\000"
 4668      436F6E66 
 4668      696700
 4669              	.LASF19:
 4670 027b 72656733 		.ascii	"reg32\000"
 4670      3200
 4671              	.LASF37:
 4672 0281 69735369 		.ascii	"isSigned\000"
 4672      676E6564 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 125


 4672      00
 4673              	.LASF57:
 4674 028a 61646352 		.ascii	"adcResult\000"
 4674      6573756C 
 4674      7400
 4675              	.LASF46:
 4676 0294 4144435F 		.ascii	"ADC_SetConvertMode\000"
 4676      53657443 
 4676      6F6E7665 
 4676      72744D6F 
 4676      646500
 4677              	.LASF14:
 4678 02a7 666C6F61 		.ascii	"float32\000"
 4678      74333200 
 4679              	.LASF21:
 4680 02af 73697A65 		.ascii	"sizetype\000"
 4680      74797065 
 4680      00
 4681              	.LASF62:
 4682 02b8 6C6F774C 		.ascii	"lowLimit\000"
 4682      696D6974 
 4682      00
 4683              	.LASF63:
 4684 02c1 4144435F 		.ascii	"ADC_SetHighLimit\000"
 4684      53657448 
 4684      6967684C 
 4684      696D6974 
 4684      00
 4685              	.LASF90:
 4686 02d2 61646472 		.ascii	"address\000"
 4686      65737300 
 4687              	.LASF109:
 4688 02da 4144435F 		.ascii	"ADC_IsChannelSigned\000"
 4688      49734368 
 4688      616E6E65 
 4688      6C536967 
 4688      6E656400 
 4689              	.LASF27:
 4690 02ee 73616D70 		.ascii	"sampleTime23\000"
 4690      6C655469 
 4690      6D653233 
 4690      00
 4691              	.LASF32:
 4692 02fb 73617449 		.ascii	"satIntMask\000"
 4692      6E744D61 
 4692      736B00
 4693              	.LASF55:
 4694 0306 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4694      4973456E 
 4694      64436F6E 
 4694      76657273 
 4694      696F6E00 
 4695              	.LASF45:
 4696 031a 4144435F 		.ascii	"ADC_InitConfig\000"
 4696      496E6974 
 4696      436F6E66 
 4696      696700
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 126


 4697              	.LASF68:
 4698 0329 7361744D 		.ascii	"satMask\000"
 4698      61736B00 
 4699              	.LASF17:
 4700 0331 696E7436 		.ascii	"int64\000"
 4700      3400
 4701              	.LASF104:
 4702 0337 4379496E 		.ascii	"CyIntSetPriority\000"
 4702      74536574 
 4702      5072696F 
 4702      72697479 
 4702      00
 4703              	.LASF50:
 4704 0348 4144435F 		.ascii	"ADC_SetChanMask\000"
 4704      53657443 
 4704      68616E4D 
 4704      61736B00 
 4705              	.LASF107:
 4706 0358 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 4706      72617465 
 4706      645F536F 
 4706      75726365 
 4706      5C50536F 
 4707              	.LASF71:
 4708 0375 4144435F 		.ascii	"ADC_SetGain\000"
 4708      53657447 
 4708      61696E00 
 4709              	.LASF15:
 4710 0381 666C6F61 		.ascii	"float\000"
 4710      7400
 4711              	.LASF64:
 4712 0387 68696768 		.ascii	"highLimit\000"
 4712      4C696D69 
 4712      7400
 4713              	.LASF80:
 4714 0391 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4714      436F756E 
 4714      7473546F 
 4714      5F6D566F 
 4714      6C747300 
 4715              	.LASF30:
 4716 03a5 6368616E 		.ascii	"chanEn\000"
 4716      456E00
 4717              	.LASF61:
 4718 03ac 4144435F 		.ascii	"ADC_SetLowLimit\000"
 4718      5365744C 
 4718      6F774C69 
 4718      6D697400 
 4719              	.LASF103:
 4720 03bc 43794861 		.ascii	"CyHalt\000"
 4720      6C7400
 4721              	.LASF1:
 4722 03c3 756E7369 		.ascii	"unsigned char\000"
 4722      676E6564 
 4722      20636861 
 4722      7200
 4723              	.LASF98:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 127


 4724 03d1 4144435F 		.ascii	"ADC_offset\000"
 4724      6F666673 
 4724      657400
 4725              	.LASF2:
 4726 03dc 73686F72 		.ascii	"short int\000"
 4726      7420696E 
 4726      7400
 4727              	.LASF102:
 4728 03e6 4144435F 		.ascii	"ADC_intSarClock_SetFractionalDividerRegister\000"
 4728      696E7453 
 4728      6172436C 
 4728      6F636B5F 
 4728      53657446 
 4729              	.LASF43:
 4730 0413 4144435F 		.ascii	"ADC_Stop\000"
 4730      53746F70 
 4730      00
 4731              	.LASF79:
 4732 041c 72657375 		.ascii	"result_Volts\000"
 4732      6C745F56 
 4732      6F6C7473 
 4732      00
 4733              	.LASF59:
 4734 0429 61646352 		.ascii	"adcResult16\000"
 4734      6573756C 
 4734      74313600 
 4735              	.LASF41:
 4736 0435 63684E75 		.ascii	"chNum\000"
 4736      6D00
 4737              	.LASF33:
 4738 043b 76726566 		.ascii	"vrefMvValue\000"
 4738      4D765661 
 4738      6C756500 
 4739              	.LASF39:
 4740 0447 6368616E 		.ascii	"chan\000"
 4740      00
 4741              	.LASF18:
 4742 044c 63686172 		.ascii	"char\000"
 4742      00
 4743              	.LASF47:
 4744 0451 6D6F6465 		.ascii	"mode\000"
 4744      00
 4745              	.LASF20:
 4746 0456 63796973 		.ascii	"cyisraddress\000"
 4746      72616464 
 4746      72657373 
 4746      00
 4747              	.LASF100:
 4748 0463 4144435F 		.ascii	"ADC_allConfigs\000"
 4748      616C6C43 
 4748      6F6E6669 
 4748      677300
 4749              	.LASF40:
 4750 0472 636F6E66 		.ascii	"config\000"
 4750      696700
 4751              	.LASF95:
 4752 0479 4144435F 		.ascii	"ADC_channelsConfig\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 128


 4752      6368616E 
 4752      6E656C73 
 4752      436F6E66 
 4752      696700
 4753              	.LASF97:
 4754 048c 4144435F 		.ascii	"ADC_selected\000"
 4754      73656C65 
 4754      63746564 
 4754      00
 4755              	.LASF89:
 4756 0499 4144435F 		.ascii	"ADC_StartEx\000"
 4756      53746172 
 4756      74457800 
 4757              	.LASF83:
 4758 04a5 72657375 		.ascii	"result_uVolts\000"
 4758      6C745F75 
 4758      566F6C74 
 4758      7300
 4759              	.LASF92:
 4760 04b3 72657374 		.ascii	"restart\000"
 4760      61727400 
 4761              	.LASF70:
 4762 04bb 6F666673 		.ascii	"offset\000"
 4762      657400
 4763              	.LASF24:
 4764 04c2 6374726C 		.ascii	"ctrl\000"
 4764      00
 4765              	.LASF34:
 4766 04c7 6D697363 		.ascii	"miscConfig\000"
 4766      436F6E66 
 4766      696700
 4767              	.LASF74:
 4768 04d2 61646343 		.ascii	"adcCounts\000"
 4768      6F756E74 
 4768      7300
 4769              	.LASF88:
 4770 04dc 4144435F 		.ascii	"ADC_Start\000"
 4770      53746172 
 4770      7400
 4771              	.LASF29:
 4772 04e6 72616E67 		.ascii	"rangeCond\000"
 4772      65436F6E 
 4772      6400
 4773              	.LASF87:
 4774 04f0 4144435F 		.ascii	"ADC_Enable\000"
 4774      456E6162 
 4774      6C6500
 4775              	.LASF108:
 4776 04fb 433A5C47 		.ascii	"C:\\Git\\WA101\\projects\\PSoC\\WA101_AnalogCoProce"
 4776      69745C57 
 4776      41313031 
 4776      5C70726F 
 4776      6A656374 
 4777 0529 73736F72 		.ascii	"ssor\\WA101_AnalogCoProcessor.cydsn\000"
 4777      5C574131 
 4777      30315F41 
 4777      6E616C6F 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccqyuFEf.s 			page 129


 4777      67436F50 
 4778              	.LASF25:
 4779 054c 73616D70 		.ascii	"sampleCtrl\000"
 4779      6C654374 
 4779      726C00
 4780              	.LASF12:
 4781 0557 696E7431 		.ascii	"int16\000"
 4781      3600
 4782              	.LASF81:
 4783 055d 72657375 		.ascii	"result_mVolts\000"
 4783      6C745F6D 
 4783      566F6C74 
 4783      7300
 4784              	.LASF69:
 4785 056b 4144435F 		.ascii	"ADC_SetOffset\000"
 4785      5365744F 
 4785      66667365 
 4785      7400
 4786              	.LASF111:
 4787 0579 4144435F 		.ascii	"ADC_IRQ_StartEx\000"
 4787      4952515F 
 4787      53746172 
 4787      74457800 
 4788              	.LASF22:
 4789 0589 6368616E 		.ascii	"channelBase\000"
 4789      6E656C42 
 4789      61736500 
 4790              	.LASF54:
 4791 0595 656E644F 		.ascii	"endOfConversion\000"
 4791      66436F6E 
 4791      76657273 
 4791      696F6E00 
 4792              	.LASF106:
 4793 05a5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4793      4320342E 
 4793      392E3320 
 4793      32303135 
 4793      30333033 
 4794 05d8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4794      20726576 
 4794      6973696F 
 4794      6E203232 
 4794      31323230 
 4795 060b 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4795      67202D66 
 4795      66756E63 
 4795      74696F6E 
 4795      2D736563 
 4796              	.LASF56:
 4797 0637 4144435F 		.ascii	"ADC_GetResult16\000"
 4797      47657452 
 4797      6573756C 
 4797      74313600 
 4798              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
